[{"content":"最近突然想起来，我的 NAS 应用很久都没收到更新了。按照威联通的更新频率不应该，于是去官网的 App Center 看了下，发现最新版本的应用已经屏蔽了 QTS 4.4 系统。手动下载安装是可以，但是在 NAS 的 App Center 上是不会检查到更新的。距离上一次升级 QTS 系统差不多快一年了，于是心血来潮就升级了。\n备份资料 升级之前还是要备份好重要资料和 NAS 设置。威联通的 NAS 每次重启会清空 hosts，建议修改过的备份一下。还有手动设置的符号链接可能会失效，建议升级完后重新设置。目前看手动设置的 crontab 任务不会被清空。\n备份设置备份设置\n\" 备份设置  升级系统 不使用在线更新，从官网上下载最新的固件更新，避免网络问题带来的更新失败。威联通的系统更新重启 15-30 分钟是很正常的时长，所以耐心等待即可，具体时间的长短由装的应用数量多少决定。\n升级系统升级系统\n\" 升级系统  注意事项 升级后，默认的管理员登录 SSH 每次会开启新的所谓 Console Management 界面，按 Q 则退出回到正常的传统 shell 界面。\n如果不需要这个功能，可以在控制台关闭。\n也可以编辑 /etc/profile 修改，注释下面一行内容。可以搜索 qts-console-mgmt 关键词找到，不过不建议这样修改。\n1  [[ \u0026#34;admin\u0026#34; = \u0026#34;$USER\u0026#34; ]] \u0026amp;\u0026amp; [[ \u0026#34;TRUE\u0026#34; == \u0026#34;$(getcfg -f /etc/config/uLinux.conf -d TRUE \u0026#39;Console Mgmt\u0026#39; \u0026#39;Auto Launch\u0026#39;)\u0026#34; ]] \u0026amp;\u0026amp; /sbin/qts-console-mgmt -f   Console Management 界面Console Management 界面\n\" Console Management 界面  关闭 Console Management关闭 Console Management\n\" 关闭 Console Management  从 4.5.1 之后，QTS 对没有数字签名的应用检查更加严格。我手上这台 453Bmini 所有没有数字签名的应用都直接被禁用了，手动启用后也还是会被禁用。简单测试了下，只要我不用浏览器登录 WEB 管理界面，这些应用就不会被禁用。后来联系了威联通的工程师，排查了考虑可能是 App Center 设置的允许在没有有效数字签名的情况下安装程序没有勾选（我记得以前一直是不勾选，而且这个好像也只影响手动安装应用）或者 Malware Remover 的扫描任务引起的。工程师把这两个都设置好，观察了一段时间，后来确实没有再发现应用被禁用，这件事就算告一段落了。\n 相关链接：\n reddit 论坛关于 Console Management 的讨论 qnap 论坛关于 Console Management 的讨论 reddit 论坛关于第三方应用被禁用的讨论 emby 论坛关于未签名应用的讨论 ","date":"2021-03-03","description":"升级 QTS","tags":"威联通\nQNAP\nQTS\nAppCenter\n数字签名","title":"威联通：升级 QTS 4.5.2 踩坑记","uri":"/2021/03/tips-for-upgrading-to-qts-4.5.2/"},{"content":"闲来无事，给 NAS 装个内网测速服务。利用到的项目是 speedtest。\n安装过程 👉官方安装指南\n首先参考 这篇博文 开启 Web 服务器，并修改 php.ini，在最后一行加入 extension = pdo_mysql.so 以启用 PDO 模块。威联通已经自带项目所需要的 Apache 服务、PHP 服务和 MariaDB 等服务。\n将项目下载下来，放到 /share/Web 目录，具体以 NAS 型号为准。\n然后通过 phpMyAdmin 应用登录数据库管理后台新建一个数据库，命名为 speedtest，然后将项目 results 文件夹里面的 telemetry_mysql.sql 导入 speedtest 数据库。导入成功以后，就会看到 speedtest 数据库中出现 speedtest_users 数据表。\n接着打开 results 文件夹里面的 telemetry_settings.php，配置数据库设置：\n1 2 3 4 5 6 7 8 9 10 11 12  $db_type = \u0026#39;mysql\u0026#39;; $stats_password = \u0026#39;修改成你要设置的密码\u0026#39;; $enable_id_obfuscation = false; // 混淆测试 ID，保护隐私，根据自己需要是否设置为 true $redact_ip_addresses = false; // 移除分享结果中的 IP 地址显示，保护隐私，根据自己需要是否设置为 true $Sqlite_db_file = \u0026#39;../../speedtest_telemetry.sql\u0026#39;; $MySql_username = \u0026#39;你的数据库用户名\u0026#39;; $MySql_password = \u0026#39;你的数据库密码\u0026#39;; $MySql_hostname = \u0026#39;localhost\u0026#39;; // 一般为 localhost 不用修改 $MySql_databasename = \u0026#39;speedtest\u0026#39;; // 与你自己新建的数据库名字保持一致 $MySql_port = \u0026#39;3306\u0026#39;;   项目根目录下面有很多 example 开头的首页模板文件，可以根据自己的需求将其重命名为 index.html 作为首页，不同的模板具有不同的样式和功能，可以尝试在浏览器都打开看看效果。\n内网自己用的话选择单服务器 example-singleServer-full.html 完整功能模板或者 example-singleServer-pretty.html 不带分享功能美化模板。\n汉化文本 项目默认都是英文的，可以自己修改。首页直接修改上面的模板文件里的内容即可。\n测速数据统计页面 results/stats.php 也可以修改汉化。\n分享结果的图片页面上的文字修改 results/index.php，\n1 2 3 4 5 6 7  $MBPS_TEXT = \u0026#39;Mbps\u0026#39;; $MS_TEXT = \u0026#39;ms\u0026#39;; $PING_TEXT = \u0026#39;延时\u0026#39;; $JIT_TEXT = \u0026#39;抖动\u0026#39;; $DL_TEXT = \u0026#39;下载\u0026#39;; $UL_TEXT = \u0026#39;上传\u0026#39;; $WATERMARK_TEXT = \u0026#39;blog.233so.com\u0026#39;;   默认的字体是 OpenSans-Light 和 OpenSans-Semibold，不包含中文，所以需要从电脑上复制一个支持中文显示的字体到 results 目录。如果不是 ttf 字体记得把字体后缀改成 ttf。\n然后修改相应中文对应的字体设置项，比如如下标题文字都改成了 sarasa-mono-sc-regular 字体：\n1 2 3 4 5 6  $FONT_LABEL = tryFont(\u0026#39;sarasa-mono-sc-regular\u0026#39;); $FONT_METER = tryFont(\u0026#39;OpenSans-Light\u0026#39;); $FONT_MEASURE = tryFont(\u0026#39;OpenSans-Semibold\u0026#39;); $FONT_ISP = tryFont(\u0026#39;OpenSans-Semibold\u0026#39;); $FONT_TIMESTAMP = tryFont(\u0026#34;OpenSans-Light\u0026#34;); $FONT_WATERMARK = tryFont(\u0026#39;OpenSans-Light\u0026#39;);   分享结果分享结果\n\" 分享结果     设置项 说明     $FONT_LABEL 对应项目标题文字   $FONT_METER 对应测试结果数字   $FONT_MEASURE 对应测试结果单位   $FONT_ISP 对应 ISP 信息文字   $FONT_TIMESTAMP 对应测试时间文字   $FONT_WATERMARK 对应右下角水印文字    如果需要安卓端的测速应用来连接自己的服务器，可以通过 speedtest-android 项目自己配置编译一个。\n","date":"2021-02-26","description":"测速服务","tags":"Speedtest\n测速\n威联通\nQNAP","title":"威联通：搭建 Speedtest 内网测速服务","uri":"/2021/02/qnap-selfhost-speedtest-service-in-local-network/"},{"content":"WSL 刚出来的时候开启过，后来就再也没用过了。最近不想在 QNAP 上直接测试脚本，免得出事，所以想搞下 WSL2。没想到按照官方的操作手册，最后启动 Ubuntu 发行版就是报错：WslRegisterDistribution failed with error: 0x80370102。\n按照官方的排查指南，0x80370102 这个错误代码就是说没有在 BIOS 内开启虚拟化。而事实上，我能够确定是肯定开启的。手上的 Matebook 默认开启虚拟化，进了 BIOS 查看也确实如此。不管是任务管理器的 CPU 信息，还是 msinfo32 的系统信息都显示虚拟化功能正常。\nCPU 信息CPU 信息\n\" CPU 信息  那么是不是 WSL2 所需要的功能没有正确开启呢？在“程序与功能”的“启用或关闭 Windows 功能”菜单中确认 Hyper-V、Linux 子系统和虚拟机平台都已经勾选，不存在问题。\n网上的方案大多数都是说叫你去开启 BIOS 的虚拟化，但是都不适用。正当我没办法的时候，去 WSL 的 Github 项目搜了这个错误代码，找到了唯一的结果，其中有一个高票回复确实有用。\n就是通过管理员运行下面这行代码启用 Hyper-V 服务，然后重启计算机，再进入已经安装的 WSL2 发行版就没有问题了。\nbcdedit /set hypervisorlaunchtype auto\n看到这行代码的时候，其实我已经大概明白是怎么回事了。之前用过网易的模拟器玩阴阳师，和 Hyper-V 服务有冲突，所以关闭了，估计这也是“启用或关闭 Windows 功能”的 Hyper-V 勾选不起作用的原因。\n完整的 WSL2 安装步骤请务必按照官方手册去进行。\n","date":"2021-02-25","description":"WSL2安装","tags":"WSL\nLinux\nHyper-V\n虚拟机\n虚拟化","title":"安装 WSL2 80370102 错误解决办法","uri":"/2021/02/fix-wslregisterdistribution-failed-with-error-80370102/"},{"content":"手上有一块差不多去年这个时候购买的海康威视 C2000 Pro 固态硬盘，容量是 2T，方案是慧荣 SM2262EN 主控 + 紫光颗粒（据说是打标的 INTEL 颗粒）。当然，后来海康的事情很多人应该也知道了，再一次偷偷更换颗粒方案，好像现在的产品是打海康标的不知道什么来源颗粒。\n今天闲着也是闲着，把它从移动硬盘盒子里拆出来准备替换掉 Matebook X Pro 2019 上那可怜的只有 512G 的固态硬盘 SN720（OEM 版西数黑盘），容量升级，性能降级，稳定堪忧，简称作死小能手。\n准备工作 首先，迁移原系统到新硬盘上。使用免费版的 DiskGeinus 就可以，当然用专业版的硬盘复制功能可能会更好。系统迁移的话，新硬盘比旧硬盘多出来的容量默认不分配，需要后面手动合并。如果是三星固态硬盘的话，可以使用其官方的迁移工具 Samsung Data Migration。\n注意 记住千万保证原硬盘数据不要丢失，这样即使失败了也可以回到原厂状态。  我用的是雷电 3 硬盘盒，已经占用 107G 的原系统迁移了 15 分钟多，如果用普通的 USB 协议的话可能还要更久。\n本来迁移完成想重启测试下能否进入新系统，免得拆机装好了结果进不去就尴尬了。重启完 F12 进入新硬盘，BOOM，直接蓝屏了。蓝屏错误代码是DRIVER_VERIFIER_DMA_VIOLATION，搜索了下好像是 NVME SSD 驱动或者雷电接口的问题。好家伙，我这情况直接全中。\n又查了下，得知微软的补丁 KB4586853 已经修复了这个问题，然而这个补丁只是针对 TH2 或者说 2004 之后版本的，之前的版本不会受到这个 BUG 影响。我当时就傻了，我这 1909 的版本咋就中招了呢，分析蓝屏 dump 文件就算了，没有意义，不耗时间直接拆机强上了。\n开始拆机 需要用到的工具：螺丝刀工具套、撬片（废弃的银行卡、门禁卡、饭卡）、螺丝收纳盒（纸盒）\n警告 关机、切断电源。  底面外壳 底面外壳分为上下两排共 8 个螺丝，有长短之分，靠近触摸板一侧为短，靠近出风口一侧为长。用 T4 或者 T5H 就可以轻松拧下。2019 款的脚垫里没有螺丝，省了吹风机或者热风枪这一步。\n卸下底面所有螺丝后，从靠近触摸板一侧开始慢慢撬卡扣，小心为上，避免大力出奇迹。当前面及两侧所有卡扣松开之后，后面出风口的位置中间要稍微杠杆用力撬一下，慢慢地发力掰开外壳，因为外壳正中央和散热模组连着一个该死的卡扣。\n拆卸散热模组 2019 款的固态硬盘仓位出口被卡扣挡着，不能直接卸下螺丝抽出来，需要拆卸散热模组。散热模组这边的大问题是螺丝一共有 4 种规格，共 21 颗，使用 PH00 就可以轻松拧下。一定要提前拍好照，记下位置，然后分门别类。\n硬盘仓位裸露前硬盘仓位裸露前\n\" 硬盘仓位裸露前  散热模组拆卸前散热模组拆卸前\n\" 散热模组拆卸前  散热模组拆卸后散热模组拆卸后\n\" 散热模组拆卸后  更换硬盘 卸下散热模组后，硬盘仓位就完整地露出来了。卸下硬盘固定螺丝（有贴纸贴着），轻轻提起抽出硬盘来，把 C2000 Pro 换上，固定好螺丝。最后按照记下的螺丝位置重新组装好散热模组和底部外壳即可。\n注意散热模组一定要对准位置固定好，没有装好或者弄掉了上面的硅脂、导热垫会影响到散热，要更换新的上去。我更换的硬盘好像是双面颗粒的（原装单面颗粒），会导致散热模组比原装的时候有一点点突起，螺丝可以稍微拧紧一点，但也要注意避免大力出奇迹。\n大力出奇迹的后果就是断卡扣，不过最后检查一遍好像也不影响密封性。\n大力出奇迹大力出奇迹\n\" 大力出奇迹  后记 恢复原样后，插电、开机，屏幕轻松点亮。指纹测试正常，触摸板正常，屏幕触摸正常，华为多屏协同正常，待机状态风扇没有启动，完美。\n","date":"2021-02-24","description":"更换硬盘","tags":"Matebook\n拆机\n海康存储\n固态硬盘","title":"Matebook X Pro 2019 固态硬盘扩容手记","uri":"/2021/02/replace-the-default-ssd-drive-of-matebook-x-pro-2019/"},{"content":"DaVinci Resolve（达芬奇）是一款在同一个软件工具中，将剪辑、调色、视觉特效、动态图形和音频后期制作融于一身的解决方案！它采用美观新颖的界面设计，易学易用，能让新手用户快速上手操作，还能提供专业人士需要的强大性能。有了 DaVinci Resolve，您无需学习使用多款软件工具，也不用在多款软件之间切换来完成不同的任务，从而以更快的速度制作出更优质的作品。这意味着您在制作全程都可以使用摄影机原始画质影像。只要一款软件，就相当于获得了属于您自己的后期制作工作室！学习和掌握 DaVinci Resolve，就能获得好莱坞专业人士所使用的同款制作工具！1\n达芬奇软件有两个版本，免费的 Davinci Resolve 和付费的 Davinci Resolve Studio。但是不管哪个版本，在官网每次都需要输入姓名、邮件、电话、国家和城市这些个人信息才能下载。所以为了不那么麻烦，直接写个脚本模拟 POST 请求搞定它。\n预览效果：\n预览效果预览效果\n\" 预览效果  基本思路 通过浏览器手动下载，在开发者工具可以获取到两个关键 POST 请求链接。\n获取 downloadId 的链接，以 Windows 平台的免费版本 17.0 为例：\nhttp://www.blackmagicdesign.com/api/support/latest-version/davinci-resolve/windows\n返回如下 JSON 格式数据：\n1 2 3 4 5 6 7 8 9 10 11  { \u0026#34;windows\u0026#34;: { \u0026#34;releaseId\u0026#34;: \u0026#34;c5a5295d23814624828cdac1ecd34f4a\u0026#34;, \u0026#34;downloadId\u0026#34;: \u0026#34;fd6f89e2ccb743d2a2d59ce5f9508fd8\u0026#34;, \u0026#34;major\u0026#34;: 17, \u0026#34;minor\u0026#34;: 0, \u0026#34;releaseNum\u0026#34;: 0, \u0026#34;build\u0026#34;: 33, \u0026#34;beta\u0026#34;: 9 } }   有了 downloadId 就可以构造直接获取下载链接的请求了：\n1 2 3 4  curl -s \u0026#34;http://www.blackmagicdesign.com/api/register/cn/download/fd6f89e2ccb743d2a2d59ce5f9508fd8\u0026#34; \\  -H \u0026#39;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 Edg/88.0.705.74\u0026#39; \\  -H \u0026#39;Content-Type: application/json;charset=UTF-8\u0026#39; \\  -d \u0026#39;{\u0026#34;product\u0026#34;:\u0026#34;null\u0026#34;,\u0026#34;country\u0026#34;:\u0026#34;cn\u0026#34;,\u0026#34;firstname\u0026#34;:\u0026#34;null\u0026#34;,\u0026#34;lastname\u0026#34;:\u0026#34;null\u0026#34;,\u0026#34;email\u0026#34;:\u0026#34;null@null.com\u0026#34;,\u0026#34;phone\u0026#34;:\u0026#34;1\u0026#34;,\u0026#34;city\u0026#34;:\u0026#34;null\u0026#34;}\u0026#39;   完整的 POST 请求中还有很多参数，通过测试可以减少到如上，只需要传递 UA 和 Content-Type 两个 HEADER 参数。\n传递的内容也精简了，product 值必不可少，在免费版上测试少了就会出错。\nproduct 其原本的值应该是平台名字，比如 Windows，但是请求链接里其实已经包含了需要下载的平台、版本信息，所以随便写一个，只要不为空就可以。\n这个请求返回的值就直接是所需要的下载链接了，有过期时限，默认 3 小时后过期：\n1  http://sw.blackmagicdesign.com/DaVinciResolve/v17.0b9/DaVinci_Resolve_17.0b9_Windows.zip?Key-Pair-Id=APKAJTKA3ZJMJRQITVEA\u0026amp;Signature=NvqTW60iciBvxwpejiYBbbDge/yyjm0cpBVFsIIPaxhfeWh0rULGuApol5MFahsur9Ji1P410S9rKs6ZYgzzWPe6oWaTb2Tj0Hquhc1GnpJsv1Ri3P4bW19VRUwT4oXqYbYJRMXl4e5jggAkEVjePl42L2qcjnhnH0OwwU3UJyCwH/CUAdsB6rmkle9cXGAik6miDskrEkU2TdLnpFsuPZzGCm08XGmkMKNQXKYE/GpPjmrkPn6tolKwIR2Yrd+YSugieQBCY4ZLKjDz5YHLEgyGWlQn9hlLEpREEKVX+ZU0AHkPjwT6kY/4lIBsnGlnxkHKQj63orCpfSMqkuxRSA==\u0026amp;Expires=1613755627   Linux Shell 脚本 只在威联通 QNAP TS-453Bmini 上测试通过。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142  #!/bin/bash ################ Version Info ################## # File: 达芬奇下载链接 # Create Date: 2021/02/19 10:22:42 # Author: Jay # Webstie: https://blog.233so.com/ # Version: 1.0 # Description: 获取达芬奇各版本下载链接 ################################################ menu() { echo -e \u0026#34;\\e[1;32m======================================\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;35m 欢迎使用获取达芬奇下载链接脚本程序\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m======================================\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m1.Davinci Resolve\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m2.Davicni Resolve Studio\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;33m0.退出\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m======================================\\e[0m\u0026#34; } num() { read -p \u0026#34;请选择产品: \u0026#34; number case $number in 1) export EDITION=\u0026#34;davinci-resolve\u0026#34; export DISPLAY_NAME=\u0026#34;Davinci Resolve\u0026#34; platform ;; 2) export EDITION=\u0026#34;davinci-resolve-studio\u0026#34; export DISPLAY_NAME=\u0026#34;Davinci Resolve Studio\u0026#34; platform ;; 0) exit 0 ;; esac } platform() { echo -e \u0026#34;\\e[1;32m======================================\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;35m 选择程序运行平台\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m======================================\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;33m1.返回上级菜单\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m2.Windows 版本\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m3.Mac 版本\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m4.Linux 版本\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;33m0.退出\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m=======================================\\e[0m\u0026#34; read -p \u0026#34;请选择平台: \u0026#34; platform case $platform in 1) main ;; 2) export PLATFORM=\u0026#34;Windows\u0026#34; version ;; 3) export PLATFORM=\u0026#34;Mac\u0026#34; version ;; 4) export PLATFORM=\u0026#34;Linux\u0026#34; version ;; 0) exit 0 ;; *) platform ;; esac } version() { echo -e \u0026#34;\\e[1;32m======================================\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;35m 选择程序版本\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m======================================\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;33m1.返回上级菜单\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m2.16\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m3.17\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;33m0.退出\\e[0m\u0026#34; echo -e \u0026#34;\\e[1;32m=======================================\\e[0m\u0026#34; read -p \u0026#34;请选择版本: \u0026#34; version case $version in 1) platform ;; 2) export VERSION=\u0026#34;latest-stable-version\u0026#34; showUrl ;; 3) export VERSION=\u0026#","date":"2021-02-19","description":"下载达芬奇","tags":"达芬奇\n调色\n下载","title":"脚本获取达芬奇软件下载链接","uri":"/2021/02/get-davinci-resolve-download-link/"},{"content":"鉴于 NAS 的解析指向本地局域网，所以需要在本地搭一个检测域名证书有效期并开启微信推送的服务，防止证书自动续期出问题导致证书过期。\n自动申请并安装证书可以参考另一篇博文 免费申请 Let\u0026rsquo;s Encrypt 泛域名证书。\n找了个现成的项目 CheckSSL，稍微修改下，并接入了威联通的系统日志推送和企业微信的消息推送服务。1\n效果预览 效果预览效果预览\n\" 效果预览  首先，注册 企业微信 并在应用管理里自建一个应用。\n注意 下面提供的脚本，注意根据实际情况修改相应的脚本目录、企业 ID、应用密钥，还有根据推送模板改变其中 touser、agentid 等内容的具体值。  使用方法：\n1 2 3  chmod +x checker.sh echo \u0026#34;0 1 * * * ./checker.sh qnap.233so.com\u0026#34; \u0026gt;\u0026gt; /etc/config/crontab crontab /etc/config/crontab \u0026amp;\u0026amp; /etc/init.d/crond.sh restart   根据自己的需求更改定时任务运行的时间。\nchecker.sh 脚本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  #!/bin/sh chmod +x /opt/sslstatus/runcheck.sh /opt/sslstatus/token.sh # 获取鉴权调用者身份的登录凭证 ACCESS_TOKEN if [ ! -f /opt/sslstatus/*.token ];then /opt/sslstatus/token.sh elif [ $(expr $(date +%s) - $(basename /opt/sslstatus/*.token .token)) -gt 7200 ];then rm -f /opt/sslstatus/*.token /opt/sslstatus/token.sh fi mkdir /opt/sslstatus/tmp/api -p for i in $@ do /opt/sslstatus/runcheck.sh ${i} done echo \u0026#39;[\u0026#39; \u0026gt; /opt/sslstatus/tmp/api/ct.json for i in $@ do cat /opt/sslstatus/tmp/${i}.json \u0026gt;\u0026gt; /opt/sslstatus/tmp/api/ct.json done sed -i \u0026#39;$d\u0026#39; /opt/sslstatus/tmp/api/ct.json echo \u0026#39;}\u0026#39; \u0026gt;\u0026gt; /opt/sslstatus/tmp/api/ct.json echo \u0026#39;]\u0026#39; \u0026gt;\u0026gt; /opt/sslstatus/tmp/api/ct.json sed -i \u0026#39;:label;N;s/\\n/ /;b label\u0026#39; /opt/sslstatus/tmp/api/ct.json sed -i \u0026#34;s|\\\u0026#34; \\\u0026#34;||g\u0026#34; /opt/sslstatus/tmp/api/ct.json sed -i \u0026#34;s|\\\u0026#34;\\: \\\u0026#34;|\\\u0026#34;\\:\\\u0026#34;|g\u0026#34; /opt/sslstatus/tmp/api/ct.json sed -i \u0026#34;s|\\\u0026#34;\\, \\\u0026#34;|\\\u0026#34;\\,\\\u0026#34;|g\u0026#34; /opt/sslstatus/tmp/api/ct.json sed -i \u0026#34;s|\\\u0026#34; }, { \\\u0026#34;|\\\u0026#34;},{\\\u0026#34;|g\u0026#34; /opt/sslstatus/tmp/api/ct.json mkdir /opt/sslstatus/output -p cp -rf /opt/sslstatus/tmp/api/ct.json /opt/sslstatus/output/ct.json rm -rf /opt/sslstatus/tmp   runcheck.sh 脚本 推送消息内容的模板可以参考官方文档：发送应用消息。从最简单的文本，到图片和语音都可以随意选择，根据自己的喜好调整即可。\n关于威联通的系统日志推送命令 log_tool 的用法可以参考我的另一篇博文 威联通：log_tool 命令。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139  #!/bin/sh mkdir /opt/sslstatus/tmp -p curl https://${1} -k -v -s -o /dev/null 2\u0026gt;/opt/sslstatus/tmp/ca.info cat /opt/sslstatus/tmp/ca.info | grep \u0026#39;start date: \u0026#39; \u0026gt;/opt/sslstatus/tmp/${1}.info cat /opt/sslstatus/tmp/ca.info | grep \u0026#39;expire date: \u0026#39; \u0026gt;\u0026gt;/opt/sslstatus/tmp/${1}.info cat /opt/sslstatus/tmp/ca.info | grep \u0026#39;issuer: \u0026#39; \u0026gt;\u0026gt;/opt/sslstatus/tmp/${1}.info cat /opt/sslstatus/tmp/ca.info | grep \u0026#39;SSL certificate verify\u0026#39; \u0026gt;\u0026gt;/opt/sslstatus/tmp/${1}.info cat /opt/sslstatus/tmp/ca.info | grep \u0026#39;subject: \u0026#39; \u0026gt;\u0026gt;/opt/sslstatus/tmp/${1}.info sed -i \u0026#39;s|\\* \\t start date: ||g\u0026#39; /opt/sslstatus/tmp/${1}.info sed -i \u0026#39;s|\\* \\t expire date: ||g\u0026#39; /opt/sslstatus/tmp/${1}.info sed -i \u0026#39;s|\\* \\t issuer: ||g\u0026#39; /opt/sslstatus/tmp/${1}.info sed -i \u0026#39;s|\\* \\t SSL certificate verify ||g\u0026#39; /opt/sslstatus/tmp/${1}.info sed -i \u0026#39;s|\\* \\t subject: ||g\u0026#39; /opt/sslstatus/tmp/${1}.info start=$(sed -n \u0026#39;1p\u0026#39; /opt/sslstatus/tmp/${1}.info) expire=$(sed -n \u0026#39;2p\u0026#39; /opt/sslstatus/tmp/${1}.info) issuer=$(sed -n \u0026#39;3p\u0026#39; /opt/sslstatus/tmp/${1}.info) status=$(sed -n \u0026#39;4p\u0026#39; /opt/sslstatus/tmp/${1}.info) subject=$(sed -n \u0026#39;5p\u0026#39; /opt/sslstatus/tmp/${1}.info) rm -f /opt/sslstatus/tmp/ca.info rm -f /opt/sslstatus/tmp/${1}.info DATE=\u0026#34;$(echo $(date \u0026#39;+%Y-%m-%d %H:%M:%S\u0026#39;))\u0026#34; WechatDate=$(date \u0026#39;+%Y年%m月%d日%H时%M分%S秒\u0026#39;) nowstamp=\u0026#34;$(date -d \u0026#34;$DATE\u0026#34; +%s)\u0026#34; expirestamp=\u0026#34;$(date -d \u0026#34;$expire\u0026#34; +%s)\u0026#34; expireday=$(expr $((expirestamp - nowstamp)) / 86400) echo \u0026#39;{\u0026#39; \u0026gt;/opt/sslstatus/tmp/${1}.json echo \u0026#39;\u0026#34;domain\u0026#34;: \u0026#34;\u0026#39;${1}\u0026#39;\u0026#34;,\u0026#39; \u0026gt;\u0026gt;/opt/sslstatus/tmp/${1}.json echo \u0026#39;\u0026#34;subject\u0026#34;: \u0026#34;\u0026#39;$subject\u0026#39;\u0026#34;,\u0026#39; \u0026gt;\u0026gt;/opt/sslstatus/tmp/${1}.json echo \u0026#39;\u0026#34;start\u0026#34;: \u0026#34;\u0026#39;$start\u0026#39;\u0026#34;,\u0026#39; \u0026gt;\u0026gt;/opt/sslstatus/tmp/${1}.json echo \u0026#39;\u0026#34;expire\u0026#34;: \u0026#34;\u0026#39;$expire\u0026#39;\u0026#34;,\u0026#39; \u0026gt;\u0026gt;/opt/sslstatus/tmp/${1}.json echo \u0026#39;\u0026#34;issuer\u0026#34;: \u0026#34;\u0026#39;$issuer\u0026#39;\u0026#34;,\u0026#39; \u0026gt;\u0026gt;/opt/sslstatus/tmp/${1}.json domain=${1} # 读取保存在本地文件中 ACCESS_TOKEN ACCESS_TOKEN=`cat /opt/sslstatus/*.token` # 定义出现错误、证书过期、证书即将过期三种状态的消息推送函数，请自行调整微信推送模板及其内容 errorMsg() { log_tool -t 2 -N \u0026#34;SSL Status\u0026#34; -G \u0026#34;expireday\u0026#34; -a \u0026#34;${1}SSL certificate check error, will check next cron schedule.\u0026#34; curl \u0026#34;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=$ACCESS_TOKEN\u0026#34; \\  -H \u0026#39;Content-Type: application/json\u0026#39; \\  -d \u0026#39; { \u0026#34;tou","date":"2021-02-17","description":"证书检查","tags":"域名\n证书\n企业微信\n消息推送","title":"威联通：域名证书有效性检查脚本","uri":"/2021/02/domain-check-ssl/"},{"content":"在威联通上的 Plex Media Server 虽然会提示新版本升级，但是无法自动下载并安装。Plex 本身更新算是比较频繁的，这就比较难受了。于是想了想能不能通过计划任务来实现自动下载安装更新。\n作为面向搜索引擎编程的门外汉，想了一个最简单的思路，那就是先获取本地和服务器端的版本号，进行比较以后如果本地比服务器小，那么就下载下来安装。\n获取本地版本号 先找到 Plex Media Server 安装目录\n用 /sbin/getcfg PlexMediaServer Install_Path -f /etc/config/qpkg.conf 来就可以获取\n一般是在 /share/CACHEDEV1_DATA/.qpkg/PlexMediaServer/。\nPlex 的主程序就是 Plex Media Server 这个文件。\n用常用的查询版本命令 \u0026quot;Plex Media Server\u0026quot; --version 去试试果然可以获取本地版本号。\n1 2  版本号由 v + 版本号 + hash 值前几位构成 v1.21.3.4021-5a0a3e4b2   查询出来的版本号不能直接拿来用，目前来看，Plex 的版本号数字位数是固定的，由四部分组成，所以我只需要从 2 位开始到 12 位的内容。\n所以用一行命令来截取字符串，${字符串变量:1:11}，这样我们就得到了能够用来比较大小的新版本号 1.21.3.4021。\n获取服务器端版本号 根据 Plex 本身的更新提示可以获取到新版本的下载链接，好在是固定的。\nhttps://plex.tv/downloads/latest/5?channel=16\u0026amp;build=linux-x86_64\u0026amp;distro=qnap\n说句题外话，群晖的更新链接估计就是 https://plex.tv/downloads/latest/5?channel=16\u0026amp;build=linux-x86_64\u0026amp;distro=synology。\n这个下载链接会重定向到新的链接，格式如下：\nhttps://downloads.plex.tv/plex-media-server-new/1.21.3.4021-5a0a3e4b2/qnap/PlexMediaServer-1.21.3.4021-5a0a3e4b2-x86_64.qpkg\n那么我只要获取到这个链接，就可以提取到需要的版本号了。如果下载下来直接获取文件名肯定是最简单的了，但是每次要下载也太浪费了。好在 curl 可以获取 HEAD 请求信息 1，可以尝试看看文件名是否直接保存在里面了。\n利用 curl -s -I \u0026quot;https://plex.tv/downloads/latest/5?channel=16\u0026amp;build=linux-x86_64\u0026amp;distro=qnap\u0026quot; 命令返回到信息如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  HTTP/1.1 302 Found Date: Fri, 12 Feb 2021 14:02:37 GMT Content-Type: text/html; charset=utf-8 Connection: keep-alive Location: https://downloads.plex.tv/plex-media-server-new/1.21.3.4021-5a0a3e4b2/qnap/PlexMediaServer-1.21.3.4021-5a0a3e4b2-x86_64.qpkg Cache-Control: no-cache Set-Cookie: \\_my-plex_session_32=YzRJS1VnV2xhNktjbmNWQUFWZzhPMnBvQUpiTmhPQmRBZitnN3V6TG12OUE4MTNWSzNFbFJGQ3k0ZXRtNVUwdWN1UHFkZVk4SG1PUU9DVEk0clp5cUZ5bDFlbGptK0tKWVg0ellqbk0yM1dCRjBQQnlXVnViWFVWWXJGbDJZZ1p4N1YxSzR3bGp5UWwrbjM3clFQMkQ5TnBkdG4vVmQxZHhiOWN3TkpFYi9zPS0tMVlBRjd4aUM4RzBjd2xNVFNIR3ZyZz09--d412bbc6bc4aa676d1c03b9f22b49e5a5b7df4ad; path=/; HttpOnly; secure X-Request-Id: c3078f6d-b09a-4f34-a419-7e7d72a6086e X-Runtime: 0.015837 Strict-Transport-Security: max-age=0 Referrer-Policy: origin-when-cross-origin X-Content-Type-Options: nosniff X-Frame-Options: DENY X-XSS-Protection: 1; mode=block X-Frame-Options: sameorigin   很明显，思路是对的，最终的链接保存在 Location 里。使用 grep 命令把这一行单独拿出来，再用 cut 命令根据空格符把前面的 Location 部分切掉，拿到链接。\n接着再用两次 cut 命令，分别根据 / 和 - 切割拿到最终需要的版本号。\n完整的命令如下：\n1 2  URL=$(curl -s -I \u0026#34;https://plex.tv/downloads/latest/5?channel=16\u0026amp;build=linux-x86_64\u0026amp;distro=qnap\u0026#34; | grep \u0026#39;^Location\u0026#39; | cut -f2 -d \u0026#39; \u0026#39; | sed \u0026#39;s/\\r//g\u0026#39;) Latest_Version=$(echo $URL | cut -d \u0026#34;/\u0026#34; -f5 | cut -d \u0026#34;-\u0026#34; -f1)   其中第一行命令中结尾的 sed 's/\\r//g' 是因为通过搜索引擎查到的资料显示直接获取的链接字符串末尾换行符是 CRLF 的，可能会有影响，所以转换成 LF 了。\n实现自动更新 直接上代码，写的比较一般，没有考虑更多的普适性，安装成功或失败会在 Web 管理界面消息提示。\n关于 log_tool 这个命令的用法可以参考我的另一篇博文 威联通：log_tool 命令。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  update() { curl -O $URL if [ $? ]; then sh *.qpkg if [ $? ]; then log_tool -t 0 -N \u0026#34;PMSUpdator\u0026#34; -G \u0026#34;update\u0026#34; -a \u0026#34;PlexMediaServer has been updated to $Latest_Version!\u0026#34; else log_tool -t 1 -N \u0026#34;PMSUpdator\u0026#34; -G \u0026#34;update\u0026#34; -a \u0026#34;PlexMediaServer update failed, please install the latest version $Latest_Versionmanually!\u0026#34; fi rm -f *.qpkg else update fi } if [ $Installed_Version \\\u0026lt; $Latest_Version ]; then update fi   注意 如果网络不好，curl 一直下载失败会进入死循环，可以考虑自行去除循环。  downloads.plex.tv 这个域名是套了 Cloudflare 的 CDN 的，国内某些网络下访问可能会有干扰，导致下载失败。\n如果你有 socks5 代理，可以尝试代理下载 curl --socks5 127.0.0.1:1080\n此外你也可以修改 NAS 的 hosts，虽然 CF 的 CDN 都是 anycast 的，但是选择对特定运营商友好的 ip 可以提高速度，移动可以选择香港，电信可以选择和百度合作的。\n加入定时任务 完整的脚本代码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  #!/bin/sh CONF=/etc/config/qpkg.conf PlexMediaServer_ROOT=$(/sbin/getcfg PlexMediaServer Install_Path -f ${CONF}) Full_Installed_Version=$(\u0026#34;$PlexMediaServer_ROOT/Plex Media Server\u0026#34; --version) Installed_Version=${Full_Installed_Version:1:11} URL=$(curl -s -I \u0026#34;https://plex.tv/downloads/latest/5?channel=16\u0026amp;build=linux-x86_64\u0026amp;distro=qnap\u0026#34; | grep \u0026#39;^Location\u0026#39; | cut -f2 -d \u0026#39; \u0026#39; | sed \u0026#39;s/\\r//g\u0026#39;) Latest_Version=$(echo $URL | cut -d \u0026#34;/\u0026#34; -f5 | cut -d \u0026#34;-\u0026#34; -f1) update() { curl -O $URL if [ $? ]; then sh *.qpkg if [ $? ]; then log_tool -t 0 -N \u0026#34;PMSUpdator\u0026#34; -G \u0026#34;update\u0026#34; -a \u0026#34;PlexMediaServer has been updated to $Latest_Version!\u0026#34; else log_tool -t 1 -N \u0026#34;PMSUpdator\u0026#34; -G \u0026#34;update\u0026#34; -a \u0026#34;PlexMediaServer update failed, please install the latest version $Latest_Versionmanually!\u0026#34; fi rm -f *.qpkg else update fi } if [ $Installed_Version \\\u0026lt; $Latest_Version ]; then update fi   然后加入定时任务 crontab\n1 2  echo \u0026#34;0 1 * * * $QPKG_ROOT/update.sh\u0026#34; \u0026gt;\u0026gt; /etc/config/crontab crontab /etc/config/crontab \u0026amp;\u0026amp; /etc/init.d/crond.sh restart     curl 的用法指南 \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2021-02-12","description":"","tags":"Plex\n威联通\n自动更新\ncurl\ncrontab","title":"自动更新威联通上的 Plex Media Server","uri":"/2021/02/plex-media-server-auto-update/"},{"content":"通过黑鸟扫源工具1扫了一些移动的直播源，稍微整理了下。建议使用黑鸟播放器在 playlist 目录添加播放列表后观看，这样可以直接支持回看。\n北京移动 支持回看，手动回看方式为在播放链接后面加上 ?playseek=20210210190000-20210210200000，其中 20210210190000-20210210200000 为时间段。2\n构造的回看地址同样支持 ffmpeg 录制。\n央视超清 CCTV1,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226226/index.m3u8 CCTV1,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226346/index.m3u8 CCTV1,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226431/index.m3u8 CCTV2,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226230/index.m3u8 CCTV2,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226371/index.m3u8 CCTV2,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226472/index.m3u8 CCTV3,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226471/index.m3u8 CCTV4,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226335/index.m3u8 CCTV4,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226470/index.m3u8 CCTV5,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226469/index.m3u8 CCTV5+,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226225/index.m3u8 CCTV5+,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226349/index.m3u8 CCTV5+,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226458/index.m3u8 CCTV6,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226468/index.m3u8 CCTV7,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226234/index.m3u8 CCTV7,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226467/index.m3u8 CCTV8,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226485/index.m3u8 CCTV9,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226236/index.m3u8 CCTV9,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226465/index.m3u8 CCTV10,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226227/index.m3u8 CCTV10,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226464/index.m3u8 CCTV11,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226334/index.m3u8 CCTV11,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226463/index.m3u8 CCTV12,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226228/index.m3u8 CCTV12,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226462/index.m3u8 CCTV13,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226316/index.m3u8 CCTV14,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226229/index.m3u8 CCTV14,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226461/index.m3u8 CCTV15,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226333/index.m3u8 CCTV15,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226460/index.m3u8 CCTV17,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226318/index.m3u8 CCTV17,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226459/index.m3u8 CCTV 中视购物,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226385/index.m3u8 卫视超清 安徽卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226223/index.m3u8 安徽卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226499/index.m3u8 北京卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226224/index.m3u8 北京卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226367/index.m3u8 北京卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226436/index.m3u8 北京卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226441/index.m3u8 东方卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226237/index.m3u8 东方卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226364/index.m3u8 东方卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226505/index.m3u8 东南卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226406/index.m3u8 东南卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226496/index.m3u8 广东卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226238/index.m3u8 广东卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226508/index.m3u8 贵州卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226497/index.m3u8 河北卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226507/index.m3u8 黑龙江卫视,http://otttv.bj.chinamobile.com/TVOD/88888888/224/3221226239/index.m3u8 黑龙江卫视,http://otttv.bj.chinamobile.com/TVO","date":"2021-02-10","description":"直播源","tags":"中国移动\n直播源\n央视\n卫视\nCCTV","title":"中国移动电视频道直播源","uri":"/2021/02/iptv-live-list/"},{"content":"魔兽世界 9.0 资料片暗影国度上线 2 个月了。正所谓工欲善其事，必先利其器，插件已经是魔兽世界居家旅行必不可少的东西了。以前都是用 curse 下单体插件，但是 curse 和 twitch 整合以后不再好用了，所以这次找了一个叫“彩虹 UI”的整合包。\n在前夕上线的时候还是挺好用的，后来不知道是加了几个其他的单体插件还是更新了一些插件版本的原因，总是会频繁地出现界面消失，就是类似按了 CTRL+Z 的效果，重载界面后就会恢复，反复出现很影响游戏体验。\n一个人在野外做任务还好，要是下本就很尴尬了（虽然我也懒得打，不是因为要做任务的话随机本都不打）。\n在忍受了一段时间后，终于选择一个周末来查找这个问题。思路也很简单，就是先备份整个 WTF 文件夹，然后删除要测试的角色的 SavedVariables 文件夹（重置插件设置为默认值），最后禁用全部插件，一个个启用观察一段时间，来找出有问题的插件1。\n几十个插件，一个个启用的话很费时间，因为这个 bug 的出现至少也要十几分钟才能观察到。这个时候传说中的“二分法”猜数字游戏思维就很好用了。\n先启用前一半或者前几类插件，看看是不是会出问题，如果不出问题，那么再接着启用后一半或者后几类插件中的前一半，以此类推，直到定位到会引起问题的那一个插件。\n最后，功夫不负有心人，问题的罪魁祸首是“聊天按钮和功能增强”插件，有可能是更新了版本的问题导致插件有冲突吧，反正这个插件也不是必须的，直接不用了就 OK 了。\n聊天按钮和功能增强聊天按钮和功能增强\n\" 聊天按钮和功能增强    https://addons.miliui.com/show/1/all#q15 \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2021-01-24","description":"彩虹UI","tags":"魔兽世界\n暗影国度\n彩虹UI\n插件","title":"魔兽世界彩虹UI插件整合包：解决界面消失问题","uri":"/2021/01/resolve-rainbowui-addons-bug/"},{"content":"基于飞腾平台预装银河麒麟 V10 桌面系统的国产电脑，目前和 Windows 平台的电脑并行使用，没有完全替换，所以有一定的文件同步需求。银河麒麟内置的麒麟传书好像没有 Windows 平台，也不兼容其他 ipmsg 的软件。想了想还是用微力同步来进行文件同步好了。然而官方提供的安装脚本似乎有点问题，简单改了改能够用了。\n下载安装脚本：wget https://www.verysync.com/shell/verysync-linux-installer/go-installer.sh\n用麒麟系统自带的文本编辑器修改安装脚本go-installer.sh\n第 4 行链接改成https，第 27 行删除$WGET后面的-k -O-参数，第 34 行删除\u0026gt; $TARFILE。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  #!/bin/bash VERSION=1.0 TARFILE=verysync-linux-installer-${VERSION}.tar TARURL=https://www.verysync.com/shell/verysync-linux-installer/$TARFILE CURL=`command -v curl 2\u0026gt;/dev/null` WGET=`command -v wget 2\u0026gt;/dev/null` #######color code######## RED=\u0026#34;31m\u0026#34; # Error message GREEN=\u0026#34;32m\u0026#34; # Success message YELLOW=\u0026#34;33m\u0026#34; # Warning message BLUE=\u0026#34;36m\u0026#34; # Info message colorEcho(){ COLOR=$1 echo -e \u0026#34;\\033[${COLOR}${@:2}\\033[0m\u0026#34; } if [[ \u0026#34;$CURL\u0026#34; == \u0026#34;\u0026#34; \u0026amp;\u0026amp; \u0026#34;$WGET\u0026#34; == \u0026#34;\u0026#34; ]]; then colorEcho ${RED} \u0026#34;Did not find the wget or curl command\u0026#34; exit 1; fi if [[ \u0026#34;$CURL\u0026#34; == \u0026#34;\u0026#34; ]]; then CURL=\u0026#34;$WGET\u0026#34; else CURL=\u0026#34;$CURL--connect-timeout 10 -k\u0026#34; fi colorEcho $GREEN \u0026#34;Downloading from $TARURL\u0026#34; $CURL $TARURL if [[ $? -ne 0 ]]; then colorEcho ${RED} \u0026#34;Failed to fetch $TARURLPlease check your network or try again.\u0026#34; exit 3 fi colorEcho $GREEN \u0026#34;Extracting installer\u0026#34; mkdir -p verysync-installer cd verysync-installer \u0026amp;\u0026amp; tar xf \u0026#34;../$TARFILE\u0026#34; if [[ $? -ne 0 ]]; then colorEcho ${RED} \u0026#34;Failed to extract verysync-installer.\u0026#34; exit 4 fi colorEcho $GREEN \u0026#34;Processing ...\u0026#34; ./go-inst.sh $@   在安装脚本文件所在目录打开终端，分别输入如下命令进行安装\n1 2  sudo chmod +x go-installer.sh sudo ./go-installer.sh   此脚本会自动安装以下文件 1：\n /usr/bin/verysync/verysync: 微力主程序 /usr/bin/verysync/start-stop-daemon: daemon管理程序。自动运行脚本会在系统重启之后，自动运行 verysync。    http://www.verysync.com/manual/install/#linux \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2021-01-21","description":"银河麒麟V10","tags":"银河麒麟\n国产系统\n微力同步\nverysync\n云同步\n文件共享\n飞腾","title":"银河麒麟系统安装微力同步","uri":"/2021/01/install.verysync.on.kylin.desktop.v10/"},{"content":"由于众所周知的原因，华为 Mate40 Pro 手机没有自带谷歌服务，需要 Play 商店或者玩外服游戏的话就必须想办法装。常规的谷歌服务安装助手已经无法在新华为手机上直接搞定，目前常见的办法就是备份恢复大法了。本教程来自S.P.B UV 手工全膠專門店，放在自己的博客作为备份。\n  function loadDPlayer(){ let dp = new DPlayer({ container: document.getElementById(\"a\"), autoplay: false , theme: \"#b7daff\", loop: false , lang: \"zh-cn\", screenshot: true , hotkey: true , preload: \"auto\", logo: \"\", volume: 0.7 , mutex: true , video: { url: \"/videos/Install.GMS.on.Mate40Pro.EMUI11.20201117/playlist.m3u8\", pic: \"\", thumbnails: \"\", type: \"auto\", }, subtitle: { url: \"\", type: \"webvtt\", fontSize: \"20px\", bottom: \"10%\", color: \"#b7daff\", }, }); } document.addEventListener('DOMContentLoaded', loadDPlayer, !1);  所需工具下载：https://reurl.cc/ygblgl\n提取码 ht16\n","date":"2021-01-11","description":"华为 Mate40 Pro 安装谷歌服务","tags":"谷歌服务\nGMS\nMate40Pro\n华为手机\nEMUI\nGoogle\n谷歌框架\nGooglePlay","title":"华为 Mate40 Pro 安装谷歌服务","uri":"/2021/01/install.gms.on.mate40pro.emui11.20201117/"},{"content":"代码片段是可以方便用户重复使用的代码模板，例如一些通用的循环或条件语句。在 Visual Studio Code 中，代码片段可以在 IntelliSense（智能提示）中出现，也可以在命令面板（Ctrl + Shift + P）中通过 Insert Snippet（插入片段）调用。打开“启用 Tab 补全”设置选项，在输入 trigger text 的时候按下 Tab 即可自动插入。1\n代码片段语法遵循 TextMate snippet syntax，但不支持 interpolated shell code 和 \\u 用法。\najax-snippetajax-snippet\n\" ajax-snippet  内置代码片段 VS Code 已经为一些常用语言，例如 JavaScript, TypeScript, Markdown 和 PHP, 内置了大量常用代码片段。\nbuiltin-javascript-snippetsbuiltin-javascript-snippets\n\" builtin-javascript-snippets  在命令面板中输入 Insert Snippet 可以查看支持当前文件的所有代码片段，包括用户自定义片段和已安装扩展内置的片段。\n扩展内置片段 许多 VS Code 扩展内置一些代码片段，下面是一些支持内置代码片段的热门扩展。\n Python Linting, Debugging (multi-threaded, remote), Intellisense, Jupyter Notebooks, code formatting, refactoring, unit tests, snippets, and more.     C/C\u0026#43;\u0026#43; C/C\u0026#43;\u0026#43; IntelliSense, debugging, and code browsing.     C# C# for Visual Studio Code (powered by OmniSharp).     Language Support for Java(TM) by Red Hat Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...    提示 点击上面扩展可以阅读更多详细描述内容。  创建用户自定义片段 用户可以轻松自定义片段，通过选择文件 → 首选项 → 用户片段，然后选择为此片段关联的语言或者设置为全局片段。\nsnippet-dropdownsnippet-dropdown\n\" snippet-dropdown  代码片段文件以 JSON 文件定义，支持 C-style 注释，不限制代码片段数量上限。\n下面是一段 JavaScript 的 for 循环片段示例：\n1 2 3 4 5 6 7 8  // in file \u0026#39;Code/User/snippets/javascript.json\u0026#39; { \u0026#34;For Loop\u0026#34;: { \u0026#34;prefix\u0026#34;: [\u0026#34;for\u0026#34;, \u0026#34;for-const\u0026#34;], \u0026#34;body\u0026#34;: [\u0026#34;for (const ${2:element} of ${1:array}) {\u0026#34;, \u0026#34;\\t$0\u0026#34;, \u0026#34;}\u0026#34;], \u0026#34;description\u0026#34;: \u0026#34;A for loop.\u0026#34; } }    For Loop 定义片段的名字，用户如果没有定义 description，那么名字将会代替 0 在智能提示中显示。 prefix 定义显示在智能提示中的一个或多个触发关键词。prefix 支持模糊匹配，例如，fx 可以匹配 for-const。 body 定义插入片段的具体内容。 description 定义智能提示中的描述（可选）。  此外，body 标签中有 3 个占位字符：${1:array}, ${2:element}, 和 $0。通过 Tab 切换到需要编辑的占位符位置。${2:element} 中的 element 是占位符的默认内容。占位符遍历从 1 开始升序。0 是可选的保留占位字符序号，它的顺序永远是最后，当 Tab 切换完毕的时候，表示光标所处的位置。\ncursor-positioncursor-position\n\" cursor-position  未完待续 🔜\n  Snippets in Visual Studio Code \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-10-31","description":"用户代码片段","tags":"VSC\n代码编辑器\nIDE\npython\n用户注释头","title":"VS Code 文档：代码片段","uri":"/2020/10/snippets-in-visual-studio-code/"},{"content":"作为一个外行选手也来玩玩这个首届哔哩哔哩安全挑战赛，1-5 题只要一个浏览器就够了。6-10 似乎需要用工具了，反正我也不会，看了别人的解题思路也不懂。从目前公开的信息来看第 8 题和第 10 题已经有思路了。怎么说来着，知道答案的都在榜上呢。1\n0x01 页面的背后是什么 题目地址: http://45.113.201.36/index.html\n直接 F12 审查元素，搜索 flag1 即可。是个输入框被隐藏了，它的值就是答案了。 flag1flag1\n\" flag1 \n0x02 真正的秘密只有特殊的设备才能看到 题目地址： http://45.113.201.36/index.html\n还是这个页面，页面都很直白地提示需要使用 bilibili Security Browser 浏览器访问～\n那么就是把浏览器 UA 改成 bilibili Security Browser 就可以了。 flag2flag2\n\" flag2 \n前面两题开胃小菜还是比较容易的，基本上审查下网页就知道解题关键在哪里了。\n0x03 密码是啥 题目地址： http://45.113.201.36/login.html\n用字典暴力破解，不存在的，就是猜，肯定是个弱密码或者和 b 站有关的。\n管理员の账号猜测用户名就是常见的 admin 啦，密码就是 bilibili 了。 flag3flag3\n\" flag3 \n0x04 对不起，权限不足 题目地址： http://45.113.201.36/superadmin.html\n页面提示有些秘密只有超级管理员才能看见哦~，那么就是我们的用户权限不够。\n可是也没有可以登录的地方，一般会话怎么来判断用户呢，当然是 cookie 啦。\nF12 检视下 cookie 有哪些值，看到 role 就知道要修改这个为超级管理员的值。\n那么超级管理员的值应该是什么呢。\n看到默认的这些字符首先考虑是 md5 算法以后的，那么试试页面地址的这个 superadmin，好像不对。\n最后看了别人的提示是 Windows 的默认管理员用户名 Administrator 经 md5 算法后。 flag4flag4\n\" flag4 \n0x05 别人的秘密 题目地址： http://45.113.201.36/user.html\n页面提示这里没有你想要的答案，那么哪里有呢？\n按照管理先看网页源代码，有这么一段 js 代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  $(function () { (function ($) { $.getUrlParam = function (name) { var reg = new RegExp(\u0026#34;(^|\u0026amp;)\u0026#34; + name + \u0026#34;=([^\u0026amp;]*)(\u0026amp;|$)\u0026#34;); var r = window.location.search.substr(1).match(reg); if (r != null) return unescape(r[2]); return null; }; })(jQuery); var uid = $.getUrlParam(\u0026#34;uid\u0026#34;); if (uid == null) { uid = 100336889; } $.ajax({ url: \u0026#34;api/ctf/5?uid=\u0026#34; + uid, type: \u0026#34;get\u0026#34;, success: function (data) { console.log(data); if (data.code == 200) { // 如果有值：前端跳转 \t$(\u0026#34;#flag\u0026#34;).html(\u0026#34;欢迎超级管理员登陆～flag : \u0026#34; + data.data); } else { // 如果没值 \t$(\u0026#34;#flag\u0026#34;).html(\u0026#34;这里没有你想要的答案～\u0026#34;); } }, }); });   回想这题的题目是 别人的秘密，根据上面的代码也不难看出是要找到这个超级管理员的 uid，构造完整地址的 GET 请求后获得我们需要的答案。\n我们先看一下 api/ctf/5?uid=100336889 返回什么吧。\n1  { \u0026#34;code\u0026#34;: \u0026#34;403\u0026#34;, \u0026#34;data\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;msg\u0026#34;: \u0026#34;\u0026#34; }   我们需要的答案就是正确的 uid 返回的 data 对应的值。\n接下来就简单了，循环遍历就可以。先循环个 50 次再说。\nflag5flag5\n\" flag5  1 2 3 4 5 6  for (let index = 100336889; index \u0026lt; 100336939; index++) { var jsonUrl = \u0026#34;api/ctf/5?uid=\u0026#34; + index; const response = await fetch(jsonUrl); const posts = await response.json(); console.log(posts.data); }   接下来的题目就需要工具了，需要 PHP 知识，扫目录、扫端口，我就不会了，只能摊手。\n一切的一切似乎都跟第 6 题有关，不知道是不是要用 XSS 攻击来解决。\n  https://github.com/interesting-1024/end/issues \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-10-24","description":"安全挑战赛","tags":"程序员节\n1024\nbilibili\nctf\nphp\n注入","title":"新手尝试解题首届哔哩哔哩安全挑战赛","uri":"/2020/10/bilibili-sec1024-2020/"},{"content":"在短视频内容为王的时代，以声音为专有传播媒介的播客似乎也在这几年受到了一些的关注。和博客一样作为 Web2.0 的传媒形态，却在中国很长一段时间里一直不温不火。\n一般来说，收听播客无外乎使用播客软件订阅播客生产者的订阅链接。假如某一天播客生产者因不可抗拒的力量导致自身服务器上的内容消失，那么我将这些内容下载到自己的 NAS 上是最保险的。但是，成千上百期的节目手动下载是比较捉急的，那么就需要写脚本了，而且脚本需要能够自动化下载后续更新的节目内容。下面以津津乐道播客节目为例，用比较粗暴的脚本简单实现。\nDownload Station 订阅下载 威联通官方的 Download Station 是支持订阅链接的解析的，所以将津津乐道播客的订阅链接 https://feeds.jjldbk.com/all.xml 添加到 RSS 里面，然后选择需要下载的节目添加到下载任务，至于后续节目更新了也是需要手动来下载的。\nds5ds5\n\" ds5  脚本自动化 选择 python 的 ElementTree 来解析 xml 内容，找到所有节目的下载链接并存入 url.txt。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  #!/usr/bin/env python3 # -*- coding: utf-8 -*- from xml.etree import ElementTree as ET tree = ET.parse(\u0026#39;all.xml\u0026#39;) root = tree.getroot() childs = list(root) links = [] for elem in root[0].findall(\u0026#34;item\u0026#34;): for vol in elem.findall(\u0026#34;enclosure\u0026#34;): links.append(vol.get(\u0026#34;url\u0026#34;)) fileObject = open(\u0026#39;url.txt\u0026#39;, \u0026#39;w\u0026#39;) for url in links: fileObject.write(url) fileObject.write(\u0026#39;\\n\u0026#39;) fileObject.close()   编写下载脚本，利用 wget 来下载内容。\n使用 -i 参数来实现批量下载，由上面解析 xml 的 python 程序 main.py 来生成保存链接的文件。\n使用 -N 参数来防止加入计划任务时候重复下载，只有在服务器文件比本地文件新的时候才下载。\n使用 -c 参数开启断点续传下载，因意外中断下载，可以在下次定时任务执行的时候继续下载之前的任务。\n使用 -b 参数开启后台下载，不阻塞进程。\n使用 -o 参数保存下载 log 文件，可以作为分析使用。\n1 2 3 4 5 6 7 8  #!/bin/sh url=\u0026#34;https://feeds.jjldbk.com/all.xml\u0026#34; logdir=log links=url.txt savedir=/share/Multimedia/播客/津津乐道 wget --no-check-certificate -N -c $url -o $logdir/feed.log python3 main.py wget --content-disposition -b -N -c -P $savedir -i $links -o $logdir/$(date +\u0026#34;%Y%m%d%H%M%S\u0026#34;).log   接下来需要写一个删除日志的脚本，规定超过 30 天的日志文件就删除。\n1 2 3  #!/bin/sh logdir=log find $logdir/ -mtime +30 -name \u0026#34;*.log\u0026#34; -exec rm -rf {} \\;   最后赋予两个脚本文件可执行权限，并将其加入定时任务。参阅威联通：定时任务。\nPodcast Generator Podcast Generator 1 是一个基于 Web 的播客系统，本身似乎支持 RSS Feed 来实现收听播客，但是我用了最新的 3.1 版本，修改了配置文件似乎也不太行，只能放弃了。不知道是 Podcast Generator 本身的问题，还是津津乐道播客的 RSS 链接不符合要求，更有可能是我自己不会配置导致的问题。\n当然作为一个播客系统，Podcast Generator 可以将已经下载的播客节目索引以后直接在其提供的 Web 界面上收听。只要将 config.php 中的 $upload_dir 指向存储播客节目的目录，然后在管理界面通过 FTP Auto Indexing 来自动添加即可。\nPodcast GeneratorPodcast Generator\n\" Podcast Generator  这个默认界面是丑了点，而且从功能性来讲也不好用，还不如使用 Plex 或者 Kodi 这种媒体服务器。如果只是想要在 NAS 上收听播客，Plex 本身也是支持订阅链接的，在 Plex 的设置——在线媒体资源界面启用 PODCASTS 功能。\n  https://github.com/PodcastGenerator/PodcastGenerator \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-10-19","description":"播客","tags":"播客\nPodcast\nPodcast Generator\nRSS\n计划任务\nwget\n津津乐道","title":"威联通：Podcast 播客那些事儿","uri":"/2020/10/qnap-podcast-rss-feed/"},{"content":"正如谷歌浏览器内置的恐龙彩蛋游戏，微软的新版 Edge 浏览器也同样内置了一款小游戏——让我们网上冲浪吧。这个名字很有年代感，与“你是 GG 还是 MM”同属于上古时代的网络用语了。\n这个游戏的玩法就是玩家操作冲浪者挑战尽可能远的距离，同时要避开障碍和海怪，稍有不慎就会触礁或者被大章鱼抓住而失去一条命。\n在 Github 上有人制作了提取版本 1，这样就可以脱离 Edge 浏览器在其他浏览器上也能玩了。\n以上面的项目为基础，我增加了一些主要语言的支持 2，会根据浏览器的语言自动加载对应的语言。通过对中文语言 strings.js 的查看，发现这个游戏内置了 3 个 cheat code，分别是著名的科乐美“上上下下左右左右 BA”以及微软自创的“MICROSOFT”和“EDGE”。\n1 2 3 4 5 6 7 8 9 10 11  loadTimeData.data = { ...... classicTitle: \u0026#34;让我们网上冲浪吧\u0026#34;, classicUnit: \u0026#34;米\u0026#34;, close: \u0026#34;关闭\u0026#34;, codeEdge: \u0026#34;无限升级代码已激活! $1\u0026#34;, codeKonami: \u0026#34;忍者猫代码已激活! $1\u0026#34;, codeMicrosoft: \u0026#34;无限生命代码已激活! $1\u0026#34;, codeScoring: \u0026#34;将不会保存你在这一局的分数。\u0026#34;, ...... };   1 2 3 4 5 6  // 下面的数字就是 keyCode codes: [ [38, 38, 40, 40, 37, 39, 37, 39, 66, 65], // 上上下下左右左右BA，变身忍者猫  [77, 73, 67, 82, 79, 83, 79, 70, 84], // MICROSOFT，开启无限生命  [69, 68, 71, 69], // EDGE，开启无限升级 ];     function loadDPlayer(){ let dp = new DPlayer({ container: document.getElementById(\"a\"), autoplay: false , theme: \"#b7daff\", loop: false , lang: \"zh-cn\", screenshot: true , hotkey: true , preload: \"auto\", logo: \"\", volume: 0.7 , mutex: true , video: { url: \"/videos/微软冲浪游戏秘技.mp4\", pic: \"\", thumbnails: \"\", type: \"auto\", }, subtitle: { url: \"/videos/微软冲浪游戏秘技.vtt\", type: \"webvtt\", fontSize: \"20px\", bottom: \"10%\", color: \"#e2893c\", }, }); } document.addEventListener('DOMContentLoaded', loadDPlayer, !1);    https://github.com/jackbuehner/MicrosoftEdge-S.U.R.F. \u0026#x21a9;\u0026#xfe0e;\n https://github.com/Jay-Young/SURF \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-10-15","description":"冲浪小游戏","tags":"科乐美秘技\n魂斗罗\n冲浪小游戏\n忍者猫","title":"微软 Edge 内置冲浪小游戏的三个小秘技","uri":"/2020/10/microsoft-edge-game-surf-cheat-code/"},{"content":"LeanCloud 国内版老早就在通知将不再支持 xxx.leancloud.cn 的二级域名，需要自行绑定个人域名（需备案）1。今天 10 月 1 日即是期限的最后一天，于是起了个早准备把国内版的评论数据迁移到国际版去。\n导出数据 LeanCloud 国内版和国际版之间支持数据导出导入，登入国内版，进入需要导出数据的项目，依次点击设置 → 数据导出，导出所有数据就去掉“限定导出数据起止日期”的勾选，最后点击导出。稍后去邮箱查收下载数据即可。\n注意  每天中午 12 点前可进行数据导出。点击导出数据后，我们会稍后发送数据文件到您的邮箱。 当限定日期后，仅导出 updatedAt 字段位于当前选定日期区间（东八区，包括起始日期点）的数据。    导入数据 国际版和国内版账号不通用，所以先注册国际版账号，新建应用，选择免费的开发版即可。\n将国内版导出的数据包解压，包含了几个字段的 JSON 格式数据。大部分字段数据可能都是空的，使用 Valine 评论系统的一般_User, Comment, Counter 这几个字段是有数据的，具体的情况可以在国内版的存储 → 结构化数据中查看。\n进入国际版应用，依次点击存储 → 导入导出 → 数据导入，在数据文件中选择需要导入的 JSON 数据文件，检查 Class 名称是否与文件名一致，点击导入即可。全部导入完毕后，在国际版存储 → 结构化数据中可以查看相应字段的数据是否与国内版一致了。\n重新部署云引擎 我使用的是 https://github.com/DesertsP/Valine-Admin 的 Valine 评论系统扩展项目。\n详细部署教程可参考作者博客: https://deserts.io/valine-admin-document 2\n有几个注意点：\n 源码部署现在在运引擎部署界面选择 Git 部署，而不是之前的设置界面 部署时不要忘记填写 master 分支 独立域名绑定在项目设置界面的域名绑定 我这边导入数据后，评论后台管理地址的用户名和密码与国内版一致，无需重新注册 可以考虑在设置 → 安全中心中设置 Web 安全域名为自己的博客域名 迁移后要注意在自己的博客项目设置中将原来国内版的应用 Keys 替换为国际版 为更有效的使用定时任务唤醒，可以追加使用 WakeLeanCloud  项目 3 国际版使用的是 UTC+0 (GMT) 时区，注意与 UTC+8 (CST) 北京时间的换算  引用   https://leancloudblog.com/mandatory-domain-config \u0026#x21a9;\u0026#xfe0e;\n https://deserts.io/valine-admin-document \u0026#x21a9;\u0026#xfe0e;\n https://www.antmoe.com/posts/ff6aef7b/index.html \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-10-01","description":"LeanCloud","tags":"LeanCloud\n绑定域名\n实名制\n数据迁移\nValine\n云引擎\n流控\n评论系统","title":"迁移博客评论至 LeanCloud 国际版","uri":"/2020/10/migrate-blog-comments-data-to-leancloud-international/"},{"content":"最近突然想解压，于是打开好久没玩的猪场著名游戏阴阳师的桌面版，更新后启动发现右下角有个有个熟悉的玩意闪过，定睛一看咋那么像鹅厂那个“大名鼎鼎”的 TP 系统呢，猪场鹅厂化？\nNEP系统NEP系统\n\" NEP系统  TP系统TP系统\n\" TP系统  这些玩意有没有用不知道，虽然恶意揣测不好，但是从腾讯的 TP 系统来看并不怎么好用，系统一更新就要出问题，所以我还是决定先干掉这个猪场版的 NEP 系统。\n查看进程应该就是 NEPDaemon 这个进程了。\nNEPDaemonNEPDaemon\n\" NEPDaemon  右键定位到所在文件夹位置，发现似乎还有其他 3 个关联文件：NEP2.dll, NEPLauncher.dll, NEPSplash.exe。\n关联文件关联文件\n\" 关联文件  先都把他们剪切到其他地方，运行阴阳师看看效果。\n报错报错\n\" 报错  报错：找不到 NEP2.dll，看来得留下这个文件，再次运行阴阳师成功进入游戏。因为还留着一个 NEP2.dll，是不是真的干掉了这个系统就不清楚了。而且按照一般的尿性，需要管理员运行的阴阳师在后续更新中可能会重新下载 NEP 系统，可以考虑在原来的位置新建同名文件，设置只读属性。当然最好的办法可能是利用一些安全工具直接阻止 NEPDaemon 和 NEPSplash 的启动。\n阻止启动阻止启动\n\" 阻止启动 ","date":"2020-09-22","description":"NEP","tags":"网易游戏\n阴阳师\nNEP系统\n安全系统\nTP系统\n反作弊","title":"阴阳师：干掉网易安全系统 NEProtect？","uri":"/2020/09/kill-onmyoji-neprotect/"},{"content":"与流量的战争，现在已经成为了一场人民战争的一部分。资本媒体一体横行霸道，流量明星没有演技，知识精英缺位。希望在这流量时代，我们有所坚守，有所追求。我们已经退无可退，唯望往前走，不要停息，让我们像飞鸟一样思考，如道路一般行走。1\n 视频版：\n   音频版：\n   https://www.bilibili.com/video/BV1xD4y1o7TS \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-09-21","description":"我与流量的战争","tags":"流量明星\n饭圈文化\n观学院\n汪海林\n资本\n影视平台","title":"汪海林：我与流量的战争","uri":"/2020/09/wang-hailin-speech-at-guan-school/"},{"content":"今天终于收到了 2020 年 5 月 27 日发布的 Windows 10 版本 2004 更新，看来微软已经解决了部分软硬件兼容问题又开始新一批推送了🐶。更新完毕重启首先弹了一个“使用技巧”的应用出来，好像是官方做的让用户熟悉 Windows 10 新增功能和技巧的。网上搜了下，这个应用几经更新，似乎越来越简单，以前还有很多介绍基础性功能的内容。\n官方介绍 Windows 10 中附带的“使用技巧”应用在 Windows 中的精彩应用会让你大开眼界。若要查找该应用，请在设备上按“打开‘使用技巧’应用”按钮或选择“开始”菜单 \u0026nbsp;\u0026gt;“使用技巧 ”。然后在搜索框中键入“Windows”，或选择“浏览所有使用技巧”以查看有关其他功能的使用技巧。也可以在 Web 上转到 Microsoft 使用技巧。1\n使用技巧使用技巧\n\" 使用技巧  如果你的 Windows 是其他版本或者卸载了此应用，可以从 Microsoft Store 免费下载“使用技巧”。\n打开“使用技巧”应用\n\r.btn{\rfont-family: Segoe UI,SegoeUI,\"Helvetica Neue\",Helvetica,Arial,sans-serif;\rlist-style: none;\rlist-style-type: disc;\rbox-sizing: inherit;\rtext-decoration: none;\rfont-size: 15px;\rmax-width: 374px;\rmin-width: 120px;\rpadding: 9px 12px 10px;\rmargin-top: 12px;\rdisplay: inline-block;\rtext-align: center;\rline-height: 1;\rfont-weight: 600;\rbox-shadow: 0 4px 8px 0 transparent;\rcursor: pointer;\roverflow: hidden;\rtransition: all .2s ease-in-out;\rvertical-align: bottom;\rwhite-space: nowrap;\rposition: relative;\rborder: 2px solid transparent;\routline: 0;\rcolor: #fff !important;\rbackground-color: #0067b8;\r}\r\r一些功能技巧  如果在屏幕上难以发现指针，请将其放大或更改颜色。 选择“开始”菜单 \u0026gt;“设置”\u0026nbsp;\u0026gt;“轻松使用” \u0026gt;“鼠标指针”。 文本光标指示器向你的文本光标添加了颜色闪烁，让你更容易在海量文本中找到它。 要将它打开并更改其大小和颜色，请转到“开始”\u0026nbsp;\u0026gt;“设置”\u0026nbsp;\u0026gt;“轻松访问” \u0026gt;“文本光标”。 按 Windows 徽标键 \u0026nbsp;+ Shift + S 以打开截图栏，然后将光标拖动到要捕获的区域。 截图区域将保存到剪贴板。 “你的手机”应用可帮助你在家中工作时保持工作效率。 将 Android 手机链接到电脑，以便在手机在另一个房间充电的同时回复文本、共享照片、打电话等等。 此外，使用一体式 Office 应用（iPhone 上也可用），随时随地保持工作效率。  注意 “你的手机”应用目前国区不可用，可以切换到港区。   反正小娜国区已经死了，那么一行命令卸载之。2 管理员权限运行 PowerShell：  1  Get-AppxPackage -allusers Microsoft.549981C3F5F10 | Remove-AppxPackage    修改注册表开启 Windows 10 硬件加速 GPU 调度提高中低端显卡性能，需要 N 卡驱动 451.48 及以上版本、A 卡驱动 2020 20.5.1 Beta 及以上版本。3  1  计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\GraphicsDrivers     在右侧找到 HwSchMode 选项将默认键值由 1 修改为 2，其中 1 代表关闭硬件加速 GPU 调度、2 代表开启 GPU 调度。若右侧没有这个选项可以右键点击空白处选择新建 DWORD32 位值将其重命名为 HwSchMode 然后再修改键值。\n  修改完成后请重启系统，重启后转到系统设置应用\u0026mdash;系统\u0026mdash;显示\u0026ndash;图形设置\u0026mdash;开启硬件加速 GPU 调度功能。注意开启调度功能后需要再次重启系统才能使该选项生效，同理如需关闭的话需要在关闭后重启系统使之生效等。\n  GPU 调度GPU 调度\n\" GPU 调度  引用   https://support.microsoft.com/zh-cn/help/4027049/windows-10-get-started-with-tips \u0026#x21a9;\u0026#xfe0e;\n https://www.landiannews.com/archives/78330.html \u0026#x21a9;\u0026#xfe0e;\n https://www.landiannews.com/archives/76665.html \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-09-13","description":"使用技巧","tags":"Windows 10\n使用技巧\n最新功能\n效率","title":"Windows 10 中的“使用技巧”入门","uri":"/2020/09/windows-10-get-started-with-tips/"},{"content":"以 DaVinci Resolve Studio 16.2.6.005 为例，开启 CUDA 和硬件加速解码 H.264/H.265。\n左上角菜单栏或者默认快捷键 CTRL+, 打开偏好设置\n 内存和 GPU 页面，GPU 处理模式选择 CUDA（苏妈的显卡选 OpenCL），GPU 选择模式选择手动，勾选需要使用的显卡（多显卡用户注意）。\n 切换到解码选项页面，勾选使用硬解加速解码 H.264/H.265、NVIDIA、英特尔快速同步，后两者分别是老黄的独显加速和蓝厂的核显加速，猜测如果是苏妈的显卡或许会有不一样的选项。\n 注意 硬解加速功能只有需要付费的 Studio 版本拥有，免费版本无法使用，请前往官网查阅经销商购买正版，零售价￥ 2600  ","date":"2020-09-04","description":"CUDA","tags":"达芬奇\n调色\n视频编辑\nCUDA\nNVIDIA","title":"达芬奇中开启CUDA加速及硬解H.264/H.265","uri":"/2020/09/davinci.resolve.studio.cuda.acceleration/"},{"content":"歌手 1.0 软件，为音乐创作者们提供具有不同音色和唱腔的虚拟歌手，他们能迅速读懂乐谱，并像人类歌手一样，自然地演唱出来。\n  function loadDPlayer(){ let dp = new DPlayer({ container: document.getElementById(\"a\"), autoplay: false , theme: \"#b7daff\", loop: false , lang: \"zh-cn\", screenshot: true , hotkey: true , preload: \"auto\", logo: \"\", volume: 0.7 , mutex: true , video: { url: \"/videos/XStudioSinger/XStudioSinger.m3u8\", pic: \"\", thumbnails: \"\", type: \"auto\", }, subtitle: { url: \"\", type: \"webvtt\", fontSize: \"20px\", bottom: \"10%\", color: \"#b7daff\", }, }); } document.addEventListener('DOMContentLoaded', loadDPlayer, !1);   用户通过软件制作的歌手清唱版权属于用户，可以自由地创作和发布。用户需要确保除歌手清唱以外的部分（包括词、曲、伴奏等等）不侵犯任何第三方的知识产权或其他权利。在行使上述权力时，需确保其符合法律法规及社会公序良俗的规范，并承担相关的全部直接或间接法律责任。\n 如何快速创作一首歌曲 软件提供两种创作方式：乐谱创作和 Midi 创作\n方式一：乐谱创作 适用场景：如果您有基本的乐理知识，想要基于简谱/五线谱进行创作或改编，可以使用该方式。\n乐谱创作流程：\n 新建工程并选择歌手 根据乐谱进行信息设置和音符绘制 输入歌词 美化歌声 导出音频  方式二：Midi 创作 适用场景：如果您不想手绘乐谱，可以直接导入 Midi 文件进行创作或改编。\nMidi 创作流程：\n 新建工程并选择歌手 导入 Midi 文件 输入歌词 美化歌声 导出音频  技巧  可以通过 MidiShow 网站或者搜索引擎来下载所要创作歌曲的 midi 文件 也可以通过 FL Studio 等软件来扒制 midi 文件    基本功能 如何选择歌手 初次打开软件时，在【歌手选择】页面进行选择 打开软件以后，在【演唱轨】左侧，单击歌手头像下方【更换歌手】按钮进行更换\n如何进行歌曲基本信息设置（曲速，拍号，音名） 当前基本信息可在轨道窗最上区域进行设定，双击进入弹出菜单，在菜单内进行具体选择。\n如何编辑歌词 双击音符，进入歌词编辑，可以成段输入歌词 或者在音符上点击右键，选择从当前音符开始【编辑歌词】或者【编辑全部歌词】\n如何实现多声部 点击菜单栏【插入】-【演唱轨】，并为新的演唱轨选择歌手 你可以在钢琴卷帘区，看到其他声部歌手所演唱的音符的参考位置\n如何修改发音 右键单击音符，在弹窗中选择【修改发音】，即可输入有效发音，有效发音列表参见文档末尾\n暂不支持在歌词编辑模式下直接输入发音\n一字多音/延长音/转音怎么输入 在歌词上输入转音符号“-”，表示把前一个音符的发音延长至当前音符上\n如何使歌声更自然（插入换气，静音） 可以右键单击音符，手动添加换气及停顿，使歌声更加自然流畅\n或者使用菜单栏【美化】中的【一键自动插入换气】功能\n也可以尝试改变音符的长短，对合成歌声的效果也会有影响\n如何插入伴奏 点击菜单栏【插入】-【伴奏】，选择本地音频文件\n或者在【轨道窗】空白区域单击右键，选择插入伴奏\n如何导入 midi 双击选中歌手音轨，点击菜单栏【插入】-【midi】，从本地选择 midi 文件，然后选择要插入的音轨\n注意插入的 midi 会覆盖当前音轨的信息\n播放起点，播放终点，循环标记是做什么的 当您确定播放起点、播放终点后，点击开启循环模式，歌声会在这段区域内循环播放\n播放光标如何移动 点击时间轴上方区域的某个位置，播放光标会移动到这个位置\n或者把鼠标移动到播放光标上，点住并拖动播放光标，拖动时鼠标会吸附在节拍线上\n为什么点击播放后需要加载一段时间 我们的歌声合成基于深度神经网络，需要在云端进行大量运算\n当您点击播放时，会向服务器发送请求，请耐心等待\n参数功能 如何进入参数模式 点击右上角的参数按钮，等待参数信息返回，即可进入参数模式，当前版本，可以修改【音高】参数\n如何修改音高参数 在钢琴卷帘区域选择【音高】参数，可以通过自由手绘/锚点绘制两种方式编辑音高线\n如何重置音高参数 利用【橡皮擦工具】可以实现音高参数重置\n针对需要重置的音高参数区域，通过橡皮擦工具，选中需要重置的区域，即可复原\n快捷键使用表    功能 快捷键 功能 快捷键     新建工程 Ctrl+N 播放/暂停 Space   打开工程 Ctrl+O 停止 Esc   保存工程 Ctrl+S     工程另存为 Ctrl+Shift+S 把选中的音符向上移动一步 ↑     把选中的音符向下移动一步 ↓   撤销 Ctrl+Z 把选中的音符向左移动一步 ←   重做 Ctrl+Y 把选中的音符向右移动一步 →   全选 Ctrl+A     剪切 Ctrl+X 页面上下滚动 鼠标滚轮   复制 Ctrl+C 页面左右滚动 Shift+鼠标滚轮   粘贴 Ctrl+V 页面小节宽度改变 Ctrl+鼠标滚轮   删除 Delete 页面小节高度改变 Ctrl+ Shift+鼠标滚轮     插入换气 Ctrl+B   光标切换为画笔 F1 插入停顿 Ctrl+P   光标切换为鼠标 F2 从当前位置编辑歌词 Ctrl+L   光标切换为橡皮 F3 编辑全部歌词 Ctrl+Shift+L     一键自动插入换气 Ctrl+Alt+B    有效发音列表     b c ch d f g h j     a ba ca cha da fa ga ha    ai bai cai chai dai fai gai hai jai   an ban can chan dan fan gan han    ang bang cang chang dang fang gang hang    ao bao cao chao dao fao gao hao    e be ce che de fe ge he je   ei bei cei chei dei fei gei hei jei   en ben cen chen den fen gen hen jen   eng beng ceng cheng deng feng geng heng    eri bi cyi chyi di fi gi hi ji   ia bia   dia    jia   ian bian   dian    jian   iang biang   diang    jiang   iao biao   diao    jiao   ie bie   die    jie   in bin   din    jin   ing bing   ding    jing   iong biong   diong    jiong   iu biu   diu    jiu   o bo co cho do fo go ho    ong bong cong chong dong fong gong hong    ou bou cou chou dou fou gou hou    u bu cu chu du fu gu hu jwu   ua bua cua chua dua fua gua hua    uai buai cuai chuai duai fuai guai huai    uan buan cuan chuan duan fuan guan huan    uang buang cuang chuang duang fuang guang huang    ui bui cui chui dui fui gui hui    un bun cun chun dun fun gun hun    uo buo cuo chuo duo fuo guo huo    v        ju   van        juan   vang        juang   ve        jue   vn        jun        k l m n p q r s     a ka la ma na pa  ra sa   ai kai lai mai nai pai  rai sai   an kan lan man nan pan  ran san   ang kang lang mang nang pang  rang sang   ao kao lao mao nao pao  rao sao   e ke le me ne pe qe re se   ei kei lei mei nei pei qei rei sei   en ken len men nen pen qen ren sen   eng keng leng meng neng peng  reng seng   er           eri ki li mi ni pi qi ryi syi   ia  lia mia nia pia qia     ian  lian mian nian pian qian     iang  liang miang niang piang qiang     iao  liao miao niao piao qiao     ie  lie mie nie pie qie     in  lin min nin pin qin     ing  ling ming ning ping qing     iong  liong miong niong piong qiong     iu  liu miu niu piu qiu     o ko lo mo no po  ro so   ong kong long mong nong pong  rong song   ou kou lou mou nou pou  rou sou   u ku lu mu nu pu qwu ru su   ua kua lua mua nua pua  rua sua   uai kuai luai muai nuai puai  ruai suai   uan kuan luan muan nuan puan  ruan suan   uang kuang luang muang nuang puang  ruang suang   ui kui lui mui nui pui  rui sui   un kun lun mun nun pun  run sun   uo kuo luo muo nuo puo  ruo suo   v  lv  nv  qu     van  lvan  nvan  quan     vang  lvang  nvang  quang     ve  lue  nue  que     vn  lvn  nvn  qun          sh t w x y z zh      a sha ta wa  ya za zha    ai shai tai wai xai yai zai zhai    an shan tan wan  yan zan zhan    ang shang tang wang  yang zang zhang    ao shao tao wao  yao zao zhao    e she te we xe yee","date":"2020-09-01","description":"人工智能歌手","tags":"微软小冰\n人工智能\n虚拟歌手\n音乐创作\nVOCALOID","title":"微软小冰：X Studio 人工智能歌手","uri":"/2020/09/microsoft-xiaobing-xstudio-voice-review/"},{"content":"微软模拟飞行 2020 是微软公司发行的最新模拟飞行游戏，拥有精细的全球真实地景、众多机型和飞机场。Xbox Game Pass for PC 是微软推出的游戏增值服务，在订阅期间可以免费畅玩超过 100 款游戏大作。本文介绍如何通过订阅港区 XGP 来获得一个月的游戏使用资格，首月优惠价格HK$10，续费价格每月HK$39。\n  function loadDPlayer(){ let dp = new DPlayer({ container: document.getElementById(\"a\"), autoplay: false , theme: \"#b7daff\", loop: false , lang: \"zh-cn\", screenshot: true , hotkey: true , preload: \"auto\", logo: \"\", volume: 0.7 , mutex: true , video: { url: \"/videos/Microsoft.Flight.Simulator.A.History.flv\", pic: \"\", thumbnails: \"\", type: \"auto\", }, subtitle: { url: \"\", type: \"webvtt\", fontSize: \"20px\", bottom: \"10%\", color: \"#b7daff\", }, }); } document.addEventListener('DOMContentLoaded', loadDPlayer, !1);   首先，你当然需要一个微软账号。 访问港区订阅连接，选择加入。 登入以后，按照提示添加支付宝支付方式签订免密支付协议，扣款 10 港币对应汇率的人民币后订阅一个月 XGP 成功。 访问港区XGP 页面，下载并安装 Xbox 应用。 Windows 设置 - 时间和语言 - 区域，将国家或地区切换到香港特别行政区。 打开 Microsoft Store，搜索 Microsoft Flight 下载安装游戏，或者点此连接  注意 如果一个月以后不需要再使用 XGP，请务必按照下面步骤解除自动订阅和支付宝免密支付协议。\n 在XGP 订阅管理关闭定期账单 在付款方式删除支付宝免密支付   ","date":"2020-08-18","description":"XGP","tags":"Xbox\nXGP\n微软模拟飞行","title":"9元订阅港区 Xbox Game Pass for PC 畅玩 Microsoft Flight 标准版一个月","uri":"/2020/08/join-xbox-game-pass-for-pc-and-play-microsoft-flight-2020/"},{"content":"NGA 社区 PC 网页端爆炸了一天了，到现在还没解决，果然是移动端 App \u0026gt; 小程序 \u0026gt; PC 端 \u0026gt; Web 端。\n打开浏览器开发者工具，不难发现所有的 js 文件都加载失败了。点开连接，发现原来是 img4.nga.178.com 域名的证书早就过期了。目前 NGA 的两个主站域名，bbs.nga.cn 和 nga.178.com 的证书都没有过期，而且都采用的是泛域名证书 😓。而 CN 域名强制跳转 https，COM 域名不强制跳转，所以不加 https 的 nga.178.com 访问是没有任何问题的。临时解决办法就是访问https://img4.nga.178.com，然后忽略证书错误让所有 js 文件都能正确加载。等 NGA 社区更新证书后记得重新启用警告。另外一个稍微麻烦点的办法就是将所有没有加载成功的 js 文件代码复制到油猴脚本里运行。\n     \n","date":"2020-08-02","description":"NGA社区","tags":"艾泽拉斯国家地理\nNGA\n证书","title":"NGA社区子域名证书过期引发的UI爆炸惨案","uri":"/2020/08/nga-sub-domain-cert-expired/"},{"content":"目前威联通 NAS 上面没有官方的百度网盘程序，第三方的 baidupcs-go-web 也似乎处于不可用的状态，目前能够勉强能用的曲线救国的方法是使用百度官方的 Linux 客户端，然后通过远程桌面连接的方式来使用。得益于 docker 镜像，目前不需要通过安装 Linux 虚拟机这种笨重的方式来实现，这里介绍两个 docker 镜像。\n鉴于国内网络环境不太友好，推荐使用 Registry 国内镜像服务器来加速。\n johnshine/baidunetdisk-crossover-vnc 项目地址: https://github.com/john-shine/Docker-CodeWeavers_CrossOver-VNC\n镜像地址: https://hub.docker.com/r/johnshine/baidunetdisk-crossover-vnc\n高级设置示例：\n 环境变量新增vnc_password，用于设置密码 网络 5901 为 vnc 客户端连接端口，6080 为 web 端口，根据实际选择主机端口转发 挂载共享文件夹，挂载路径为/home/baidu/baidunetdiskdownload，本机共享文件夹选择自己想要储存在 NAS 的位置即可     \n 文字显示对中文、英文之外的支持比较差，比如韩文、日文。键盘支持中文输入法。 在容器内~/baidunetdiskdownload/目录下添加.reset 文件夹，重置百度云客户端设置 在容器内~/baidunetdiskdownload/目录下添加.vnc/passwd.txt 文件，设置 vnc 密码  johngong/baidunetdisk 项目地址: https://github.com/gshang2017/docker\n镜像地址: https://hub.docker.com/r/johngong/baidunetdisk\n高级设置示例:\n 环境变量新增VNC_PASSWORD，用于设置密码 网络 5900 为 vnc 客户端连接端口，5800 为 web 端口，根据实际选择主机端口转发 挂载共享文件夹，挂载路径为下载目录/config/baidunetdiskdownload和设置目录/config，本机共享文件夹选择自己想要储存在 NAS 的位置即可 剪贴板无法使用中文，似乎也没有中文输入法，但是对中英文以外的语言显示支持的还算不错。   百度的官方 Linux 客户端似乎对会员也是有限速的，第一个 docker 镜像似乎最大只能到 3M/S 左右了，后一个镜像倒是没有限速，可能跟客户端版本有关系。\n","date":"2020-07-23","description":"百度网盘","tags":"百度网盘\n百度云\nVNC\ndocker\ncontainer station","title":"威联通：VNC连接Linux客户端曲线救国使用百度网盘","uri":"/2020/07/qnap-baidunetdisk-vnc/"},{"content":"DzzOffice 是一套开源办公套件，适用于企业、团队搭建自己的 类似“Google 企业应用套件”、“微软 Office365”的企业协同办公平台。1\n简介  DzzOffice 由多款开源办公应用组成，安装 DzzOffice 框架后，可根据需要从内部的应用市场进行选择和安装。应用能够单独使用，也能与其他多款应用组合使用。 DzzOffice 能够结合企业微信、钉钉来进一步扩展移动办公与沟通协同能力，无论身处何地都能轻松协作。 DzzOffice 专注通用型办公应用并开源免费发布，您能够放心的使用，或对其进行二次开发，在已有通用功能的基础上，开发或结合企业正在使用的行业/专业系统，来形成完整的行业软件解决方案。  官方网站: http://dzzoffice.com/index.html\n开源演示: http://demo.dzz.cc\n项目下载: https://gitee.com/zyx0814/dzzoffice/releases\n功能    网盘: 企业、团队文件集中管理。主要体现的功能是支持企业部门的组织架构建立共享目录，也支持组的方式灵活建立共享目录。支持文件标签，多- 版本，评论，详细的目录权限等协作功能。\n  文档: 在线 Word 文档协作工具。前端做了一套模板管理，用于企业添加自己的常用文档模板，如空白合同。后端支持 office online server，onlyoffice，collaboraoffice 来实现文档预览与协同编辑。\n  表格: 在线 Excel 协作工具。同上\n  演示文稿: 在线 PPT 文档浏览、编辑工具。同上\n  记录: 多人参与协作的记录本，主要体现协作记录内容。\n  新闻: 文章系统，可用于企业新闻，通知等用途\n  通讯录: 企业人员联系方式查询\n  文集: 通过树形目录有序管理文档。支持 Markdown 编辑，支持导入导出 txt，epub、mobi、azw3\n  相册: 企业，团队图片管理\n  任务板: 任务管理、团队协作\n  讨论板: 内部论坛设置\n  表单: 表单，问卷工具\n  企业根据需要可以只使用一款工具，也可以多款工具组合使用。例如团队需要一个任务管理工具，可以只安装一个任务板，登陆系统会直接进入任务板工具，没有其他工具的干扰。如果多个工具组合使用，可以设置默认登陆到哪个工具里。\n除了以上自己开发了一些工具，套件里还集成了大量的其他开源工具，如网盘里用到的在线压缩、解压，各类媒体文件预览，各类文档预览与编辑的支持，是各类开源程序的综合利用。\n更新  增加 云设置和管理 ，支持阿里云存储、七牛云存储、FTP/SFTP、本地磁盘等存储方式 增加 用户资料管理 ，支持自定义用户资料项，资料审核、认证和审核 修改应用市场应用在线安装方式，提高应用下载速度 增加伪静态支持，可以通过应用“伪静态管理”灵活配置各个页面的伪静态规则 机构和用户管理 优化添加部门管理员的体验 导入导出用户功能优化调整 部分页面移动端适配 增加首次安装引导页，引导管理员首次能正确配置系统 开放讨论板应用（可在应用市场内在线安装） 开放任务板应用（可在应用市场内在线安装） 其他功能完善、及 beta 版反馈问题的修复  安装 启用 Web 环境    部署程序 将最新项目下载解压到 Web 目录，然后打开安装地址 http(s)://mydomain.com:port/dzzoffice，按照安装指引一步步完成数据库、管理员设置即可。\n威联通默认数据库用户名为 root，密码是 admin，如果不对可以在控制台的 SQL 服务器设置页面更改根密码。\n        \n安装完成以后可以按照自己的需求安装应用和设置。\n  https://gitee.com/zyx0814/dzzoffice \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2020-07-19","description":"DzzOffice","tags":"DzzOffice\n协同办公\nOffice365\n云存储\n企业网盘\n大桌子办公","title":"威联通：部署免费开源的协同办公套件 DzzOffice","uri":"/2020/07/dzzoffice-installation-for-qnap-nas/"},{"content":"Joplin 是一个免费的开源笔记应用。笔记使用 Markdown 格式，支持外部编辑器（比如 VS Code），支持全文搜索，支持端对端加密，支持 Evernote、Markdown 格式导入，支持 JEX 专有格式、Markdown、HTML、PDF 等多种格式导出，支持 Nextcloud、Dropbox、OneDrive、WebDAV 等多种方式同步（默认本地存储），支持全平台客户端和浏览器扩展剪藏。[1]\n同步到 NAS  启用 Web 服务器      启用共享文件夹的 WebDAV 权限     Joplin 客户端设置（以 Windows 平台为例）   设置参考如下\n1 2 3  WebDAV URL: https://mydomain.com:5008/joplin WebDAV 用户名: admin WebDAV 密码: password   如果使用 HTTPS 连接，遇到了如下错误，查了项目 issue 说是自签名证书的问题，但是我明明用的是 Let\u0026rsquo;s Encrypt 的免费证书。\n1  request to https://mydomain.com:5008/joplin/ failed, reason: unable to verify the first certificate (Code UNABLE_TO_VERIFY_LEAF_SIGNATURE)   解决方案是打开高级选项，勾选忽略 TLS 证书错误或者自定义 TLS 证书，搜了一圈没找到更完美的解决方法。\n 同步到坚果云 除了 NAS，坚果云也同样支持 WebDAV 同步。\n Joplin 设置参考如下\n1 2 3  WebDAV URL: https://dav.jianguoyun.com/dav/ WebDAV 用户名: example@mail.com WebDAV 密码: password   WebDAV 备份 更改 WebDAV URL 时，请确保新位置具有与旧位置完全相同的内容（即将所有 Joplin 数据复制到新位置）。否则，如果新位置没有任何内容，Joplin 会认为您已删除所有数据，并将删除本地数据。因此，要更改 WebDAV URL，请按照以下步骤操作：\n 备份 Joplin 数据，以防出现问题。例如，导出为 JEX 存档。 最后一次同步来自 Joplin 客户端的所有最新数据（例如，来自桌面客户端） 关闭 Joplin 客户端。 在 WebDAV 服务中，将所有 Joplin 文件从旧位置复制到新位置。请确保复制所有目录，因为它包含您的图像和其他附件。比如.resource等隐藏文件夹。 完成后，再次打开 Joplin 并更改 WebDAV URL。 同步以验证一切是否正常工作。 对于需要同步的所有其他 Joplin 客户端重复执行步骤 5 和 6。  已知问题  大于 10 MB 的资源当前在移动设备上不受支持，因为它们可能会使应用程序崩溃。 非字母字符（如中文或阿拉伯语）可能会在 Windows 上的终端中产生故障。这是当前 Windows 控制台的限制。 ","date":"2020-07-19","description":"WebDAV同步解决方案","tags":"Joplin\nWebDAV\n威联通\n云笔记","title":"威联通：将 Joplin 笔记同步到 NAS","uri":"/2020/07/joplin-webdav-synchronisation-for-qnap-nas/"},{"content":"赚钱宝 3 代（现金版盒子）是迅雷网心科技赚钱宝团队倾心打造的产品，是一款能将闲置网络流量变现的创新型智能硬件产品。共享家庭闲置带宽，日日赚取现金收益，广受千万用户欢迎。通过迅雷网心科技自研的边缘计算技术，可将闲置的网络带宽、存储等计算资源转化成有价值的共享云计算服务，形成闲置资源再利用的“共享计算”循环模式。[1]\n赚钱宝以前只是听说过大名，自己也没整过，看了某视频 [2]，想着闲着也是闲着，买一台回来玩玩吧。\n  据说这现 3 代现金版盒子就是玩客云去库存，阉割了云存储，然后刷了个系统摇身一变而来。机身 2 个 UBS2.0 接口、1 个 1000Mbps 网口、1 个 HDMI 接口、1 个 SD 卡槽，附送一根网线、电源适配器。\n正好手头有一台 2.5 吋的上古西数 500G 元素移动硬盘，官方似乎推荐 480G 以上 SSD，机械硬盘的话容量推荐在 1TB 以上。官方宣传对移动宽带也做了优化，实际贡献上行带宽为 25Mbps 的情况下，折算每月约可得高达 45-60 元的现金奖励。事实真的有这么美好吗？\n影响收益的除了硬盘，还有网络环境，虽然对移动宽带做了优化，但是还是会受到 NAT 类型的影响（前期需要一周的缓存资源部署，收益会慢慢上来），收益排名：公网型＞映射公网型＞全锥型＞ IP 限制型＞端口限制型＞对成型。\n我这边很奇怪了，挂在同样的路由器下，我的 NAS 设备检测出来 NAT 是全锥型，而这台赚钱宝死活就是端口限制型，一样的 UPNP 开、端口转发开设置。以目前的上传流量，我这 200Mbps 下行、60Mbps 的移动宽带估计跑 10 台赚钱宝可以跑满带宽。目前跑了 10 天了，硬盘缓存 170G，总收益￥ 2.10。\n 7 月 28 日更新：打开路由器的 PPPoE Relay 功能，意外发现宽带至少可以双拨，设置赚钱宝直接拨号，NAT 类型变成更好的全锥型，目前几天收益分别是 ￥ 0.73、￥ 0.78、￥ 0.72\n     收益统计 7/11 7/12 7/13 7/14 7/15 7/16 7/17     下载流量 102.14 46.42 20.42 22.39 43.65 37.32 40.96   上传流量 53.75 32.46 10.69 8.07 31.27 32.56 35.54   每日收益 0.24 0.36 0.22 0.09 0.25 0.38 0.39    从数据来看，除了 7 月 11 日那天的收益有点奇怪（那天刚开启流量记录，大概是华硕路由器的统计有问题），收益基本和下载、上传同步变化，收益与上传同步很好理解，下载与上传同步，我想是每天都需要更新热门资源的缓存。按照官方所说的最大功耗 12 瓦计算每天消耗 0.288 千瓦时，平均电价 0.53/千瓦时计算每日电力成本为 0.15 元。说实在的，除非真的能够跑满带宽，不然以目前这收益没什么卵用，不知道公网型的 NAT 会不会好很多。按照目前的收益计算，网心科技支付的 CDN 价格大约是 0.009 元/GB，这些流量主要供爱奇艺、PPTV、酷狗、西瓜视频、抖音、迅雷（网心科技由其 100% 控股）等公司服务。\n另外，设备的 Web 管理界面是运行在 9999 端口上的，其他固定开放的端口还有 1988, 4321, 6881, 8900, 39531, 其他端口似乎是特定服务运行时开启，每次都不一样。\n 偶然一次发现瞬时能跑到 40Mbps 上行带宽，然而坚持了 1 分钟都不到，看起来应该是连上了的某个 BT 上传服务。\n 目前（7 月 18 日），官方全新价格 180 元，官方 99 新无外包装盒 79 元，闲鱼二手价格 75-85/台，10 台起售的 69/台。固态硬盘虽好，但是成本也高，500G 或 1TB 的二手机械硬盘（品牌机拆机盘）+ SATA 转 USB 看起来是非常廉价的方案。\n","date":"2020-07-18","description":"赚钱宝","tags":"网心云\n玩客云\n迅雷\n赚钱宝\n小融盒子\n边缘计算\nCDN","title":"网心云现金版盒子：赚钱宝3代收益分析","uri":"/2020/07/onethingpcs-box3/"},{"content":"“启蒙”创立于 1994 年。 自成立以来, 启蒙一直致力于成为中国玩具行业顶尖的积木品牌，为消费者提供优质、创新的产品。经过 25 年的努力，启蒙已发展成为国内积木行业的领军品牌，并发展成一家拥有 900 多名员工、极具竞争力的企业。 启蒙现拥有 700 多名技术工人的工厂，在广州和汕头两地，拥有超 60 人的顶尖研发设计团队，以及一支超过 100 人的销售团队。 今天，可以在 70,000 多个线下店找到启蒙积木。[1]\n这个牌子最近合作的国产 IP 授权系列都还可以（哪吒、姜子牙、阴阳师），当然和乐高相比产品的贴合度还是不够，整体还是松松垮垮的，拼好了拿的时候稍不注意就支离破碎了，优势就是价格和中国元素了。\n太空创想系列目前一共三个产品，分别是 K10201 训练服航天员，K10202 任务服航天员和 K10203 长征五号运载火箭。拼多多入手，两个方头仔实付￥ 38，长征五号实付￥ 95。\n点击展开图片  \r\r\r\r   长征五号运载火箭共 346 块，数量不算很多，拼接也不复杂。先拼发射平台，再拼火箭本体，接着拼好四个助推器，然后把这几个拼合起来就大功告成了。与真实的“胖五”对比，涂装、外形方面区别还是有的。首先没有采用国旗，中国航天和长征五号的标志也没有，替代的可能是一个原创的火箭标志（查不到），这些原因可能是有授权方面的问题。其次，助推器的顶部没有采用特殊零件来模仿真实的不对称顶部。从比例来看，整体还是比较协调的。\n点击展开图片  \r\r\r\r\r  ","date":"2020-07-11","description":"启蒙积木太空创想","tags":"启蒙\n积木\n国玩系列\n太空创想\n长征五号\nK10203","title":"启蒙积木国玩系列太空创想：长征五号运载火箭","uri":"/2020/07/enlighten-keeppley-k10203-long-march-5-series-launch-vehicle/"},{"content":"iOS 14 引入了 WiFi 的私有地址防止网络运营商追踪你的设备，所以导致无法成功连接到使用了 MAC 地址白名单的路由器，解决办法就是关闭这个功能或者将私有 MAC 地址加入白名单：\n设置 → 无线局域网，点开 WiFi 名称的详细信息，关闭使用私有地址。\n关闭前：\n 关闭后：\n ","date":"2020-06-29","description":"iOS14","tags":"iOS14\nPrivate Address\n私有地址\nMAC地址","title":"关闭私有地址解决 iOS 14 无法连接 WiFi","uri":"/2020/06/fix-wifi-connection-failure-in-ios14/"},{"content":"最近整理了以前下载的一些软件安装包，想起来在 QNAP NAS 上做个 Web 端下载目录站，就类似 everything 那种一个简单的目录列出的吧。看中了最简单的 Directory Lister [1], 下载源码到 Web 目录即可使用。\n功能简介  安装简单 一分钟即可上手。 亮色/暗色主题 根据个人需求定制。 自定义排序 自由展示文件/文件夹的排列顺序。 搜索功能 快速便捷定位文件位置。 哈希校验 提供 MD5, SHA1, SHA256 三种哈希值校验。 Readme 文件渲染 支持直接渲染 README 文件内容展示。 压缩下载 一键压缩下载整个文件夹。 多语言支持 支持 14 种语言切换。  环境需求  启用 Web 服务器  控制台 → 应用服务 → Web 服务器，启用 Web 服务器，根据需求修改端口和是否启用 HTTPS    PHP 版本 \u0026gt;= 7.2  开启压缩下载功能，需要启用 Zip 扩展 开启 Readme 文件渲染功能，需要启用 DOM 和 Fileinfo 扩展    目前我使用的 QTS 4.4.2 系统默认安装的 PHP 版本是 7.3.7, 默认开启了以上所需的三个扩展。\nSSH 登录后使用下面的命令分别可以查看当前 QTS 系统的 PHP 版本和安装的扩展：\n1  /usr/local/apache/bin/php -version   1  /usr/local/apache/bin/php -m   或者创建一个 test.php 扔到 Web 根目录下，然后浏览器访问 ip:port/test.php 查看：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  \u0026lt;?php echo PHP_VERSION; echo \u0026#34;\u0026lt;br\u0026gt;\u0026#34;; if (extension_loaded(\u0026#39;zip\u0026#39;)) { echo \u0026#34;zip 扩展已安装\u0026lt;br\u0026gt;\u0026#34;; } if (extension_loaded(\u0026#39;dom\u0026#39;)) { echo \u0026#34;dom 扩展已安装\u0026lt;br\u0026gt;\u0026#34;; } if (extension_loaded(\u0026#39;fileinfo\u0026#39;)) { echo \u0026#34;fileinfo 扩展已安装\u0026#34;; } ?\u0026gt;   安装配置  从官网下载压缩包 解压到 NAS 的 Web 目录  配置文件  复制 .env.example 文件为 .env 编辑 .env 文件修改配置变量  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  ; 是否开启 debug 模式，便于出错时查看错误信息定位问题 APP_DEBUG=false ; 设置显示语言，语言文件位于 app/translations 目录下 APP_LANGUAGE=en ; 是否开启暗色主题 DARK_MODE=false ; 是否直接渲染 Readme 文件 DISPLAY_READMES=true ; Readme 文件渲染时是否在页面顶部 READMES_FIRST=false ; 是否开启压缩下载 ZIP_DOWNLOADS=true ; 是否启用 GA 分析，接受字符串形式 ID GOOGLE_ANALYTICS_ID=false ; 是否启用 MA 分析，接受字符串形式 URL MATOMO_ANALYTICS_URL=false ; 是否启用 MA 分析，接受字符串形式 ID MATOMO_ANALYTICS_ID=false ; 自定义文件/文件夹排序 ; 默认值 type, 其他可选 natural, name, accessed, changed, modified, 自定义函数 ; 自定义函数 \\DI\\value() 接受两个参数 \\SplFileInfo 对象 ; 例如： ; \u0026#39;sort_order\u0026#39; =\u0026gt; \\DI\\value( ; function (SplFileInfo $file1, SplFileInfo $file2) { ; return strcmp($file1-\u0026gt;getRealPath(), $file2-\u0026gt;getRealPath()); ; }) ; ); SORT_ORDER=type ; 是否反转排序 REVERSE_SORT=false ; 是否隐藏特殊文件/文件夹，比如 index.php 和 app 文件夹 HIDE_APP_FILES=true ; 是否隐藏版本控制相关文件/文件夹，比如 Git 和 Mercurial HIDE_VCS_FILES=true ; 设置时间格式 ; 完整格式化变量参考：https://www.php.net/manual/en/function.date.php#refsect1-function.date-parameters DATE_FORMAT=\u0026#34;Y-m-d H:i:s\u0026#34; ; 设置时区 ; 完整 PHP 时区列表：https://www.w3school.com.cn/php/php_ref_timezones.asp TIMEZONE=\u0026#34;UTC\u0026#34; ; 设置可被 HASH 文件大小的上限（字节，byte），防止访问大文件超时错误 ; 接受 0 - 9223372036854775807 的整数 MAX_HASH_SIZE=1000000000   app.php 该配置文件位于 app/config/app.php，目测 .env 配置的优先级高于 app.php。两者配置选项基本相同，只是后者可以指定隐藏哪些文件。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  ; 指定首页标题 \u0026#39;home_text\u0026#39; =\u0026gt; Helpers::env(\u0026#39;HOME_TEXT\u0026#39;, \u0026#34;Home\u0026#34;), ; 通过文件定义隐藏文件列表，可选值为文件路径 ; 默认值 .hidden, 即在根目录创建 .hidden 文件来列出那些文件需要被隐藏 \u0026#39;hidden_files_list\u0026#39; =\u0026gt; Helpers::env(\u0026#39;HIDDEN_FILES_LIST\u0026#39;, \u0026#39;.hidden\u0026#39;) ; 需要隐藏文件的列表，支持通配符 \u0026#39;hidden_files\u0026#39; =\u0026gt; [ ; 完全匹配根目录下 somefile.txt 文件 \u0026#39;somefile.txt\u0026#39;, ; 匹配根目录下名为 README 的任意文件 \u0026#39;README.*\u0026#39;, ; 匹配 foo 目录下的所有文件 \u0026#39;foo/*\u0026#39;, ; 匹配根目录下 schema.yml 或者 schema.yaml 两个文件 \u0026#39;schema.{ya?ml}\u0026#39;, ; 匹配任意目录下的任意 jpg 图片文件 \u0026#39;**/*.jpg\u0026#39;, ]   缓存配置 该配置文件位于 app/config/cache.php，用于控制缓存的类型和过期时间等。\n讲两个主要的配置，其他可根据需求来改：\n1 2 3 4 5  ; 设置缓存类型，默认值 file, 设置为 array 禁用缓存 \u0026#39;cache_driver\u0026#39; =\u0026gt; Helpers::env(\u0026#39;CACHE_DRIVER\u0026#39;, \u0026#39;file\u0026#39;) ; 设置缓存过期时间，默认值 0 为永不过期，需要强制刷新页面才会更新新增内容 ; 可以自定义一个合适的时间，单位为秒，比如 7200 (2小时) \u0026#39;cache_lifetime\u0026#39; =\u0026gt; Helpers::env(\u0026#39;CACHE_LIFETIME\u0026#39;, 0)   图标配置 该配置文件位于 app/config/icon.php，用于配置指定文件类型的显示图标。默认图标由 Font Awesome 5 提供。\n默认的配置有些是不正确的，比如 \u0026nbsp;图标 fas fa-window 应为 fab fa-windows，可以根据实际情况调整。当然也可以使用其他图标库，比如阿里巴巴的 iconfront [2]。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  return [ // 图片 \u0026#39;jpg\u0026#39; =\u0026gt; \u0026#39;fas fa-image\u0026#39;, \u0026#39;png\u0026#39; =\u0026gt; \u0026#39;fas fa-image\u0026#39;, // 数据 \u0026#39;json\u0026#39; =\u0026gt; \u0026#39;fas fa-file-alt\u0026#39;, \u0026#39;yaml\u0026#39; =\u0026gt; \u0026#39;fas fa-file-alt\u0026#39;, // 代码 \u0026#39;css\u0026#39; =\u0026gt; \u0026#39;fab fab fa-css3\u0026#39;, \u0026#39;html\u0026#39; =\u0026gt; \u0026#39;fab fa-html5\u0026#39;, \u0026#39;php\u0026#39; =\u0026gt; \u0026#39;fab fa-php\u0026#39;, // etc...   存在问题 目前无法新标签页打开链接，想要打开 README 说明文件里的链接很蛋疼，需要使用 ctrl + 单击 或者鼠标中键等方式。根据 issue [3]，项目组好像也没打算改进这个功能。\n参考资料：https://github.com/DirectoryLister/DirectoryLister/wiki\n","date":"2020-06-25","description":"Directory Lister","tags":"Directory Lister\nFile Sharing\n目录列出\n文件共享","title":"威联通：Directory Lister 搭建简单的软件库","uri":"/2020/06/build-application-archive-with-directory-lister/"},{"content":"Bandizip is a powerful archiver which provides an ultrafast processing speed and convenient features. Available free of charge, and its paid editions support a variety of advanced features.\nhttps://www.bandisoft.com/bandizip/\n下载 Bandizip v6.27\rBandizip 6.x 以及 7.x 标准版（免费）的对比    名称 Bandizip 6.x Bandizip 7.x 标准版     价格 免费 免费   使用时长限制 不限制（永久使用） 不限制（永久使用）   允许的使用范围 可用于个人、家庭以及商业用途 可用于个人、家庭以及商业用途   广告投放 无广告投放 含有广告投放   基本功能提取并创建压缩包文件（支持 zip、7z、rar 等格式） ✅ ✅   压缩文件中的图片预览 ✅ ✅   高级压缩设置 ❌ ✅\n可以选择压缩算法或压缩分卷大小   压缩文件内的图片预览 ❌ 🔺\n允许在小图标中进行预览   支持非常多的解压缩格式（例如 7z、zip、rar 等） - BR, ZSTD, UDF2.6, NSIS(latest)   对压缩文件的其他修改 - ✅   更新策略 可以选择是否收到更新通知，并安装最新版本或选择不安装（我们不会干涉您的选择） 将收到通知并自动进行更新，无法选择是否更新为最新版本（因 6.x 版本已经停止更新，我们推荐更新到 7.x 以获得更多崭新功能）    下载免安装的便携版 Bandizip  BANDIZIP6-PORTABLE.ZIP BANDIZIP7-PORTABLE.ZIP  下载 Bandizip 7.x 的离线安装包(标准版 / 专业版)  BANDIZIP-SETUP-STD-ALL.EXE  分流地址  China: https://cn-dl.bandisoft.com Singapore: https://sg-dl.bandisoft.com Korea: https://kr-dl.bandisoft.com Japan: https://jx-dl.bandisoft.com US: https://ux-dl.bandisoft.com Europe: https://eu-dl.bandisoft.com ","date":"2020-06-22","description":"Bandizip","tags":"压缩软件\nBandizip","title":"Bandizip 6.x 旧版本","uri":"/2020/06/bandizip-archive/"},{"content":"昨天闲来没事打开卡巴斯基的查看应用程序活动工具，发现一个可疑程序“TenorshareService Application”。打开相应目录后，程序名字是“TenorshareWinAdService.exe”。从名字来看好像是一个广告相关的服务，查了下 Tenorshare 是个苹果设备数据恢复工具，但是我从来没有安装过这玩意。印象中，我装过和苹果有关的东西就是 iTunes 和 PP 助手，目前早就被卸载了。不靠谱地推测可能是后者的原因，当然也有可能是其他软件或者其他什么牛逼的木马后台给我装的 🐶。\n 既然知道是个没什么用的东西，那就删掉它吧。控制面板肯定是没有卸载途径的，既然是叫 Service，那么去服务里看看吧。果不其然，服务里有个同名的服务，先停止服务。\n 管理员运行 CMD/PS，输入 sc delete TenorshareWinAdService，大功告成。\n  还是要警惕一些可能存在的流氓软件的后台，尤其是自启动的服务。\n","date":"2020-06-08","description":"卸载TenorshareWinAdService","tags":"后台软件\n广告服务\n流氓软件","title":"卸载偷跑的后台服务 TenorshareWinAdService","uri":"/2020/06/uninstall-windows-service-tenorsharewinadservice/"},{"content":"搜狗输入法应该是目前中文拼音输入法中最流行的，最近的一件事让它更加“火”了。很多用户发现电脑不断出现托盘闪烁弹窗，点击后即为淘宝天猫的 6.18 促销网页。火绒工程师溯源调查后发现，该弹窗均来自于常用软件“搜狗输入法”，该广告配置通过云控下发，无法通过设置关闭。进一步分析发现，该软件除了疯狂弹窗，还存在统计用户浏览器浏览历史数据等越位行为，符合广告程序的定义。目前，火绒已对该软件中广告模块进行拦截查杀。[1]\n其实这种劣迹也不是搜狗第一次了，如果用关键词“搜狗输入法 流氓”搜索下会有很多用户反馈事件。所以呢，早点放弃搜狗输入法是唯一的解决办法。说起来，2008 年我开始使用搜狗输入法，那时候还是喜欢换皮肤的年纪。后来用过一段时间的谷歌拼音和必应输入法，因为都不维护了，期间也用过一段时间 QQ 拼音纯净版[2]，后来也不维护了。这么多年来，用的时间最长的还是我现在用的 Windows 10 微软拼音以及前辈微软拼音 2010 等。微软的所有词库都打开的情况下，用了这么多年了并没有感觉什么不适，反正也不是什么新闻媒体速记员，不觉得有什么缺少的内容。可能从词库的完整性来说，肯定没有搜狗的词库强大，但是可以通过“深蓝词库”转换器这款软件将搜狗的词库转换成微软拼音可用的用户定义的短语导入。至于其他所谓技巧性的功能对我来说好像不是刚需。\n深蓝词库转换器下载: https://github.com/studyzy/imewlconverter/releases\n搜狗细胞词库下载: https://pinyin.sogou.com/dict/\n可以直接使用下载的细胞词库，或者将正在使用的词库备份为 bin 文件或导出为 txt 文件。然后，将词库文件拖拽到转换器会自动识别来源，在右侧选择目标格式“Win10 微软拼音（自定义短语）”或“Win10 微软拼音（自学习词库）”，注意后者只能支持最多 2 万个词条，所以建议通过高级设置中的词条过滤来控制源词条数量。如果喜欢使用双拼，工具还提供了多种双拼方案，以便在生成短语的拼音时生成对应的双拼。\n 如果源词条数量很多的话，导入以后打开用户自定义短语界面会变得很卡，所以我是不推荐导入那些行业分类的细胞词库，反正微软这边也有，不会差到哪里去。下定决心要从搜狗切换到微软的话，只需要把自己的个人词库导入就应该够用了。\nWindows 10 微软拼音的词库设置在设置 → 时间和语言 → 语言 → 首选语言中文选项 → 键盘微软拼音选项 → 词库和自学习。在这个界面可以导入导出词库，自定义短语，打开云候选，启用所有的专业词典。\n 点击展开更多技巧  基于 Windows 10 Build 1909，以下快捷模式需要在中文模式下\n\r  简繁输入切换，默认 Ctrl+Shift+F\n  打开 emoji 输入，默认 Ctrl+Shift+E\n\r  人名输入，例如全拼模式下输入 liuying 后面跟上 ;r 进入人名选择\n\r  U 模式输入，全拼模式下输入 U 进入，可根据笔画、拆分的方式输入汉字以及输入多种符号。例如：输入 uhs 表示“十”（笔画模式：横竖），ushuishuishui 表示“淼”，还有 uudw、uuxh、uuts、uubd、uusx、uujh 和 uuzm 等多种符号模式。\n\r  V 模式输入，全拼模式下输入 V 进入，可以输入中文格式数字、日期和时间等。例如：输入 v123 可以选择“一百二十三”、“壹佰贰拾叁”中文格式数字，v2020.6.7 可以选择 2020 年 6 月 7 日、二〇二〇年六月七日等多种日期格式，v1+2 可以选择结果“3”或者公式“1+2=3”。\n\r     \n 2013 年 09 月 16 日，腾讯 4.48 亿美元注资搜狗，宣布将搜搜和 QQ 输入法业务与搜狗现有业务进行合并。[3] 所以目前官方的 QQ 拼音输入法应该还是搜狗的换皮版本，据说也不干净。\n","date":"2020-06-07","description":"深蓝词库","tags":"搜狗\n输入法\n词库\n微软拼音\n深蓝词库","title":"搜狗输入法词库转换成微软拼音自定义短语","uri":"/2020/06/sougou-pinyin-lexicon-converts-to-win10ms-pinyin/"},{"content":"Windows To Go[1]是 Windows 10 企业版和 Windows 10 教育版中的一项功能，支持创建可从电脑上 USB 连接的外部驱动器启动的 Windows To Go 工作区。事实上 Windows 10 专业版也是可以用的，但是默认所有版本都是没有办法常规升级大版本的。\n前言 之前升级过一次 Windows To Go 系统, 是从 1709 升级到 1803, 记得好像用的是 VMware Workstation 15 Player。现在 1803 早就过了服务终止日期[2]，这次试着用 Hyper-V 来升级下。\n 启用 Hyper-V 打开控制面板 → 程序和功能 → 启用或关闭 Windows 功能，勾选 Hyper-V，等待加载完毕后重启电脑。\n 设置 WTG 优盘 WTG 优盘连接以后，打开磁盘管理，将优盘设置为脱机。\n 新建虚拟机 根据你的操作系统以及是否支持 UEFI 来选择建立一代还是二代虚拟机，具体资料可参考官方文档[3]。\n我手头的系统是在旧电脑（13 年的 Dell Optiplex）上使用的，不支持 UEFI，所以使用一代虚拟机。\n一路默认下来，配置网络可以稍后新建，虚拟硬盘选择以后附加虚拟硬盘，完成建立。\n设置虚拟机 虚拟机设置里添加一个 IDE 磁盘驱动器，挂载已经设置为脱机的 WTG 优盘。\n虚拟交换机管理器里新建一个虚拟交换机，选择外部网络，选择实体机正常上网的网卡，勾选允许管理操作系统共享此网络适配器，然后再到设置的网络适配器里选择新建的虚拟机交换机。\n完成设置后，我这边一开始启动报错，根据提示关闭设置里的检查点就可以了。\n    更新系统 登入系统后，进入正常自动更新的流程或者通过加载系统镜像来手动更新。\n   结论 使用过程中，很容易失去对虚拟机的连接，还碰到了多次蓝屏，包括更新过程中也遇到了蓝屏失败了一次，不知道是什么设置没做好，也懒得分析错误转储文件了。相对而言，还是 VM 上手简单些，不推荐 Hyper-V 来更新 Windows To Go 系统。\n","date":"2020-06-02","description":"Windows To Go","tags":"Windows\nWTG\n虚拟机\nHyper-V","title":"借助 Hyper-V 虚拟机升级 Windows To Go 系统","uri":"/2020/06/windows-to-go-update/"},{"content":"五月的最后一天，在没有比赛的日子里，没有动力，荒废了一个多月后，因为五月天的线上演唱会，决定从今天开始恢复跑步计划。\n  实测最大心率: 190, 静息心率: 50, 储备心率: 140\n  有氧慢跑：136—155, 一般距离不超过16公里，强度约储备心率*的62%-75%。 长距离跑：141—155, 一般指超过26公里的跑步训练，为了提升耐力，为全马距离做准备。强度约为储备心率的65%-75%。 中长距离跑：18-26公里之间，配速与长距离跑接近。 马拉松配速跑：训练中很大一部分距离以目标马拉松配速完成。 乳酸门槛跑/节奏跑：157—173, 训练中有超过20分钟是以乳酸阈值配速进行的节奏跑，目标提高乳酸阈值，帮助提升跑马拉松时的比赛配速。强度一般在储备心率的77-88%。 恢复跑：141, 配速轻松的放松慢跑，加速身体恢复，为下次训练作准备。 XT/rest：跑步核心力量提升，休息或者非跑步的其它运动，但强度不要太高。 最大摄氧/间隙（VO2Max）：174-190, 间歇跑总距离不长，强度很大，场地也尽量选择操场或环形封闭公路。强度约为储备心率的89-100%。     训练 周一 周二 周三 周四 周五 周六 周日 每周统计     第一周 XT/Rest 10 公里有氧 XT/Rest 10 公里有氧 XT/Rest 8 公里恢复 15 公里中距离 43   第二周 XT/Rest 10 公里有氧 XT/Rest 6 公里乳酸门槛+6 公里恢复 8 公里恢复 XT/Rest 18 公里中距离 48   第三周 XT/Rest 10 公里有氧 XT/Rest 18 公里中长距离 XT/Rest XT/Rest 16 公里马拉松配速+6 公里恢复 50   第四周 XT/Rest 8 公里恢复 XT/Rest 6 公里乳酸门槛+6 公里恢复 8 公里恢复 XT/Rest 26 公里长距离 54   第五周 XT/Rest XT/Rest 18 公里中距离 XT/Rest 6 公里乳酸门槛+6 公里恢复 XT/Rest 18 公里中距离 48   第六周 XT/Rest 10 公里有氧 XT/Rest 8 公里乳酸门槛+6 公里恢复 XT/Rest XT/Rest 28 公里长距离 52   第七周 XT/Rest 8 公里恢复 19 公里中距离 XT/Rest 11 公里乳酸门槛+8 公里恢复 XT/Rest 18 公里长距离 64   第八周 XT/Rest 11 公里乳酸门槛+8 公里恢复 6 公里恢复 XT/Rest 10 公里有氧 XT/Rest 28 公里长距离 63   第九周 XT/Rest 10 公里恢复 XT/Rest 19 公里中距离 XT/Rest 8 公里恢复 16 公里有氧 53   第十周 XT/Rest 12 公里有氧 10 公里恢复 XT/Rest 8 公里乳酸门槛+6 公里恢复 XT/Rest 28 公里长距离 64   第十一周 XT/Rest XT/Rest 12 公里乳酸门槛+6 公里恢复 XT/Rest 8 公里有氧 XT/Rest 16 公里中距离 42   第十二周 XT/Rest 10 公里恢复 XT/Rest 10 公里恢复 XT/Rest XT/Rest 马拉松比赛日 42 公里 62     ","date":"2020-05-31","description":"五月天","tags":"跑步\n闲言碎语\n五月天","title":"五月最后一天","uri":"/2020/05/mayday-31st/"},{"content":"最近在解包威联通官方应用的时候，发现了一个命令 log_tool， 可以用来输出事件日志到 Web 界面，构建 QPKG 应用的时候可以派上用场。\n基本用法 :\n1  log_tool [-t --type [0-2]] [-a --append MSG]   1 2  -t, --type [0-2] 指定日志类型，0 : 消息, 1 : 警告, 2 : 错误, 默认值 : 0 -a --append MSG 输出消息, MSG 为消息内容   其他选项 :\n1 2 3 4 5 6 7 8 9  -T, --time TIMESTAMP 指定记录时间 -u, --user USER 指定来源用户 -p, --ip IP 指定来源 IP -m, --comp NAME 指定设备名称 -x, --msgid MSGID 指定消息 ID -A, --app_id APPID 指定来源应用 ID -N, --app_name APP Name 指定来源应用名称 -C, --category_id category ID 指定消息分类 ID -G, --category category 指定消息分类   更多用法可以通过 log_tool [-h --help] 帮助命令查看\n1  log_tool -t 1 -N \u0026#34;myapp\u0026#34; -G \u0026#34;status\u0026#34; -a \u0026#34;this is a test message\u0026#34;   在 Web 管理界面显示结果如下 :\n ","date":"2020-05-26","description":"系统事件日志","tags":"威联通\nQNAP\nlog_tool\n日志","title":"威联通：log_tool 命令","uri":"/2020/05/qnap-logtool/"},{"content":"crontab 是 UNIX / Linux 系统用来执行周期性任务的命令。 crond 命令每分钟会检查是否有要执行的作业，如果有要执行的工作便会自动执行该工作，这类作业一般称为 cronjob 。\n基本语法 1  crontab [ -u user ] { -l | -r | -e }    -u user : 设定指定 user 的 cronjob, 如果不指定的话，就是表示设定当前用户的 -e : 编辑 crontab 配置, 在威联通 NAS 中不能使用这种方式，因为重启之后会丢失。 -r : 删除所有 cronjob, 谨慎使用，会把系统任务都删除 -l : 列出所有 cronjob  编辑任务 想要永久保存自定义任务，应当将任务写入 /etc/config/crontab 文件\n比如 :\n1  echo \u0026#34;1 4 * * * /share/custom/scripts/custom1.sh\u0026#34; \u0026gt;\u0026gt; /etc/config/crontab   或者直接使用文本编辑器打开 /etc/config/crontab 文件直接写入 :\n1  1 4 * * * /share/custom/scripts/custom1.sh   上面任务配置表示在每天凌晨 4 点 1 分时自动执行后面的 custom1.sh 脚本\n新创建的 cronjob 不会马上执行，至少要过 2 分钟后才可以，当然你可以重启 cron 来马上执行\n1  crontab /etc/config/crontab \u0026amp;\u0026amp; /etc/init.d/crond.sh restart   注意 不要忘记给需要周期性执行的程序赋予可执行权限 : chmod +x custom1.sh  删除指定 cronjob :\n1  sed -i \u0026#34;\\|/share/custom/scripts/custom1.sh|d\u0026#34; /etc/config/crontab   格式说明 1  f1 f2 f3 f4 f5 program    其中 f1 是表示分钟, f2 表示小时, f3 表示一个月份中的第几日, f4 表示月份, f5 表示一个星期中的第几天。 program 表示要执行的程序。 当 f1 为 * 时表示每分钟都要执行 program, f2 为 * 时表示每小时都要执行程序，其馀类推 当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行, f2 为 a-b 时表示从第 a 到第 b 小时都要执行，其馀类推 当 f1 为 */n 时表示每 n 分钟个时间间隔执行一次, f2 为 */n 表示每 n 小时个时间间隔执行一次，其馀类推 当 f1 为 a, b, c,... 时表示第 a, b, c,... 分钟要执行, f2 为 a, b, c,... 时表示第 a, b, c...个小时要执行，其余类推  1 2 3 4 5 6 7 8  * * * * * - - - - - | | | | | | | | | +----- 星期中星期几 (0 - 7) (星期天 为0) | | | +---------- 月份 (1 - 12) | | +--------------- 一个月中的第几天 (1 - 31) | +-------------------- 小时 (0 - 23) +------------------------- 分钟 (0 - 59)   引用来源  https://wiki.qnap.com/wiki/Add_items_to_crontab?setlang=zh https://www.runoob.com/linux/linux-comm-crontab.html ","date":"2020-05-25","description":"crontab","tags":"威联通\nQNAP\ncron\ncrontab\ncronjob\n定时任务","title":"威联通：定时任务","uri":"/2020/05/qnap-crontab/"},{"content":"使用 Linux 各大发行版的用户相信对包管理器 [1] 并不陌生， Debian 有 apt, CentOS 有 yum, 而 Windows 平台上第三方的包管理器有 scoop 和 chocolatey，现在微软推出了自己的 Windows 程序包管理器及其命令行工具 winget [2] , 目前处于公共预览版阶段。\n说起来, scoop 默认很多都是连接的 GitHub, 不科学上网速度实在是太慢了，而 chocolatey 默认软件源的版本更新可能不太及时。目前看微软的这个工具有些也是 GitHub, 希望后续官方能够支持更多常用软件，速度能够上来，能够有靠谱的国内镜像源就更好。\n WinGet “借鉴”了加拿大开发者 Keivan Beigi 的开源项目（已不再维护）[3]，微软高级项目经理 Andrew 却没兑现当初的承诺，甚至连差旅费都没给报销，在被作者本人爆出来后才发了个不解决实质问题的感谢声明。\n详情可阅读 Keivan Beigi 和 Andrew 的博文。\nhttps://medium.com/@keivan/the-day-appget-died-e9a5c96c8b22\nhttps://devblogs.microsoft.com/commandline/winget-install-learning/\n 安装 注意 目前需要 Windows 10 1709 (16299) 或更新版本  安装方式有三种:\n  微软应用商店（推荐）\nwinget 内置于应用安装程序 [4] , 需要使用 Windows 10 预览版 [5] 或加入预览通道 [6]\n  Github Release\n从 Release [7] 下载最新安装程序，缺点就是不会自动更新。如果安装报错，需要安装 Desktop Bridge VC++ v14 Redistributable Package [8] 和 Microsoft.VCLibs.140.00.UWPDesktop package\n  从源码编译\n满足以下条件，使用 Visual Studio 2019 自行编译最新源码后安装:\n Windows 10 1709 (16299) 或更新版本 开发者选项中打开开发人员模式 [9] Visual Studio 2019 [10] .NET 桌面开发基础、 C++ 桌面开发基础、 UWP 平台开发基础 Microsoft Visual Studio Installer Projects 插件 [11]    在我的笔记本和台式机上通过应用商店安装，笔记本上的自动加入了环境变量，而台式机上的并没有，此前的 Windows Terminal 也是这种情况，表现形式都是无法通过命令直接使用或者 Win + R 无法快捷打开。解决方式就是手动将 %USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps 加入环境变量。\n用法  常用命令 [12] :\n winget install \u0026lt;package name\u0026gt; : 安装应用程序  winget install -exact : 使用严格匹配的字符串安装应用   winget show \u0026lt;package name\u0026gt; : 显示应用程序详细信息 winget search \u0026lt;keyword\u0026gt; : 根据关键词搜索所有匹配的应用 winget source : 管理应用源  winget source add \u0026lt;name\u0026gt; \u0026lt;source url\u0026gt; : 添加应用源 winget source list \u0026lt;source name\u0026gt; : 显示源信息 winget source update \u0026lt;source name\u0026gt; : 更新源内容 winget source remove \u0026lt;source name\u0026gt; : 删除源 winget source reset \u0026lt;source name\u0026gt; : 删除所有第三方，重置到默认源    目前似乎还不能通过 winget 来卸载已经安装的应用。\n官方源列表: https://github.com/microsoft/winget-pkgs\n关于如何提交应用: https://github.com/microsoft/winget-pkgs#submitting-a-package\n基本上就是构建如下格式的 YAML 文件, 以 manifests\\\u0026lt;publisher\u0026gt;\\\u0026lt;package\u0026gt;\\\u0026lt;version\u0026gt;.yaml 路径给官方源提交一个 PR\n1 2 3 4 5 6 7 8 9 10 11  Id:string# publisher.package formatPublisher:string# the name of the publisherName:string# the name of the applicationVersion:string# version numbering formatLicense:string# the open source license or copyrightInstallerType:string# enumeration of supported installer types (exe, msi, msix)Installers:- Arch:string# enumeration of supported architecturesURL:string# path to download installation fileSha256:string# SHA256 calculated from installer# ManifestVersion: 0.1.0  官方也提供了两个工具 YamlCreate.ps1 [13] 和 Windows Package Manager YAML Generator [14] 来生成模板文件。\n最后通过 winget validate \u0026lt;manifest\u0026gt; 和 winget install -m \u0026lt;manifest\u0026gt; 来测试是否有效，通过测试后就可以提交了。\n引用来源  https://docs.microsoft.com/zh-cn/windows/package-manager/ https://github.com/microsoft/winget-cli/ ","date":"2020-05-25","description":"winget","tags":"winget\n包管理器","title":"Windows 程序包管理器","uri":"/2020/05/windows-package-manager-guide/"},{"content":"Let's Encrypt 是一家免费、开放、自动化的证书颁发机构（CA），为公众的利益而运行。它是一项由 Internet Security Research Group（ISRG）提供的服务。[1]\n前言 今天收到腾讯云的邮件，提醒我部署在 RT-AC87U 上的证书快要到期了。这个证书是免费申请的亚洲诚信一年，受限于“同一主域最多只能申请 20 张亚洲诚信品牌免费型 DV 版 SSL 证书”的约束条件，再加上不能泛域名签发，考虑将路由器和 NAS 上的证书都切换到 Let's Encrypt 的泛域名证书了。\n看了下文档 [2]，发现自动申请并到期续签不是太难。Let's Encrypt 提供了多种方式，官方推荐的是 Certbot 客户端 [3]，试了下在 NAS 上不太好使，个人推荐兼容 bash, dash 和 sh 多种 shell 环境的 acme.sh 脚本 [4]。\n安装脚本工具 SSH 连接到 NAS 上，安装 acme.sh 有两种方式 :\n  在线安装 :\n1  curl https://get.acme.sh | sh   或者\n1  wget -O - https://get.acme.sh | sh     离线安装 :\n1 2 3  git clone https://github.com/acmesh-official/acme.sh.git cd ./acme.sh ./acme.sh --install     默认安装到用户目录 ~/.acme.sh/\n同时自动创建了一个 cron 任务，每天定时自动检测所有的证书, 如果快过期了, 需要更新, 则会自动更新证书。\n申请安装证书 由于没有公网 IP，只能使用 DNS API 验证的方式来自动申请证书，以 Cloudflare 域名解析服务为例。\n切换到安装目录，复制子目录 dnsapi 下面的 dns_cf.sh 到安装根目录 :\n1 2  cd ~/.acme.sh cp dnsapi/dns_cf.sh dns_cf.sh   修改 dns_cf.sh，去掉 CF_Key 和 CF_Email 的注释，并用 Cloudflare 个人资料的 API 令牌 页面上的 Global API Key 和 账号绑定的邮件地址替换相应的值。\n1 2  CF_Key=\u0026#34;eV******b5pwX36Va9nt******1Pm8QqQ9S7e\u0026#34; CF_Email=\u0026#34;example@gmail.com\u0026#34;   申请并安装泛域名证书 :\n1 2 3 4 5 6 7  acme.sh --issue --dns dns_cf \\ -d 233so.com -d \u0026#34;*.233so.com\u0026#34; \\ --install-cert -d 233so.com \\ --cert-file /etc/stunnel/backup.cert \\ --key-file /etc/stunnel/backup.key \\ --reloadcmd \u0026#34;/share/Scripts/reloadcmd.sh\u0026#34; \\ --log /share/Private/cert/logs/acme.sh.log   威联通默认的证书存储位置是 /etc/stunnel/，其中 stunnel.pem 是证书和私钥二合一的证书，backup.cert 和 backup.key 是原始证书和私钥的备份，所以需要写一个脚本 reloadcmd.sh 来合并证书，日志位置可以指定，不指定默认保存在 ~/.acme.sh/acme.sh.log :\n1 2 3 4 5 6 7 8  #!/bin/sh /etc/init.d/Qthttpd.sh stop /etc/init.d/stunnel.sh stop cat /etc/stunnel/backup.cert \\ /etc/stunnel/backup.key \u0026gt; \\ /etc/stunnel/stunnel.pem /etc/init.d/stunnel.sh start /etc/init.d/Qthttpd.sh start   证书安装的各种配置会保存在 233so.com.conf，证书都会保存在域名目录（根据官方说明，不排除脚本后续更新后目录结构会发生变化），同时 CF_Key 和 CF_Email 会自动保存在 ~/.acme.sh/account.conf 供脚本下次自动使用。\n更多域名解析服务商设置: https://github.com/acmesh-official/acme.sh/wiki/dnsapi\n OSCP 域名污染 目前 Let\u0026rsquo;s Encrypty OCSP 调用的域名在国内部分地区没有被正确解析，原因是 Let\u0026rsquo;s Encrypty 使用的 Akamai a771 节点被污染。鉴于国内的运营商可能会劫持 DNS 查询，所以改 DNS 服务器地址未必有用，只能修改 hosts 指向记录来解决。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  ❯ nslookup ocsp.int-x3.letsencrypt.org 223.5.5.5 服务器: public1.alidns.com Address: 223.5.5.5 非权威应答: 名称: a771.dscq.akamai.net Addresses: 2001::1f0d:4021 69.171.244.15 Aliases: ocsp.int-x3.letsencrypt.org ocsp.int-x3.letsencrypt.org.edgesuite.net ❯ nslookup a771.dscq.akamai.net 223.5.5.5 服务器: public1.alidns.com Address: 223.5.5.5 非权威应答: 名称: a771.dscq.akamai.net Addresses: 2001::1f0d:4520 31.13.73.23   使用 IPIP 的 ping 工具，可以选择香港地区的服务器获取 ocsp.int-x3.letsencrypt.org 的正确解析记录。\n1  23.219.172.106 ocsp.int-x3.letsencrypt.org   引用来源  https://github.com/acmesh-official/acme.sh https://github.com/Yannik/qnap-letsencrypt https://forum.qnap.com/viewtopic.php?t=149687 https://www.landiannews.com/archives/72082.html ","date":"2020-05-24","description":"申请免费证书","tags":"威联通\nQNAP\nNAS\n证书\nSSL\nLet's Encrypt","title":"免费申请 Let's Encrypt 泛域名证书","uri":"/2020/05/apply-lets-encrypt-ca/"},{"content":"Windows Terminal（Windows 终端）[1] 是一个面向命令行工具和 shell（如命令提示符、PowerShell 和适用于 Linux 的 Windows 子系统 (WSL)）用户的新式终端应用程序。 它的主要功能包括多个选项卡、窗格、Unicode 和 UTF-8 字符支持、GPU 加速文本呈现引擎，还可以用于创建你自己的主题并自定义文本、颜色、背景和快捷键绑定。如今它迎来了 1.0 正式版，记录下安装和配置过程，以后也可以少翻阅点文档。\n项目地址: https://github.com/Microsoft/Terminal\n商店地址: https://aka.ms/terminal\n注意 Windows Terminal 要求 Windows 10 1903 (build 18362) 或者更高版本  安装 安装方式有多种，推荐使用微软应用商店 (Microsoft Store) 安装，后续可以接收自动更新。\n其他方式:\n Github Release，需要预先安装 Desktop Bridge VC++ v14 Redistributable Package，此方式安装不会接收自动更新 安装 Chocolatey (非官方) 包管理器的用户可以通过 choco install microsoft-windows-terminal 和 choco upgrade microsoft-windows-terminal 来安装和更新  配置 Windows Terminal 设置以 settings.json 配置文件的形式来控制，通过设置选项或者快捷键 CTRL + , 打开。\n安装 Powerline 字体 使用 Powerline 配置样式前先安装 Powerline 字体，官方推荐 Cascadia ，其中 Cascadia Code PL 或 Cascadia Mono PL，这两者包含 Powerline 字形。更多 Powerline 字体下载项目 Powerline Fonts ，运行 install.ps1 脚本安装。\n修改 settings.json 应用字体，profiles 下 defaults 增加一行 \u0026quot;fontFace\u0026quot;: \u0026quot;Cascadia Mono PL\u0026quot; (全局配置) 或者在 list 对应 Shell 配置里修改对不同 Shell 应用不同字体。\n在 PowerShell 中设置 Powerline 先决条件:\n 安装适用于 Windows 的 Git Get-ExecutionPolicy 查看是否设置为 RemoteSigned 或 Unrestricted, 管理员运行 PowerShell, 输入 Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Confirm  使用 PowerShell，安装 Posh-Git [2] 和 Oh-My-Posh [3]：\n1 2  Install-Module posh-git -Scope CurrentUser Install-Module oh-my-posh -Scope CurrentUser   自定义 PowerShell 提示符 使用 notepad $PROFILE 或所选的文本编辑器打开 PowerShell 配置文件。\n在 PowerShell 配置文件中，将以下内容添加到文件的末尾：\n1 2 3  Import-Module posh-git Import-Module oh-my-posh Set-Theme Agnoster   现在，每个新实例启动时都会导入 Posh-Git 和 Oh-My-Posh，然后从 Oh-My-Posh 设置 Agnoster 主题。 Oh-My-Posh 附带了若干内置主题。\n在本机上隐藏 username@host 的前缀格式，在 $PROFILE 配置文件中首行加入:\n1  $DefaultUser = \u0026#39;yourUsernameHere\u0026#39;   修改配色主题 要修改配色主题，只需要在全局配置或者对应 Shell 配置中加入 colorScheme 属性，并将配色方案的 name 作为值。\n1  \u0026#34;colorScheme\u0026#34;: \u0026#34;COLOR SCHEME NAME\u0026#34;   Windows Terminal 自带了几款主题:\nCampbell\n Campbell Powershell\n Vintage\n One Half Dark\n One Half Light\n Solarized Dark\n Solarized Light\n Tango Dark\n Tango Light\n 更多配色主题参考 iTerm2-Color-Schemes 项目：https://github.com/mbadolato/iTerm2-Color-Schemes\n将该项目 windowsterminal 文件夹下面对应主题的 json 文件内容完整复制到 settings.json 文件的 schemes 数组内，然后配置 colorScheme 为配色名字即可。\n修改背景图片 1 2 3 4 5 6 7 8 9  // 图片位置，可以是 .jpg、.png 或 .gif 文件 \u0026#34;backgroundImage\u0026#34;: \u0026#34;C:/Users/Jay/Pictures/Saved Pictures/xxx.jpg\u0026#34;, // 图像拉伸模式，默认值： \u0026#34;uniformToFill\u0026#34;，还可以是\u0026#34;none\u0026#34;、\u0026#34;fill\u0026#34;、\u0026#34;uniform\u0026#34; \u0026#34;backgroundImageStretchMode\u0026#34;: \u0026#34;uniformToFill\u0026#34;, // 图像对齐方式，默认值： \u0026#34;center\u0026#34;，还可以是\u0026#34;left\u0026#34;、\u0026#34;top\u0026#34;、\u0026#34;right\u0026#34;、 // \u0026#34;bottom\u0026#34;、\u0026#34;topLeft\u0026#34;、\u0026#34;topRight\u0026#34;、\u0026#34;bottomLeft\u0026#34;、\u0026#34;bottomRight\u0026#34; \u0026#34;backgroundImageAlignment\u0026#34;: \u0026#34;center\u0026#34;, // 图像不透明度，默认值： 1.0（完全透明），接受： 0-1 的浮点值的数字 \u0026#34;backgroundImageOpacity\u0026#34; : 0.3    毛玻璃效果 1 2 3 4  // 可选值：false（正常背景），true（毛玻璃效果） \u0026#34;useAcrylic\u0026#34;: true, // 不透明度，默认值： 0.5，接受： 0-1 的浮点值的数字，数字越大不透明度越高 \u0026#34;acrylicOpacity\u0026#34;: 0.5   ","date":"2020-05-21","description":"Windows Terminal","tags":"Terminal\nShell\n终端\nPowerShell\nWSL","title":"Windows Terminal 安装和配置手记","uri":"/2020/05/windows-terminal-installation-and-settings/"},{"content":"QDK 是用于构建威联通 QTS 系统 QPKG 应用的一套开发工具. QPKG 应用不仅能让用户方便地安装和删除软件包，还能让应用开发者/维护者完全控制应用在 NAS 上的安装过程.\nQDK 项目地址:\n https://github.com/qnap-dev/QDK , 直接安装在 NAS 上的 QPKG https://github.com/qnap-dev/qdk2 , 用于普通 Linux 系统 ( 比如 Debian )  QDK 快速开发指南中文版, 基于 QDK_Quick_Start_Guide_v4_eng.pdf 结合最新版本 QDK 2.3.10 改动翻译.\n什么是 QDK  QDK 用于在 QNAP Turbo NAS 上构建 QPKG 文件/应用 QDK 最初是对 QPKG SDK 的第一个正式版本的简单修改 许可协议 : GPL  下载 QDK https://download.qnap.com/QPKG/QDK/QDK_2.3.10.zip\n安装 QDK 直接通过 [ App Center ] 应用中心安装:\n      创建 QPKG 生成开发环境   SSH 连接到 NAS\n  用命令生成第一个 QPKG : qbuild --create-env MyQPKG\n  以 MyQPKG 命名的文件夹就创建好了\n1 2 3 4 5 6  $ cd MyQPKG/ $ ls arm_64/ arm-x19/ arm-x31/ arm-x41/ build_sign.csv config/ icons/ package_routines qpkg.cfg shared/ x86/ x86_64/ x86_ce53xx/       修改配置  编辑 qpkg.cfg 文件内容  QPKG_NAME : 应用名字 QPKG_VER : 应用版本 QPKG_AUTHOR : 应用作者    可以使用 vi 或者其他文本编辑器进行编辑\n 自定义 QPKG 安装命令  package_routines 内容 :  pkg_pre_install() : 安装前执行的命令 pkg_install() : 安装中执行的命令 pkg_post_install() : 安装后执行的命令 PKG_PRE_REMOVE : 卸载前执行的命令 PKG_MAIN_REMOVE : 卸载中执行的命令 PKG_POST_REMOVE : 卸载后执行的命令   shared/MyQPKG.sh 内容 :  Start : 当启动应用时执行的命令 Stop : 当停止应用时执行的命令     添加文件到 QPKG  根据不同的功能分类将应用所需的文件复制到下面相应的目录 :  shared/ : 不同架构平台共享的文件 arm_64/ arm-x19/ arm-x31/ arm-x41/ x86/ x86_64/ x86_ce53xx/ : 对应架构平台私有的文件 icons/ : 图标文件, 需要三个 gif 文件, 分别是:  MyQPKG.gif : 正常图标, 大小 64 x 64 px MyQPKG_80.gif : 大图标, 大小 80 x 80 px MyQPKG_gray.gif : 灰色图标, 用于在应用中心停止后显示的图标, 大小 64 x 64 px   config/ : 自定义应用所需配置文件    生成 QPKG 文件   使用下面的命令生成 QPKG 文件 :\n1 2 3 4  $ qbuild Creating archive with data files... Creating archive with control files... Creating QPKG package...     QPKG 文件生成在子目录 build 内 :\n1 2 3  $ cd build/ $ ls MyQPKG_0.1.qpkg MyQPKG_0.1.qpkg.md5       关于更多详细开发内容 完整开发文档英文版\n","date":"2020-05-17","description":"QDK 快速开发指南","tags":"威联通\nQNAP\nQPKG\nNAS\nQDK\nGuide\n开发指南","title":"QDK 快速开发指南中文版","uri":"/2020/05/qdk-quick-start-guide-zh/"},{"content":"个人用 QDK 将一些开源项目打包成了威联通可以直接安装的 QPKG 安装程序，方便使用，留个备份，不定时更新。\n项目地址: https://github.com/Jay-Young/qpkg\n   QPKG 最新版本 下载     Code Server     Simple Torrent 1.2.6 Click   KMS 2020-03-28 Click   Hugo 0.70.0 Click   verysync 1.3.5 Click    1. Code Server 2. Simple Torrent 下载\n 默认在 Public 共享目录下新建 downloads 和 torrents 作为下载和种子目录 默认用户名和密码: user, ctorrent. 可以通过建立环境变量修改，AUTH=user:ctorrent  3. KMS 下载\n微软官方 KMS 客户端安装密钥\n4. Hugo 下载\n5. verysync 下载\n","date":"2020-05-12","description":"QPKG 应用汇总","tags":"威联通\nQNAP\nQPKG\nNAS\nQDK","title":"个人打包的 QNAP QPKG 应用下载汇总","uri":"/2020/05/my-own-qnap-apps-list/"},{"content":"在前辈大佬的基础上，为本博客使用的主题实现友链卡片功能，并加入简单的移动页面适配。代码借鉴来自 kissshot 和 数学小兵儿 两位大佬。\n代码部分 LoveIt/layouts/shortcodes/ 下面新建 friend.html 文件：\n1 2 3 4 5 6 7 8 9 10 11 12 13  {{ if .IsNamedParams }} \u0026lt;a target=\u0026#34;_blank\u0026#34; href={{ .Get \u0026#34;url\u0026#34; }} title={{ .Get \u0026#34;name\u0026#34; }} class=\u0026#34;friendurl\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;frienddiv\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;frienddivleft\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;myfriend\u0026#34; src={{ .Get \u0026#34;logo\u0026#34; }} /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;frienddivright\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;friendname\u0026#34;\u0026gt;{{ .Get \u0026#34;name\u0026#34; }}\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;friendinfo\u0026#34;\u0026gt;{{ .Get \u0026#34;word\u0026#34; }}\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/a\u0026gt; {{ end }}   LoveIt/assets/css/_partial/_single/ 下面新建 _friend.scss 文件：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89  .friendurl { text-decoration: none !important; color: black; } .myfriend { width: 56px !important; height: 56px !important; border-radius: 50%; border: 1px solid #ddd; padding: 2px; box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.15); margin-top: 14px !important; margin-left: 14px !important; background-color: #fff; } .frienddiv { height: 92px; margin-top: 10px; width: 48%; display: inline-block !important; border-radius: 5px; background: rgba(255, 255, 255, 0.2); box-shadow: 4px 4px 2px 1px rgba(0, 0, 255, 0.2); } .frienddiv:hover { background: rgba(87, 142, 224, 0.15); } .frienddiv:hover .frienddivleft img { transition: 0.9s !important; -webkit-transition: 0.9s !important; -moz-transition: 0.9s !important; -o-transition: 0.9s !important; -ms-transition: 0.9s !important; transform: rotate(360deg) !important; -webkit-transform: rotate(360deg) !important; -moz-transform: rotate(360deg) !important; -o-transform: rotate(360deg) !important; -ms-transform: rotate(360deg) !important; } .frienddivleft { width: 92px; float: left; } .frienddivleft { margin-right: 2px; } .frienddivright { margin-top: 18px; margin-right: 18px; } .friendname { text-overflow: ellipsis; overflow: hidden; white-space: nowrap; } .friendinfo { text-overflow: ellipsis; overflow: hidden; white-space: nowrap; } @media screen and (max-width: 600px) { .friendinfo { display: none; } .frienddivleft { width: 84px; margin: auto; } .frienddivright { height: 100%; margin: auto; display: flex; align-items: center; justify-content: center; } .friendname { font-size: 14px; } }   LoveIt/assets/css/_page/ 下面修改 _single.scss，引入下面一行：\n1  @import \u0026#34;../_partial/_single/friend\u0026#34;;   展示效果 使用示例：\n1  {{\u0026lt; friend name=\u0026#34;Dillon\u0026#34; url=\u0026#34;https://github.com/dillonzq/\u0026#34; logo=\u0026#34;https://avatars0.githubusercontent.com/u/30786232?s=460\u0026amp;u=5fc878f67c869ce6628cf65121b8d73e1733f941\u0026amp;v=4\u0026#34; word=\u0026#34;LoveIt主题作者\u0026#34; \u0026gt;}}     Dillon LoveIt主题作者     kissshot 提供了某知名kms服务的大佬     数学小兵儿 数学＆计算机 我都爱    移动端隐藏说明文字，只留下名称：\n ","date":"2020-04-25","description":"友链卡片","tags":"Hugo\nLoveIt\nshortcodes\n友链\n友情链接","title":"Hugo 篇四：添加友链卡片 shortcodes","uri":"/2020/04/friend-link-shortcodes-for-hugo-loveit/"},{"content":"日前，百度网盘可谓是一波未平一波又起，no zuo no die。先是有用户举报第三方软件 Pandownload 私自分享泄露隐私，警方跨省抓人，再有百度网盘 PC 版客户端被发现默认开启用户激励计划，占用用户磁盘空间和上行带宽。\n百度的吃相正如当年开始走下坡路的迅雷一点点难看了起来。其实普通会员限速没问题，国外网盘也这么干，可惜你充钱超会依然会面临被限速的风险，充钱不能使我强力这就 ™ 很尴尬了。百度网盘本身默认就是使用 P2P 技术的，根据百度帮助中心的说明，P2P 功能是没有办法关闭的，当年的迅雷是可以关闭，虽然据说还是会偷偷上传。而现在这个所谓的用户激励计划又是怎么一回事呢？\n首先默认的 P2P 是针对你正在下载或者拥有的文件，会通过 P2P 从其他用户那里加速或者你自己分享给其他用户。而激励计划是百度网盘要占用你的磁盘 5G 空间来缓存提供类似 CDN 的功能，占用上行带宽最大 1MB/s 的速度。这种功能其实迅雷等其他公司很早做过很多类似的硬件，但也没有私自给用户开启的理由。\n目前随便搜了下，在知乎上 2 月 2 日就有讨论了，所以这个功能至少存在 2 个多月了，不是最近才有的，只是最近结合警方抓人事件被爆了出来，扩大了影响。我看了下我的百度网盘客户端，确实默认开启了激励计划，而且我有 14 个积分，也印证了这个功能存在一段时间了。在很长一段时间里，百度网盘官网也好，客户端也罢，并没有发布通告告知用户这个功能，私自占用用户资源，这才是对用户隐私的不尊重。\n说一千道一万，从目前的奖励来看，百度网盘就是想要白嫖用户。你要知道迅雷当年推出类似产品的时候，第一批用户的收益还是不错的。而百度一开始推这个功能，态度就不端正，偷偷摸摸，只想着如何收割付费用户，而不是如何提高用户体验，这样的产品很难要让人相信以后不会偷偷摸摸在后台上传。\n我个人是不会用百度网盘来存资源的（NAS 和 Office 365 足够），我开会员就是要用它的离线功能加速下载软件和一些 ED2K 资源，鉴于目前离线加速也不怎么给力了，我应该是要像当年放弃迅雷一样放弃百度了。\n可惜还是很多用户虽然对这个功能比较在意，但是离不开百度网盘的分享资源功能的话，还是得忍受着，各种小技巧估计马上会有用户分享的，所谓道高一尺魔高一丈，互相伤害呗。还有更多的用户可能并不会关心这件事，他们只要百度网盘还能下追剧资源就无所谓了。\n如果你只是要分享一些无关紧要的小东西的话，蓝奏云（普通用户限制 100M）还是个不错的选择。\n离线下载可能真的已经死了。\n","date":"2020-04-21","description":"百度网盘 no zuo no die","tags":"百度网盘\n激励计划\n隐私\nP2P\n用户选择","title":"闲聊百度网盘的骚操作“用户激励计划”","uri":"/2020/04/snapchat-baidu-netdisk/"},{"content":"今天手机正愉快地刷着 B 站，突然发现视频卡顿，于是到电脑上打开网页测试发现 DNS 解析有问题了，解析时好时坏，就像乌龟一样。\n跑到路由器里一看 CPU 其中一个核心居然吃满了，看了日志发现大量相同的记录：\n1  dnsmasq[253]: Maximum number of concurrent DNS queries reached (max: 150)   查看路由器流量分析，QNAP NAS 的 DNS 请求流量居然有好几个 GB，SSH 连上路由器，top 命令查看 ksoftirqd/0 和 kworker 占用极高，也难怪一个核心吃满，队列阻塞得一塌糊涂了。\n为了验证是 NAS 的问题，把网线拔了，果然路由器的核心占用马上就降下来了。\n问题是确定 NAS 引起的了，于是开始全网搜索解决方案，虽然找到了一些同样症状的帖子，但是基本也没什么用。\n尝试了停用 NAS 所有应用、将 NAS 从 DHCP 改为固定、重启 NAS、重置路由器、指定内网 DNS 等各种骚操作依旧不行。\n然后在各种外网论坛里翻阅，终于决定从 NAS 的 dnsmasq 服务入手。\n找到 /etc/dnsmasq.conf /etc/resolv.conf /etc/resolv.dnsmasq 三个配置文件，看到 127.0.1.1 就觉得很奇怪，虽然查了资料说是正常的配置，但还是顺手把它改成其他的 DNS 223.5.5.5，然后奇迹就出现了，路由器 CPU 核心的占用马上降下来了。\n附上最终折腾的解决方案：\n1 2 3 4 5 6 7 8  # /etc/dnsmasq.conf 找到下面内容所在行注释掉 #listen-address # /etc/resolv.conf 把 127.0.1.1 改成 223.5.5.5 nameserver 223.5.5.5 # /etc/resolv.dnsmasq 把 127.0.1.1 改成 223.5.5.5 nameserver 223.5.5.5   ","date":"2020-04-19","description":"","tags":"威联通\nQNAP\n华硕\n路由器\ndnsmasq\nksoftirqd\nkworker","title":"解决华硕路由器 CPU 核心占用 100% 问题的崎岖之路","uri":"/2020/04/asus-router-cpu-high-occupancy-fixed/"},{"content":"Code Server 3.x 版本发布也有几周了，最新版本 3.1.1 看起来应该可用度比较高了，于是就打算升级了。\n根据作者发布的注意事项来看，3.x 与 2.x 最大的不同就是不再打包成单文件了。\n信息  We\u0026rsquo;re still working on arm64 builds (Travis appears to swallow the output and then terminates the build because there\u0026rsquo;s no output).\nV3 has some significant changes that will need to be accounted for in your scripts.\n  We use semantic versioning now. The VS Code version will no longer be included in the tag or the release file name.\n  Releases are now loose files and are no longer packed into a single binary so be sure to move the entire directory. Inside the directory is an entry script code-server that will launch with the bundled Node.\n  If you want to do something like put the entry script in /usr/bin and the code-server files in /usr/lib we recommend you use a symlink: ln -s /usr/lib/code-server/code-server /usr/bin/code-server.\n  You can also run code-server with your own Node binary instead of the bundled one: node /path/to/code-server/out/node/entry.js.\n  V2 cannot update to V3 automatically due to the structural changes so you’ll need to manually download and restart code-server in order to update.\n  If you want to build or develop please check out https://github.com/cdr/code-server/blob/3.0.0/doc/CONTRIBUTING.md as the steps have changed.\n     首先停止运行 2.x 版本进程，删掉开机脚本和计划任务。\n然后把最新的 release 下载下来解压到 NAS 上运行：\n1 2 3 4 5 6 7 8  export SERVICE_URL=https://marketplace.visualstudio.com/_apis/public/gallery export ITEM_URL=https://marketplace.visualstudio.com/items # 以上两行是将编辑器的商店地址替换成微软官方的，享有比项目商店更多的插件 ./code-server --auth none --host \u0026lt;nas-ip or host name\u0026gt; --cert \u0026lt;cert\u0026gt; --cert-key \u0026lt;cert key\u0026gt; --user-data-dir \u0026lt;user data directory\u0026gt; --extensions-dir \u0026lt;extensions directory\u0026gt; \u0026amp; # 3.x版本需要指定 host，运行在 localhost 无法通过局域网或互联网访问 # --user-data-dir 和 --extensions-dir 是将 2.x 的用户数据和插件导入，不需要的话可以省略 # 不需要 ssl 部署的话，证书选项也可以关闭 # 程序默认运行在 8080 端口，可以通过 --port 选项指定为其他端口   另存为 shell 文件后，将它加入开机脚本和计划任务，重启 NAS 就可以了。\n除了使用开机脚本和计划任务之外，也可以选择将项目打包成威联通可以直接安装的 qpkg 程序包。\n首先从 App Center 手动安装开发工具 QDK，项目地址：https://github.com/qnap-dev/QDK 安装包：https://download.qnap.com/QPKG/QDK/QDK_2.3.10.zip \n安装完成以后，SSH 连接到 NAS，测试安装是否成功：\n1 2  qbuild -V # 返回信息：qbuild 2.3.10 表示安装成功   创建项目，名字随便取，比如 codeserver：\n1  qbuild --create-env codeserver   查看 codeserver 目录文件结果如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  │ build_sign.csv │ package_routines │ qpkg.cfg │ ├─arm-x19 ├─arm-x31 ├─arm-x41 ├─arm_64 ├─config ├─icons ├─shared │ codeserver.sh │ ├─x86 ├─x86_64 └─x86_ce53xx   arm 以及 x86 开头的目录是存放相应架构的文件，shared 目录是存放所有架构通用的文件，如果不需要同时开发跨架构的程序，可以直接删除所有架构对应的目录：\n1 2  cd codeserver rm -rf ./arm* \u0026amp; rm -rf ./x86* \u0026amp; rm -rf ./config   警告 使用 rm -rf 删除命令时注意路径无误，避免删除错误导致系统崩坏  修改配置信息 qpkg.cfg：\n1 2 3 4 5 6 7  QPKG_DISPLAY_NAME=\u0026#34;Code Server\u0026#34; QPKG_SERVICE_PORT=\u0026#34;8080\u0026#34; QPKG_WEBUI=\u0026#34;/\u0026#34; QPKG_WEB_PORT=\u0026#34;8080\u0026#34; QPKG_WEB_SSL_PORT=\u0026#34;8080\u0026#34; QPKG_VOLUME_SELECT=\u0026#34;3\u0026#34; QPKG_VISIBLE=\u0026#34;2\u0026#34;   端口可以改成你需要让程序运行的端口，前面提到过默认是 8080，不需要配置 ssl 证书的话，QPKG_WEB_SSL_PORT 不修改，其他的设置保持默认即可。\n解压最新 release 的 code-server，目录结构大致如下：\n1 2 3 4 5 6 7 8 9 10 11 12  ├─dist ├─lib ├─node_modules ├─out ├─src ├─code-server ├─LICENSE.txt ├─node ├─package.json ├─README.md ├─ThirdPartyNotices.txt └─yarn.lock   将所有文件复制到项目新建 /shared/bin/ 目录下：\n1 2  mkdir ./shared/bin cp -rf \u0026lt;code-server目录绝对路径\u0026gt;/* ./shared/bin   配置初始化脚本，其他的代码保持默认即可：\n1  vi ./shared/codeserver.sh   点击查看代码  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  case \u0026#34;$1\u0026#34; in start) ENABLED=$(/sbin/getcfg $QPKG_NAME Enable -u -d FALSE -f $CONF) if [ \u0026#34;$ENABLED\u0026#34; != \u0026#34;TRUE\u0026#34; ]; then echo \u0026#34;$QPKG_NAMEis disabled.\u0026#34; exit 1 fi export SERVICE_URL=https://marketplace.visualstudio.com/_apis/public/gallery export ITEM_URL=https://marketplace.visualstudio.com/items cd $QPKG_ROOT/bin ./code-server --host \u0026lt;nas-ip or host name\u0026gt; --auth none \u0026amp; ;; stop) killall -9 code-server ;; restart) $0 stop $0 start ;; *) echo \u0026#34;Usage: $0{start|stop|restart}\u0026#34; exit 1 esac exit 0      注意 前面 qpkg.cfg 有修改过端口的话，这里注意修改为同样的端口  如果还需要自定义图标的话，设计 3 个图标文件存放到 icons 目录：\n1 2 3  codeserver.gif 64×64 px 彩色 codeserver_80.gif 80×80 px 彩色 codeserver_gray.gif 64×64 px 灰色 App Center 未启用状态时显示   在项目根目录运行下面的命令构建安装包，完成后从 App Center 手动安装即可：\n1  qbuild   以 Web App 形式运行从外观上看和本地的 vs code 也没什么区别了\n","date":"2020-04-17","description":"","tags":"威联通\nQNAP\nCode Server\nNAS\nVS Code","title":"威联通：升级 Code Server 编辑器 3.x","uri":"/2020/04/upgrade-code-server-to-v3/"},{"content":"DPlayer 是一款支持弹幕的 HTML5 视频播放器，支持 HLS、FLV、MPEG DASH、WebTorrent 和其他自定义流媒体，支持弹幕、截图、热键、清晰度切换、预览图、字幕等多种功能。\n前言 说起来 LoveIt 这款主题的音乐播放器用的是 APlayer 和 MetingJS，所以我在想何不引入 APlayer 作者的另一个项目 DPlayer 视频播放器来替换掉 HTML5 简陋的默认播放器呢？\n说明 基于 DPlayer 1.25.0，HLS 0.13.2，flv.js 1.5.0 实现  引入 css 和 js 新建 LoveIt/assets/lib/dplayer 文件夹，将下面的 css 和 js 文件下载保存在此位置：\n1 2 3 4  https://cdn.jsdelivr.net/npm/hls.js@0.13.2/dist/hls.min.js https://cdn.jsdelivr.net/npm/flv.js@1.5.0/dist/flv.min.js https://cdn.jsdelivr.net/npm/dplayer@1.25.0/dist/DPlayer.min.css https://cdn.jsdelivr.net/npm/dplayer@1.25.0/dist/DPlayer.min.js   修改 LoveIt/layouts/partials/assets.html，加入以下代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  {{- /* Video */ -}} {{- if ne .Site.Params.DPlayer false -}} {{- if $scratch.Get \u0026#34;video\u0026#34; -}} {{- /* DPlayer */ -}} {{- with $CDN.dplayerCSS -}} {{- slice . | $scratch.Add \u0026#34;linkCDN\u0026#34; -}} {{- else -}} {{- slice \u0026#34;lib/dplayer/DPlayer.min.css\u0026#34; | $scratch.Add \u0026#34;linkLocal\u0026#34; -}} {{- end -}} {{- with $CDN.hlsJS -}} {{- slice . | $scratch.Add \u0026#34;scriptCDN\u0026#34; -}} {{- else -}} {{- slice \u0026#34;lib/dplayer/hls.min.js\u0026#34; | $scratch.Add \u0026#34;scriptLocal\u0026#34; -}} {{- end -}} {{- with $CDN.flvJS -}} {{- slice . | $scratch.Add \u0026#34;scriptCDN\u0026#34; -}} {{- else -}} {{- slice \u0026#34;lib/dplayer/flv.min.js\u0026#34; | $scratch.Add \u0026#34;scriptLocal\u0026#34; -}} {{- end -}} {{- with $CDN.dplayerJS -}} {{- slice . | $scratch.Add \u0026#34;scriptCDN\u0026#34; -}} {{- else -}} {{- slice \u0026#34;lib/dplayer/DPlayer.min.js\u0026#34; | $scratch.Add \u0026#34;scriptLocal\u0026#34; -}} {{- end -}} {{- end -}} {{- end -}}   如果需要设置 CDN，在 config.toml 里设置，同时设置启用 DPlayer：\n1 2 3 4 5 6 7 8 9  [params] DPlayer = true # CSS 和 JS 文件的 CDN 设置 [params.cdn] # HLS@0.13.2 flv.js@1.5.0 DPlayer@1.25.0 https://github.com/video-dev/hls.js https://github.com/bilibili/flv.js https://github.com/MoePlayer/DPlayer hlsJS = \u0026#39;\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/hls.js@0.13.2/dist/hls.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026#39; flvJS = \u0026#39;\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/flv.js@1.5.0/dist/flv.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026#39; dplayerCSS = \u0026#39;\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/dplayer@1.25.0/dist/DPlayer.min.css\u0026#34;\u0026gt;\u0026#39; dplayerJS = \u0026#39;\u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/dplayer@1.25.0/dist/DPlayer.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\u0026#39;   注意 务必保证 hls 和 flv.js 在 DPlayer 之前引入  定义 shortcode 在 LoveIt/layouts/shortcodes/ 下新建 video.html 文件：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  {{- $scratch := .Page.Scratch.Get \u0026#34;scratch\u0026#34; -}} {{- if .IsNamedParams -}} {{- if .Get \u0026#34;url\u0026#34; -}} \u0026lt;div id=\u0026#34;{{ .Get `id` }}\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; function loadDPlayer(){ let dp = new DPlayer({ container: document.getElementById({{ .Get `id` }}), autoplay: {{ .Get `autoplay` | default false }}, theme: {{ .Get `theme` | default `#b7daff` }}, loop: {{ .Get `loop` | default false }}, lang: {{ .Get `lang` | default `zh-cn` }}, screenshot: {{ .Get `screenshot` | default true }}, hotkey: {{ .Get `hotkey` | default true }}, preload: {{ .Get `preload` | default `auto` }}, logo: {{ .Get `logo` }}, volume: {{ .Get `volume` | default 0.7 }}, mutex: {{ .Get `mutex` | default true }}, video: { url: {{ .Get `url` }}, pic: {{ .Get `pic` }}, thumbnails: {{ .Get `thumbnails` }}, type: {{ .Get `type` | default `auto` }}, }, subtitle: { url: {{ .Get `sub` }}, type: {{ .Get `subtype` | default `webvtt` }}, fontSize: {{ .Get `fontsize` | default `20px` }}, bottom: {{ .Get `bottom` | default `10%` }}, color: {{ .Get `color` | default `#b7daff` }}, }, }); } document.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, loadDPlayer, !1); \u0026lt;/script\u0026gt; {{- end -}} {{- end -}} {{- $scratch.Set \u0026#34;video\u0026#34; true -}}   代码删除了 DPlayer 预设的自定义右键菜单、进度条提示点和弹幕参数。目前没有找到好用的弹幕接口，自建的话，静态博客会公开接口 API，免费的服务额度有限，付费的估计承受不起。\n在 LoveIt/assets/css/_partial/_single/ 下新建 _video.scss 样式：\n1 2 3 4 5 6 7  .dplayer { position: relative; width: 100%; height: auto; margin: 3% auto; text-align: center; }   在 LoveIt/assets/css/_page/_single.scss 以下位置引入新建的 _video.scss：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  @import \u0026#34;../_partial/_single/code\u0026#34;; @import \u0026#34;../_partial/_single/instagram\u0026#34;; @import \u0026#34;../_partial/_single/admonition\u0026#34;; @import \u0026#34;../_partial/_single/echarts\u0026#34;; @import \u0026#34;../_partial/_single/mapbox\u0026#34;; @import \u0026#34;../_partial/_single/music\u0026#34;; @import \u0026#34;../_partial/_single/bilibili\u0026#34;; @import \u0026#34;../_partial/_single/bilibilibv\u0026#34;; @import \u0026#34;../_partial/_single/qqvideo\u0026#34;; @import \u0026#34;../_partial/_single/iqiyi\u0026#34;; @import \u0026#34;../_partial/_single/youku\u0026#34;; @import \u0026#34;../_partial/_single/sohu\u0026#34;; @import \u0026#34;../_partial/_single/acfun\u0026#34;; @import \u0026#34;../_partial/_single/video\u0026#34;;   使用方法    参数名 默认值 描述     id 必须 播放器父元素唯一 id，用于处理同页面多个播放器，同页面不可重复   url 必须 视频直链地址   pic 可选 视频封面图片   thumbnails 可选 视频缩略图，可以使用 DPlayer-thumbnails 生成   type 可选，","date":"2020-04-14","description":"本文介绍如何将 HTML5 默认视频播放器替换成 DPlayer","tags":"Hugo\nLoveIt\n播放器\nDPlayer","title":"Hugo 篇三：添加 DPlayer 播放器","uri":"/2020/04/hugo-loveit-with-dplayer-supported/"},{"content":"Hugo LoveIt 主题虽然支持了 bilibili 视频的插入，再加上 hugo 自带的 youtube 和 vimeo 视频，但是也还是有点少。没有国内视频三大巨头（优酷现在掉队有点严重，可能名不副实了）似乎有些遗憾。又加上最近 B 站去 av 化，正好看到 LoveIt 项目的 issue#208 中有人提到这一点，我就试着看看能不能改改，并加点东西进去。\n前言 以某位咕咕咕 up 主的最新视频为例，旧 av 时代插入 B 站视频是下面这个样子的\n1 2 3 4 5 6  视频地址：https://www.bilibili.com/video/av882566744 插入方式： {{\u0026lt; bilibili 882566744 \u0026gt;}} 或者 {{\u0026lt; bilibili av=882566744 \u0026gt;}}   而新 bv 时代 B 站视频默认只显示 bv 号了，用老方法插入会失败。当然目前你可以用浏览器扩展或者其他方法获取到 av 号来插入，但是总有一天会迎来全面 bv 的时代。那么就需要我们手动来改造了。\nBV 大改造 看了下 LoveIt 主题的结构，发现 bilibili shortcodes 的引入和三个文件有关：\n1 2 3  themes/LoveIt/layouts/shortcodes/bilibili.html themes/LoveIt/assets/css/_partial/_single/_bilibili.scss themes/LoveIt/assets/css/_page/_single.scss   分享代码 首先来看 bilibili.html：\n1 2 3 4 5 6 7  \u0026lt;div class=\u0026#34;bilibili\u0026#34;\u0026gt; {{- if .IsNamedParams -}} \u0026lt;iframe src=\u0026#34;//player.bilibili.com/player.html?aid={{ .Get `av` }}\u0026amp;page={{ .Get `p` | default 1 }}\u0026#34; scrolling=\u0026#34;no\u0026#34; border=\u0026#34;0\u0026#34; frameborder=\u0026#34;no\u0026#34; framespacing=\u0026#34;0\u0026#34; allowfullscreen=\u0026#34;true\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; {{- else -}} \u0026lt;iframe src=\u0026#34;//player.bilibili.com/player.html?aid={{ .Get 0 }}\u0026amp;page={{ .Get 1 | default 1 }}\u0026#34; scrolling=\u0026#34;no\u0026#34; border=\u0026#34;0\u0026#34; frameborder=\u0026#34;no\u0026#34; framespacing=\u0026#34;0\u0026#34; allowfullscreen=\u0026#34;true\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; {{- end -}} \u0026lt;/div\u0026gt;   不难发现，其实就是对官方 iframe 分享链接改造。\n1  player.bilibili.com/player.html?aid=[av号]\u0026amp;page=[分p号]   那么拿到 bv 时代的官方分享链接就可以了。\n 获取的原始分享链接是下面这个样子的：\n1  \u0026lt;iframe src=\u0026#34;//player.bilibili.com/player.html?aid=882566744\u0026amp;bvid=BV1YK4y1C7CU\u0026amp;cid=172274931\u0026amp;page=1\u0026#34; scrolling=\u0026#34;no\u0026#34; border=\u0026#34;0\u0026#34; frameborder=\u0026#34;no\u0026#34; framespacing=\u0026#34;0\u0026#34; allowfullscreen=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;/iframe\u0026gt;   看起来目前官方还是 av 和 bv 并行的，为了不破坏原来的博文 av 时代视频的效果，我们新建一个 bilibilibv.html 文件：\n1 2 3 4  \u0026lt;div class=\u0026#34;bilibilibv\u0026#34;\u0026gt; \u0026lt;iframe src=\u0026#34;//player.bilibili.com/player.html?bvid={{ .Get 0 }}\u0026amp;page={{ .Get 1 | default 1 }}\u0026#34; scrolling=\u0026#34;no\u0026#34; border=\u0026#34;0\u0026#34; frameborder=\u0026#34;no\u0026#34; framespacing=\u0026#34;0\u0026#34; allowfullscreen=\u0026#34;true\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;/div\u0026gt;   为了方便也不要搞 av 时代的两种使用方法了，直接上最简单的一种方式。\n修改样式 到此为止，其实我们的 bv 时代 shortcodes 已经可以用了，但是没有修改样式，不管从外观还是排版来看都是很丑的。\n回到开头提到的三个文件之二，新建一个 _bilibilibv.scss 的文件，就是改个类名，复制了 av 时代的样式：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  .bilibilibv { position: relative; width: 100%; height: 0; padding-bottom: 75%; margin: 3% auto; text-align: center; iframe { position: absolute; width: 100%; height: 100%; left: 0; top: 0; } }   引入样式 刚刚新建的样式文件还需要用到开头的三个文件之三来引入，修改 _single.scss 如下：\n1 2 3 4 5 6  @import \u0026#34;../_partial/_single/code\u0026#34;; @import \u0026#34;../_partial/_single/instagram\u0026#34;; @import \u0026#34;../_partial/_single/admonition\u0026#34;; @import \u0026#34;../_partial/_single/echarts\u0026#34;; @import \u0026#34;../_partial/_single/bilibili\u0026#34;; @import \u0026#34;../_partial/_single/bilibilibv\u0026#34;;   在引入样式的地方，新增一行 @import \u0026quot;../_partial/_single/bilibilibv\u0026quot;;，到此大功告成。\n使用方法：\n1  {{\u0026lt; bilibilibv BV1YK4y1C7CU \u0026gt;}}     小技巧 其他视频网站的引入也是如此，先获取到官方的 iframe 分享链接，然后改造三个文件即可。  后记 在寻找各视频网站官方分享链接的过程中，意外发现了 TGideas 这个团队的内容，作为一个小白感觉就像在沙漠中找到了一片绿洲。\n https://tgideas.qq.com/doc/index.html https://tgideas.qq.com/intro.html  如果需要更多视频网站 shortcodes 的成品的话，可以去我 fork 的项目地址，切换到 develop 分支查看。目前支持 爱奇艺，腾讯视频，优酷，搜狐视频，Acfun。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  爱奇艺和搜狐不能直接用播放页面地址的视频 id，使用页面的分享按钮获取完整 iframe 地址 爱奇艺是 tvid 部分，搜狐是 bid 部分。 用法示例： {{\u0026lt; iqiyi 3060730600 \u0026gt;}} {{\u0026lt; qqvideo r0029muuhfj \u0026gt;}} {{\u0026lt; youku XMzk1NjM1MjAw \u0026gt;}} {{\u0026lt; sohu 90742150 \u0026gt;}} {{\u0026lt; acfun ac14349183 \u0026gt;}}   0202年还在使用 flash 技术的视频网站，祝你们新年快乐。\n","date":"2020-04-02","description":"本文介绍如何为 Hugo LoveIt 主题添加更多 shortcodes","tags":"Hugo\nshortcodes\n腾讯视频\n爱奇艺\n优酷","title":"Hugo 篇二：为 LoveIt 主题添加更多视频分享 shortcodes","uri":"/2020/04/hugo-loveit-with-more-video-share-shortcodes-supported/"},{"content":"上一篇博文介绍了 nps 内网穿透服务，虽然拥有 Web 配置界面，但对于新手来说可能还是略显不友好，毕竟也还需要拥有一台公网服务器。那么今天要介绍的两款产品或者说服务绝对算得上是开箱即用，老少皆宜。\n蒲公英 X1 蒲公英 X1 是贝锐科技公司旗下一款采用 Cloud VPN 技术的企业级智能组网路由器。没错，它是一台路由器。而贝锐科技旗下还拥有花生壳、向日葵等知名的产品。以前上大学的时候用过 2233.org 的二级域名 ddns 服务，印象中好像是这家公司的早期产品。\n   蒲公英 X1 简要参数  尺寸：70 毫米 X 70 毫米 X 18 毫米 处理器（CPU）：MT7628A 内存（RAM）： 64MB 闪存（FLASH）：16MB 接口：Micro USB 电源接口 × 1，100 Mbps 网口 × 1，USB-A × 1 无线网络标准：2.4GHz 300Mbps：IEEE 802.11 b/g/n    日常价格 ￥ 108，一般活动价格 ￥ 98，我是 ￥ 78 拿下的。看参数想要拿它做主路由我觉得还是算了吧，反正我看上的也只是它的旁路组网功能，即不改变现有的家庭网络结构直接通过组网实现专属内网穿透隧道。\n   电源线插电，通过网线直接将 X1 LAN 口与主路由 LAN 口连接（DHCP 功能需开启）， 打开 https://pgybox.oray.com/，通过 SN 码登录（可在路由器背面查看），默认密码是 admin 进入蒲公英管理平台，路由器首次使用需进行初始化，输入对应信息点击提交 注册 oray 账号，在智能组网栏将 X1 绑定到账号下面 点击“我要组网”，跳转至蒲公英官网管理页面，点击“立即创建网络” 填写网络名称，选择网络类型；然后添加网络成员（目前只有一台 X1），点击完成 在已经创建好了的蒲公英 VPN 网络中，点击“旁路设置” 进入旁路路由设置页面，点击“添加旁路路由” 选择 X1 为旁路路由，目标地址填写主路由所在网段，比如 192.168.1.0/24，表示网段是 192.168.1.0,子网掩码为:255.255.255.0，若子网掩码的位数不是 24 位，请根据实际情况填写 PC 或手机端安装相应的蒲公英客户端，通过 oray 账号登录轻松组网，在外面通过 4G/5G 移动网络或者公司网络就可以直接访问内网的资源了。 如果你运气还不错的话，两边的 NAT 类型还算给力的话，有可能打通 P2P 点对点隧道，无需通过蒲公英的公网服务器转发数据，实现高速访问。  注意  为了提高 P2P 连通率，建议开启主路由的 UPNP 功能和端口转发 X1 内网地址的所有端口 X1 提供终身免费的标准版转发服务，带宽是 2M，如果需要更高的转发带宽可以花钱购买，每个客户端需要额外费用    更多内容参考官方文档\nKSA KAS 是安全社区看雪论坛开发的一款内网穿透软件，目前提供 Windows，MacOS 和 Linux (x86, x64, arm64,mipsel)的客户端。KSA 的服务端和客户端集成在一个可执行文件之中，真正做到了无需配置，点击就用。\nWindows 双击运行可执行文件 ksa_win.exe，左半部分 KSA 服务端已经默认生成好 KSA ID 和密码，记住这个 KSA ID 和密码即可。点击启动服务开始运行服务端：\n MacOS 与 Windows 类似，左侧是服务端，右侧是客户端，右侧的“远程接入到 KSA 服务端”中输入 KSA ID 和密码，点击“接入服务端”即可。接入成功后如下图所示：\n Linux 解压之后，使用 sudo chmod +x ksa*命令，给 ksa 软件添加可执行权限，然后启动即可。\n1 2  chmod +x ksa* ./ksa_x64   服务端即会开启并运行，KSA ID 和 PSK 都会出现。也可以查看同目录下的 ksa.log 文件，启动日志已经写入到该文件中。\n Linux 客户端需要先配置 ksa.conf 文件。\n首先请确保没有任何 ksa 进程在执行，有则先关闭。以 x64 版本为例，killall -9 ksa_x64 杀死进程。\n将被访问设备服务端生成的 KSA ID 和 PSK 对应填到 [uid] 和 [psk] 后面并取消注释 # 号，使其生效。最终效果如下图：\n 配置完成之后，运行 ./ksa_x64 来启动即可。\n连接成功之后服务端所在的局域网的 IP（我们假设为 192.168.1.*），在客户端机器上都可以直接访问了，比如内网网络邻居也可以打开：\n 注意  此产品尚处于内测阶段，请勿在生产环境中部署，由此带来的一切后果，看雪不予承担。 KSA ID 和密码仅作为客户端与服务端连接时互相校验的用途，看雪服务器并不保存 KSA ID 和密码。 初次使用时 Windows 平台会弹出安装驱动，请允许安装驱动。 MacOS 平台可能会要求输入管理员密码。 远程接入分为 p2p 直连和 NAT 中转两种模式。 KSA 会优先选择 p2p 直连的模式，在该模式下服务端与客户端直接连接，速度快，不限量。 在 p2p 尝试失败的情况下，KSA 会启用 NAT 中转模式，在该模式下服务端与客户端之间的连接会经过看雪服务器中转，所有流量使用 AES-256-CFB 模式全局加密，看雪服务器不会保存流量、也无法解密。 在 NAT 中转模式，由于看雪服务器资源有限，会进行一定的限速限量措施，内测阶段会根据流量进行动态调整，恕不另行告知。    后记 总的来说，这两款产品对于新手来说是非常友好的，算不上折腾。如果注重稳定有移动端需求，提供商业服务的蒲公英 X1 是比较适合的。如果需求 Linux 和 MacOS 的使用，那么 KSA 是比较合适的。这里本人是比较期待 KSA 后续能够开源中转服务器上的服务端。\n部分内容引用：https://ksa.kanxue.com/index-down.htm\n","date":"2020-03-27","description":"本文介绍蒲公英 X1 和 KSA 如何打通外网访问内网资源","tags":"内网穿透\n威联通\n蒲公英\nksa\n贝锐科技","title":"威联通：内网穿透服务之蒲公英 X1 和 KSA","uri":"/2020/03/intranet-penetration-with-pgyx1-or-ksa/"},{"content":"nps 是一款轻量级、高性能、功能强大的内网穿透代理服务器。目前支持 tcp、udp 流量转发，可支持任何 tcp、udp 上层协议（访问内网网站、本地支付接口调试、ssh 访问、远程桌面，内网 dns 解析等等……），此外还支持内网 http 代理、内网 socks5 代理、p2p 等，并带有功能强大的 web 管理端。\n前言 内网穿透解决方案有不少，开源的比如 nps、frp、lanproxy、ngrok 和 zerotier 等，现成的商业服务有贝锐科技提供的花生壳、蒲公英之类的产品。个人现在同时部署的有三款产品，nps、ksa（看雪论坛的服务）和蒲公英 X1。今天要介绍的是这款 nps，自带 web 管理界面，支持 p2p 连接，支持数据压缩传输。\n说明 本文基于以下软硬件系统测试，不能完全保证其他系统的兼容性。\n QNAP TS-453Bmini 2+8G 内存 QTS 4.4.1.1216 nps 0.26.5 Windows 10 1909 64 位 专业版和家庭版    背景  做微信公众号开发、小程序开发等\u0026mdash;-\u0026gt; 域名代理模式 想在外网通过 ssh 连接内网的机器，做云服务器到内网服务器端口的映射，\u0026mdash;-\u0026gt; tcp 代理模式 在非内网环境下使用内网 dns，或者需要通过 udp 访问内网机器等\u0026mdash;-\u0026gt; udp 代理模式 在外网使用 HTTP 代理访问内网站点\u0026mdash;-\u0026gt; http 代理模式 搭建一个内网穿透 ss，在外网如同使用内网 vpn 一样访问内网资源或者设备\u0026mdash;-\u0026gt; socks5 代理模式  特点  协议支持全面，兼容几乎所有常用协议，例如 tcp、udp、http(s)、socks5、p2p、http 代理\u0026hellip; 全平台兼容(linux、windows、macos、群辉等)，支持一键安装为系统服务 控制全面，同时支持服务端和客户端控制 https 集成，支持将后端代理和 web 服务转成 https，同时支持多证书 操作简单，只需简单的配置即可在 web ui 上完成其余操作 展示信息全面，流量、系统信息、即时带宽、客户端版本等 扩展功能强大，该有的都有了（缓存、压缩、加密、流量限制、带宽限制、端口复用等等） 域名解析具备自定义 header、404 页面配置、host 修改、站点保护、URL 路由、泛解析等功能 服务端支持多用户和用户注册功能  安装 nps 分为服务端和客户端。服务端安装需要一台公有云服务器，比如白嫖的腾讯云、阿里云的学生主机。客户端使用分为两部分：被访问端和访问端，比如内网的 TS 453Bmini 即被访问端，在外使用的笔记本或者单位的台式机即访问端。\n项目地址：https://github.com/ehang-io/nps\nrelease 页面 TS 453Bmini 对应版本服务端和客户端。\n 服务端 在云服务器上执行以下命令：\n1 2 3  wget https://github.com/ehang-io/nps/releases/download/v0.26.5/linux_amd64_server.tar.gz mkdir nps \u0026amp;\u0026amp; tar -zxvf linux_amd64_server.tar.gz -C nps cd nps \u0026amp;\u0026amp; ./nps install   nps 已经成功安装到系统服务，可以使用 sudo nps start|stop|restart 来启动|停止|重启服务。\n建议修改配置文件的 web_password、web_username 和 auth_crypt_key，即 web 界面管理密码、web 界面管理账号和 16 位 aes 加密密钥。\n如果客户端需要使用 p2p 模式，可以将 p2p_ip 和 p2p_port 启用。\n1  vi /etc/nps/conf/nps.conf   服务端配置文件说明：\n   名称 含义     web_port web 管理端口   web_password web 界面管理密码   web_username web 界面管理账号   web_base_url web 管理主路径,用于将 web 管理置于代理子路径后面   bridge_port 服务端客户端通信端口   https_proxy_port 域名代理 https 代理监听端口   http_proxy_port 域名代理 http 代理监听端口   auth_key web api 密钥   bridge_type 客户端与服务端连接方式 kcp 或 tcp   public_vkey 客户端以配置文件模式启动时的密钥，设置为空表示关闭客户端配置文件连接模式   ip_limit 是否限制 ip 访问，true 或 false 或忽略   flow_store_interval 服务端流量数据持久化间隔，单位分钟，忽略表示不持久化   log_level 日志输出级别   auth_crypt_key 获取服务端 authKey 时的 aes 加密密钥，16 位   p2p_ip 服务端 Ip，使用 p2p 模式必填   p2p_port p2p 模式开启的 udp 端口   pprof_ip debug pprof 服务端 ip   pprof_port debug pprof 端口    保存配置文件后重启 nps\n1  nps restart   如果以后要升级，首先停止 nps，再升级。\n1 2  nps stop nps-update update   到此，服务端的安装和基本配置已经完成，接下去就是客户端的配置使用了。\n注意 阿里云等服务器可能需要额外在安全组配置中打开 nps 需要用到的端口，比如 TCP 8024/8080/8001/8003/8004，UDP 6000~6002。  客户端 Web 配置 nps 支持配置文件和无配置文件使用，这里介绍无配置文件，所有配置在 web 端设置。\n登录 web 界面（云服务器 ip:8080），默认用户名：admin，默认密码：123。如果之前安装服务端时有修改web_password和web_username，请自行修改。\n 添加一个客户端，根据需求进行配置，无论访问端使用何种模式，这一步都是必须的设置。\n 如果不需要客户端配置文件连接，可以按照如下设置：\n  新增保存后，点击客户端记录前面的 + 号，主要关注客户端命令这一行，稍后会用到。顺带可以看下配置是否正确，如果需要修改可以点击选项下面的编辑按钮。\n 接下来创建一个 p2p 连接，在刚创建的客户端查看下面点击隧道，新增一个 p2p 隧道。\n 模式选择 p2p，目标填写被访问内网机器的 IP:端口（比如 192.168.50.100:8080），唯一标识密钥随便填。\n注意 如果新建多个 p2p 或私密代理隧道，唯一标识密钥不能重复。  新增保存后，点击隧道记录前面的 + 号，同样关注访问端命令这一行。\n到此，web 端配置结束，如果需要更多隧道模式，参考官方文档。\n访问使用 内网 TS 453Bmini 上将 npc 客户端安装到系统服务，查看客户端命令：\n1 2 3 4  wget https://github.com/ehang-io/nps/releases/download/v0.26.6/linux_amd64_client.tar.gz mkdir npc \u0026amp;\u0026amp; cd npc ./npc install -server=云服务器IP:8024 -vkey=客户端的密钥 -type=tcp npc start   到 web 客户端界面查看连接一栏中客户端是否在线。\n接下来配置访问端，以 Windows 版本客户端为例。\n解压下载下来的压缩包 windows_amd64_client.tar.gz，在目录下管理员运行 powershell 或 cmd 执行以下命令将 npc 安装到系统服务：\n1  ./npc.exe install   编写批处理文件控制访问连接，或者直接在 cmd 中直接运行：\n1  npc -server=云服务器IP:8024 -vkey=客户端的密钥 -type=tcp -password=隧道密钥 -target=内网机器IP:端口   注意 如果出现 connect to the target failed, maybe the nat type is not support p2p错误说明客户端和访问端的 NAT 类型不支持 p2p 隧道连接。\n如果出现 new conn, P2P can not penetrate successfully, traffic will be transferred through the server，说明 p2p 隧道没有成功建立，数据通过云服务器转发。\n  如果能成功打通 p2p 隧道，就可以通过 127.0.0.1:2000 以 p2p 高速访问内网服务了。\n技巧 NAT 类型检测\n1  npc nat -stun_addr=stun.stunprotocol.org:3478   如果 p2p 双方都是 Symmetric Nat，肯定不能成功，其他组合都有较大成功率。stun_addr 可以指定 stun 服务器地址。\n  后记 这款内网穿透工具的功能还是很丰富的，其他隧道模式可以参考官方文档研究下。\n","date":"2020-03-24","description":"本文介绍如何用NPS实现威联通内网穿透","tags":"内网穿透\n威联通\nnps\np2p","title":"威联通：内网穿透解决方案之自建NPS服务","uri":"/2020/03/install-nps-on-qnap-nas/"},{"content":" 前言 静态博客系统有很多，为什么选择 Hugo 呢？\n  独立二进制文件，免去各种复杂的环境配置，部署简单快速 基于 Markdown 写作，学习成本低 免费开源，渲染速度快，主题扩展丰富   说明 本文基于以下软硬件系统测试，不能完全保证其他系统的兼容性。\n QNAP TS-453Bmini 2+8G 内存 QTS 4.4.1.1216 hugo_extended_0.67.1_Linux-64bit.tar.gz    安装 警告 任何基于实机的操作都有可能造成 QTS 系统无法挽回的错误，除非你很明确知道这条命令要做什么。  从 Hugo 选择适合 TS-453Bmini 系统的 hugo_extended_0.67.1_Linux-64bit.tar.gz 下载到 NAS。\ntar -zxvf hugo_extended_0.67.1_Linux-64bit.tar.gz解压得到 hugo 二进制文件。\n将 hugo 复制到自己认为合适的目录，并以chmod +x hugo命令赋予可执行权限。\n此时通过 hugo help 测试运行发现会报错 错误 /lib/libstdc++.so.6: versionGLIBCXX_3.4.21\u0026rsquo; not found` \n查阅相关资料后发现 /lib/libstdc++.so.6 链接来自 /lib/libstdc++.so.6.0.20，并没有包含 GLIBCXX_3.4.21，需要将 /share/CACHEDEV1_DATA/.qpkg/CodexPack/usr/lib/x86_64-linux-gnu/libstdc++.so.6 软链接到 /lib/libstdc++.so.6.0.20，并将 hugo 加入 PATH 实现全局运行。\n1 2  ln -sf /share/CACHEDEV1_DATA/.qpkg/CodexPack/usr/lib/x86_64-linux-gnu/libstdc++.so.6 /lib/libstdc++.so.6.0.20 ln -sf /your-hugo-path/hugo /usr/local/bin/hugo   注意  libstdc++.so.6 需要安装 CodexPack 套件，这是多媒体管理的硬件加速转码用的，一般都会装的 替换your-hugo-path为你自己的 hugo 所在目录    为避免长期运行失效，可以将上面的 shell 脚本加入开机启动和定时任务，具体请参考另一篇博文。\n注意 当然，你也可以选择我打包的 qpkg 安装包：下载地址，密码:233so  使用 如果使用hugo help测试运行返回如下信息，则说明 Hugo 已经成功安装。\n点击展开  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65  $ hugo help hugo is the main command, used to build your Hugo site. Hugo is a Fast and Flexible Static Site Generator built with love by spf13 and friends in Go. Complete documentation is available at https://gohugo.io/. Usage: hugo [flags] hugo [command] Available Commands: check Contains some verification checks config Print the site configuration convert Convert your content to different formats env Print Hugo version and environment info gen A collection of several useful generators. help Help about any command import Import your site from others. list Listing out various types of content new Create new content for your site server A high performance webserver version Print the version number of Hugo Flags: -b, --baseURL string hostname (and path) to the root, e.g. https://spf13.com/ -D, --buildDrafts include content marked as draft -E, --buildExpired include expired content -F, --buildFuture include content with publishdate in the future --cacheDir string filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/ --cleanDestinationDir remove files from destination not found in static directories --config string config file (default is path/config.yaml|json|toml) --configDir string config dir (default \u0026#34;config\u0026#34;) -c, --contentDir string filesystem path to content directory --debug debug output -d, --destination string filesystem path to write files to --disableKinds strings disable different kind of pages (home, RSS etc.) --enableGitInfo add Git revision, date and author info to the pages -e, --environment string build environment --forceSyncStatic copy all files when static is changed. --gc enable to run some cleanup tasks (remove unused cache files) after the build -h, --help help for hugo --i18n-warnings print missing translations --ignoreCache ignores the cache directory -l, --layoutDir string filesystem path to layout directory --log enable Logging --logFile string log File path (if set, logging enabled automatically) --minify minify any supported output format (HTML, XML etc.) --noChmod don\u0026#39;t sync permission mode of files --noTimes don\u0026#39;t sync modification time of files --path-warnings print warnings on duplicate target paths etc. --quiet build in quiet mode --renderToMemory render to memory (only useful for benchmark testing) -s, --source string filesystem path to read files relative from --templateMetrics display metrics about template executions --templateMetricsHints calculate some improvement hints when combined with --templateMetrics -t, --theme strings themes to use (located in /themes/THEMENAME/) --themesDir string filesystem path to themes directory --trace file write trace to file (not useful in general) -v, --verbose verbose output --verboseLog verbose logging -w, --watch watch filesystem for changes and recreate as needed Use \u0026#34;hugo [command] --help\u0026#34; for more information about a command.      新建站点 在终端中执行依次执行以下命令\n1 2 3  hugo new site /your-site-path/your-site-name cd /your-site-path/your-site-name ls   注意 替换your-site-path和your-site-name为你自己的目录  初始站点目录结构如下\n1 2 3 4 5 6 7 8  your-site-name 你的站点 ├─ archetypes 每一篇 markdown 博文的默认设置模板 ├─ content 站点内容，未来我们攥写博文原稿都在这里 ├─ data 存储网站的配置、数据文件 ├─ layouts 存储用来渲染 content 目录下面内容的模版文件，一般使用主题对应的 layouts ├─ static 存储图片、js、css 等静态资源文件 ├─ themes 主题样式，可以通过模板快速建立站点 └─ config.toml 站点全局配置文件   安装主题 LoveIt 是一个简洁、优雅且高效的 Hugo 博客主题。\n它的原型基于 LeaveIt 主题 和 KeepIt 主题。\nLoveIt 主题的仓库是: https://github.com/dillonzq/LoveIt\n你可以下载主题的 最新版本 \u0026nbsp;.zip 文件 并且解压放到 themes 目录。\n另外, 也可以直接把这个主题克隆到 themes 目录:\n1  git clone -b master https://github.com/dillonzq/LoveIt.git themes/LoveIt   或者, 初始化你的项目目录为 git 仓库, 并且把主题仓库作为你的网站目录的子模块:\n1 2  git","date":"2020-03-21","description":"本文介绍如何在威联通NAS上部署hugo博客系统","tags":"QNAP\nhugo\n威联通\n博客\nNAS\nLoveIt","title":"Hugo 篇一：在威联通 NAS 上生成博客并部署 Pages 服务","uri":"/2020/03/install-hugo-on-qnap-nas/"},{"content":"code-server 是基于微软 Visual Studio Code 项目打造的远程编辑器，可以运行在服务器，客户端通过浏览器访问即可使用。\n更新 目前 code-server 已经发布 3.0 Pre-release，版本改动比较大，可以期待正式版。  前言 说明 本文基于以下软硬件系统测试，不能完全保证其他系统的兼容性。\n QNAP TS-453Bmini 2+8G 内存 QTS 4.4.1.1216 code-server 1.41.1 with chinese-language-pack 1.41.0    基于 docker 的 code-server 安装教程有很多，比如这一篇群晖的安装。打包好的镜像也有很多，官方的 codercom/code-server，第三方的比如 linuxserver/code-server 和 xiumu/code-server-zh-cn。另外你也可以自己打包，容器的好处确实很多，即开即用，但是我的原则就是能上实机就上实机，能瞎折腾就瞎折腾。\n废话不多说，直接开始！\n安装 警告 任何基于实机的操作都有可能造成 QTS 系统无法挽回的错误，除非你很明确知道这条命令要做什么。  下载并安装中文语言包 从 code-server 项目的 Release 页面根据你的机型选择 linux-arm64 或者 linux-x86_64 下载下来，解压到 NAS 上，注意 code-server 这个文件就是我们所需的已经编译好的程序文件。\nSSH 连接到 NAS 系统，切换到 code-server 所在目录。如何开启 SSH\n首先我们先安装中文语言包插件，从 vscode官方市场 下载适配的中文语言包。目前 code-server 最新的版本是 1.41.1，我测试了 1.41.0 版本的中文语言包能够正常使用，通过浏览器抓包（F12）得到下载地址，替换相应的版本号即可构造需要版本的地址。\n1  https://marketplace.visualstudio.com/_apis/public/gallery/publishers/MS-CEINTL/vsextensions/vscode-language-pack-zh-hans/\u0026lt;version\u0026gt;/vspackage     Chinese-Language-Pack   插件安装命令\n1  ./code-server --install-extension \u0026lt;your-language-pack-path\u0026gt;   插件卸载命令\n1 2  ./code-server --uninstall-extension \u0026lt;extension-id\u0026gt; # extesion-id在/\u0026lt;your-user-path\u0026gt;/.local/share/code-server/extensions目录下面查看   注意 更多 code-server 命令请使用帮助命令查看 code-server -h  脚本启动 codes-erver 由于 SSH 直接启动 code-server，断开 SSH 以后会关闭，而且也需要避免重启和系统升级带来的问题，所以需要写个 shell 脚本加入计划任务和开机启动。\n启用默认级别日志，不启用 ssl 证书，不启用密码认证，默认使用 8080 端口，如果与其他服务有冲突请使用--port \u0026lt;port-number\u0026gt;自行修改。有需要可以使用--cert \u0026lt;your-cert-path\u0026gt;和--cert-key \u0026lt;your-cert-key-path\u0026gt;选项启用 ssl 证书（腾讯云有免费一年的 TrustAsia 证书），使用--auth password选项，同时设置系统环境变量export PASSWORD=\u0026quot;your-own-password\u0026quot;来设置密码认证。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  #!/bin/sh # 本脚本用于管理code-server的启动、停止、重启 # 请提前安装好code-server版本对应的中文语言包，vscode官方插件市场（https://marketplace.visualstudio.com/）： # code-server --install-extension \u0026lt;your-language-pack-path\u0026gt; 安装插件 # code-server -v 查看版本 # code-server -log \u0026lt;level\u0026gt; 设置日志输出级别，默认info，一共有\u0026#39;critical\u0026#39;, \u0026#39;error\u0026#39;,\u0026#39;warn\u0026#39;, \u0026#39;info\u0026#39;, \u0026#39;debug\u0026#39;, \u0026#39;trace\u0026#39;, \u0026#39;off\u0026#39;7个级别 # 日志存储位置：\u0026lt;your-user-path\u0026gt;/.local/code-server/logs，建议定时清理 # 更多code-server命令请使用帮助 code-server -h # case \u0026#34;$1\u0026#34; in start) sudo /\u0026lt;your-code-server-path\u0026gt;/code-server --locale zh-cn --auth none \u0026amp;\u0026gt;/dev/null ;; stop) sudo killall -9 code-server \u0026amp;\u0026gt;/dev/null ;; restart) $0 stop $0 start ;; *) echo \u0026#34;Usage: $0{start|stop|restart}\u0026#34; exit 1 esac exit 0   本来想通过修改 daemon_mgr.conf 守护进程配置文件加入后台，发现重启 NAS 后会丢失用户修改的内容，还是只能通过计划任务和开机启动脚本来实现稳定运行。\nQTS 的计划任务配置文件在 /etc/config/crontab，可以按照自己的需求设置定时重启任务\n1  0 0 * * * /\u0026lt;your-shell-script-path\u0026gt;/\u0026lt;you-shell-script\u0026gt; restart \u0026amp;\u0026gt;/dev/null   crontab 命令编写可以参考此处\nQTS 自带也有 autorun.sh 开机脚本管理，虽然重启 NAS 不会丢失，但是 QTS 系统升级后会丢失，所以推荐安装第三方商店里的 BashIT 来管理。想要做到完美可以用 QDK 打包成 qpkg 安装。\n1  daemon_mgr code-server start \u0026#34;/\u0026lt;your-shell-script-path\u0026gt;/\u0026lt;you-shell-script\u0026gt; start\u0026#34; \u0026amp;\u0026gt;/dev/null   重启 NAS 后，管理脚本会自动运行 code-server，浏览器打开http://\u0026lt;your-nas-ip\u0026gt;:8080/即可使用。\n  code-server-online-in-browser   后记 如果你的 Windows 上安装了 vscode，那么可以把 %userprofile%/.vscode/ 下面的 extensions 目录直接复制到/\u0026lt;your-user-path\u0026gt;/.local/share/code-server/下面覆盖相应的插件目录，如果插件能够兼容，启动 code-server 后就能直接使用了。（不推荐使用，避免隐形的不兼容问题）\n查看 log 来定位问题 /\u0026lt;your-user-path\u0026gt;/.local/share/code-server/logs  搜索 issues 来解决问题 https://github.com/cdr/code-server/issues  本文只是介绍编辑器的安装，不是集成开发环境的 IDE 的部署，所以能不能兼容大多数开发环境就不清楚了。\n威联通在B站有个比较惨的官方号，没事可以关注，也许能获得有用的信息，传送门。\n","date":"2020-03-21","description":"本文介绍如何在威联通NAS上部署自己的vscode编辑器","tags":"威联通\nQNAP\nCode Server\nNAS\nVS Code","title":"威联通：“私人定制”在线代码编辑器","uri":"/2020/03/qnap-codeserver-self-host/"},{"content":"新 Microsoft Edge 浏览器基于 Google 的开源项目 Chromium ，针对 Windows 10 进行优化。一个微软账号，跨平台同步，和 Chrome 扩展通用，官方扩展商店也越来越完善。\n 更新 Microsoft Edge v83 已经正式支持扩展同步功能！  前言 如果你想绕过开发者模式直接部署本地 crx 文件，如果你是一个 IT 运维管理着几十台 PC 想要快速部署大量在线扩展，如果你也只是跟我一样闲得蛋疼，不妨接着往下看看如何在 Windows 上通过注册表来实现安装扩展。\n说明 本文基于 Windows 10 1909 专业版、Edge 80.0.361.57 正式版测试实现  警告 修改注册表有风险，请提前做好注册表和浏览器数据备份。想要删除扩展需要删除相应的注册表键值，直接在浏览器中删除可能会发生奇奇怪怪的问题。  手动修改注册表 本地版 如果你拥有本地 crx 文件，苦于开发模式加载压缩包每次启动的提示，可以通过构造如下注册表值来实现。\n 打开https://robwu.nl/crxviewer这个网址，上传你的 crx 文件    robwu网站   在左边栏点击manifest.json，记录下version后面的版本号    manifest.json   点击上方的Show analysis，记录下Extension ID后面那一串唯一 ID    Show analysis   打开注册表，Edge 在HKEY_CURRENT_USER\\Software\\Microsoft\\Edge\\Extensions下面新建项，命名为第 3 步中记录的唯一 ID    regedit_edge    在右边新建一个字符串path，将它的值修改为 crx 文件在你电脑上的绝对路径，比如C:\\Program Files (x86)\\Internet Download Manager\\IDMGCExt.crx（IDM 的扩展就是在安装软件的时候这样被自动安装上去的）\n  继续新建一个字符串，命名为version，将它的值修改为第 2 步中的版本号，比如6.36.5\n  等待扩展安装成功，然后手动启用下扩展。\n  在线版 如果你想安装来自 Edge 扩展商店 或 Chrome 扩展商店 的扩展，也可以通过构造如下注册表值来实现。\n  从官方商店直接搜索扩展，记录下网址。\n  在HKEY_CURRENT_USER\\Software\\Microsoft\\Edge\\Extensions下新建项，命名为网址后缀类似oogbnpmeihfgnccdnmmlgicknopghhma这样的唯一 ID\n  右边新建两个字符串path和update_url，path的值是第 1 步的网址，而update_url的值，Edge 商店是https://extensionwebstorebase.edgesv.net/v1/crx，Chrome 商店是http://clients2.google.com/service/update2/crx\n    regedit_online   等待扩展安装成功，然后手动启用下扩展。在线版的扩展后续应该能够自动更新，这个要等待时间验证了。  编写 reg 文件批量导入 1 2 3 4 5 6 7 8  Windows Registry Editor Version 5.00 [HKEY_CURRENT_USER\\Software\\Microsoft\\Edge\\Extensions\\llhcnbijpnechllogkacbcjmkcgjbjfi] \u0026#34;path\u0026#34;=\u0026#34;https://microsoftedge.microsoft.com/addons/detail/llhcnbijpnechllogkacbcjmkcgjbjfi\u0026#34; \u0026#34;update_url\u0026#34;=\u0026#34;https://extensionwebstorebase.edgesv.net/v1/crx\u0026#34; [HKEY_CURRENT_USER\\Software\\Microsoft\\Edge\\Extensions\\ngpampappnmepgilojfohadhhmbhlaek] \u0026#34;path\u0026#34;=\u0026#34;C:\\Program Files (x86)\\Internet Download Manager\\IDMGCExt.crx\u0026#34; \u0026#34;version\u0026#34;=\u0026#34;6.36.5\u0026#34;   用任意文本编辑器保存为 reg 文件，然后导入注册表来实现扩展的批量部署安装。\n后记 折腾到此结束，再次强调删除扩展须删除相应的注册表键值，否则可能会发生意外。\n部分内容引用自：Google Chrome Dev\n","date":"2020-03-20","description":"本文介绍基于注册表安装在线和本地扩展的小技巧","tags":"Edge\nChromium\nMicrosoft\n注册表\n浏览器\n扩展","title":"浏览器小技巧：通过注册表为Chromium Edge安装扩展","uri":"/2020/03/install-edge-extensions-via-registry/"},{"content":"  Dillon LoveIt主题作者     kissshot 提供了某知名kms服务的大佬     数学小兵儿 数学＆计算机 我都爱     思有云 以不折腾为目标的折腾,才是折腾的最高境界!     Sukka 童话只美在真实却从不续写    ","date":"0001-01-01","description":"","tags":"","title":"传送门","uri":"/friends/"}]